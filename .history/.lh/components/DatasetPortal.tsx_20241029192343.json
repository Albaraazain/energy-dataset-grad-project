{
    "sourceFile": "components/DatasetPortal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 55,
            "patches": [
                {
                    "date": 1730125478158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730125979891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,23 @@\n+'use client';  // Add this at the very top of the file\r\n+\r\n import React, { useState } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Home, Activity, \r\n   BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n \r\n+type Category = {\r\n+  id: number;\r\n+  title: string;\r\n+  icon: React.ReactNode;\r\n+  description: string;\r\n+};\r\n+\r\n+type Datasets = {\r\n+  [key: number]: string[];\r\n+};\r\n const DatasetPortal = () => {\r\n-  const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState(null);\r\n+  const [searchTerm, setSearchTerm] = useState<string>('');\r\n+  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n \r\n   const categories = [\r\n     {\r\n       id: 1,\r\n"
                },
                {
                    "date": 1730126089562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,218 @@\n+'use client';  // Add this at the very top of the file\r\n+\r\n+import React, { useState } from 'react';\r\n+import { Search, ChevronRight, Database, Sun, Home, Activity, \r\n+  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n+\r\n+type Category = {\r\n+  id: number;\r\n+  title: string;\r\n+  icon: React.ReactNode;\r\n+  description: string;\r\n+};\r\n+\r\n+type Datasets = {\r\n+  [key: number]: string[];\r\n+};\r\n+const DatasetPortal = () => {\r\n+  const [searchTerm, setSearchTerm] = useState<string>('');\r\n+  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+\r\n+  const categories = [\r\n+    {\r\n+      id: 1,\r\n+      title: \"Research Papers\",\r\n+      icon: <Database className=\"w-6 h-6\" />,\r\n+      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      title: \"Solar Production\",\r\n+      icon: <Sun className=\"w-6 h-6\" />,\r\n+      description: \"Solar generation data and geographical information systems\"\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      title: \"Energy Consumption\",\r\n+      icon: <Activity className=\"w-6 h-6\" />,\r\n+      description: \"Residential and commercial energy consumption datasets\"\r\n+    },\r\n+    {\r\n+      id: 4,\r\n+      title: \"Load Monitoring\",\r\n+      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n+      description: \"NILM datasets and appliance energy usage monitoring\"\r\n+    },\r\n+    {\r\n+      id: 5,\r\n+      title: \"Building Energy\",\r\n+      icon: <Building2 className=\"w-6 h-6\" />,\r\n+      description: \"Building energy data and efficiency metrics\"\r\n+    },\r\n+    {\r\n+      id: 6,\r\n+      title: \"Smart Meters\",\r\n+      icon: <Gauge className=\"w-6 h-6\" />,\r\n+      description: \"Smart meter data and implementation resources\"\r\n+    },\r\n+    {\r\n+      id: 7,\r\n+      title: \"Environmental\",\r\n+      icon: <Cloud className=\"w-6 h-6\" />,\r\n+      description: \"Climate and environmental impact data\"\r\n+    },\r\n+    {\r\n+      id: 8,\r\n+      title: \"Energy Tools\",\r\n+      icon: <Leaf className=\"w-6 h-6\" />,\r\n+      description: \"Energy data portals and analysis tools\"\r\n+    }\r\n+  ];\r\n+\r\n+  const datasets = {\r\n+    1: [\r\n+      \"IEEE Paper: Document 9826532\",\r\n+      \"ArXiv Paper: 2307.00142\",\r\n+      \"IEEE Paper: Document 10387673\",\r\n+      \"ArXiv Paper: 2102.12578\",\r\n+      \"MDPI Energies Journal Articles\"\r\n+    ],\r\n+    2: [\r\n+      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n+      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n+      \"EMHIRES Solar Generation Time Series\",\r\n+      \"Solcast Data Specifications\",\r\n+      \"NASA POWER Project\"\r\n+    ],\r\n+    3: [\r\n+      \"EIA Residential Consumption Data 2020\",\r\n+      \"Building Data Genome 2\",\r\n+      \"UK-DALE Disaggregated Dataset\",\r\n+      \"Smart Meter Energy Use Data\",\r\n+      \"Electric Power Consumption Dataset\"\r\n+    ],\r\n+    4: [\r\n+      \"UK-DALE Disaggregated Dataset\",\r\n+      \"GitHub: NILM Tools and Resources\",\r\n+      \"SHEd Dataset - NILM\",\r\n+      \"Household Appliances Power Consumption\",\r\n+      \"Appliances Energy Prediction Dataset\"\r\n+    ],\r\n+    5: [\r\n+      \"Better Buildings Solution Center\",\r\n+      \"Building Data Genome 2\",\r\n+      \"NREL Buildings Benchmark\",\r\n+      \"EnergySage - Whole Home Solutions\",\r\n+      \"Intelligent Energy Management System\"\r\n+    ],\r\n+    6: [\r\n+      \"Smart Meter Energy Use Data in London\",\r\n+      \"CRU: Smart Meters and Services\",\r\n+      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n+    ],\r\n+    7: [\r\n+      \"International Renewable Energy Agency (IRENA)\",\r\n+      \"GitHub: ClimateSet by RolnickLab\",\r\n+      \"CDP Data Portal\"\r\n+    ],\r\n+    8: [\r\n+      \"Global Energy Monitor\",\r\n+      \"Utility Rate Database - OpenEI\",\r\n+      \"Better Buildings Solution Center\",\r\n+      \"NREL Data and Tools\",\r\n+      \"U.S. Energy Information Administration (EIA)\"\r\n+    ]\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-[#000000] text-white overflow-x-hidden\">\r\n+      {/* Hero Section with Tesla-like gradient */}\r\n+      <div className=\"relative h-[90vh] flex items-center justify-center overflow-hidden\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-900/40 via-purple-900/40 to-black\" />\r\n+        <div \r\n+          className=\"absolute inset-0 opacity-30\"\r\n+          style={{\r\n+            backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n+            backgroundSize: '30px 30px'\r\n+          }}\r\n+        />\r\n+        <div className=\"relative z-10 text-center px-4 max-w-4xl mx-auto\">\r\n+          <h1 className=\"text-5xl md:text-7xl font-bold mb-8 tracking-tight\">\r\n+            Energy Dataset Portal\r\n+          </h1>\r\n+          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed\">\r\n+            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n+          </p>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Floating Search Bar with Glass Effect */}\r\n+      <div className=\"max-w-4xl mx-auto px-4 -mt-20 relative z-20\">\r\n+        <div className=\"bg-white/10 backdrop-blur-xl rounded-full p-2 flex items-center border border-white/10 shadow-lg\">\r\n+          <Search className=\"w-6 h-6 text-gray-400 ml-4\" />\r\n+          <input\r\n+            type=\"text\"\r\n+            placeholder=\"Search datasets...\"\r\n+            className=\"w-full bg-transparent border-none focus:outline-none text-white px-4 py-3 text-lg placeholder-gray-400\"\r\n+            value={searchTerm}\r\n+            onChange={(e) => setSearchTerm(e.target.value)}\r\n+          />\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Categories Grid with Glass Cards */}\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-24\">\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+          {categories.map((category) => (\r\n+            <button\r\n+              key={category.id}\r\n+              onClick={() => setSelectedCategory(category.id)}\r\n+              className={`group p-8 rounded-2xl transition-all duration-500 ${\r\n+                selectedCategory === category.id\r\n+                  ? 'bg-white/20 backdrop-blur-xl'\r\n+                  : 'bg-white/10 hover:bg-white/15'\r\n+              } border border-white/10 backdrop-blur-lg hover:transform hover:-translate-y-1`}\r\n+            >\r\n+              <div className=\"flex items-center justify-between mb-6\">\r\n+                <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\r\n+                  selectedCategory === category.id ? 'bg-white/20' : 'bg-white/10'\r\n+                } group-hover:bg-white/20 transition-all duration-300`}>\r\n+                  {category.icon}\r\n+                </div>\r\n+                <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                  selectedCategory === category.id ? 'translate-x-1' : 'group-hover:translate-x-1'\r\n+                }`} />\r\n+              </div>\r\n+              <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+              <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+            </button>\r\n+          ))}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Dataset List with Smooth Transitions */}\r\n+      {selectedCategory && (\r\n+        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n+          <div className=\"bg-white/10 backdrop-blur-xl rounded-2xl p-8 border border-white/10\">\r\n+            <h2 className=\"text-3xl font-bold mb-8\">\r\n+              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+            </h2>\r\n+            <div className=\"space-y-4\">\r\n+              {datasets[selectedCategory].map((dataset, index) => (\r\n+                <div\r\n+                  key={index}\r\n+                  className=\"group p-6 bg-white/5 rounded-xl hover:bg-white/10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white/5 hover:border-white/10\"\r\n+                >\r\n+                  <span className=\"text-lg text-gray-200\">{dataset}</span>\r\n+                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1\" />\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DatasetPortal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730126094924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -214,208 +214,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default DatasetPortal;\n-'use client';  // Add this at the very top of the file\r\n-\r\n-import React, { useState } from 'react';\r\n-import { Search, ChevronRight, Database, Sun, Home, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n-\r\n-type Category = {\r\n-  id: number;\r\n-  title: string;\r\n-  icon: React.ReactNode;\r\n-  description: string;\r\n-};\r\n-\r\n-type Datasets = {\r\n-  [key: number]: string[];\r\n-};\r\n-const DatasetPortal = () => {\r\n-  const [searchTerm, setSearchTerm] = useState<string>('');\r\n-  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n-\r\n-  const categories = [\r\n-    {\r\n-      id: 1,\r\n-      title: \"Research Papers\",\r\n-      icon: <Database className=\"w-6 h-6\" />,\r\n-      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      title: \"Solar Production\",\r\n-      icon: <Sun className=\"w-6 h-6\" />,\r\n-      description: \"Solar generation data and geographical information systems\"\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      title: \"Energy Consumption\",\r\n-      icon: <Activity className=\"w-6 h-6\" />,\r\n-      description: \"Residential and commercial energy consumption datasets\"\r\n-    },\r\n-    {\r\n-      id: 4,\r\n-      title: \"Load Monitoring\",\r\n-      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n-      description: \"NILM datasets and appliance energy usage monitoring\"\r\n-    },\r\n-    {\r\n-      id: 5,\r\n-      title: \"Building Energy\",\r\n-      icon: <Building2 className=\"w-6 h-6\" />,\r\n-      description: \"Building energy data and efficiency metrics\"\r\n-    },\r\n-    {\r\n-      id: 6,\r\n-      title: \"Smart Meters\",\r\n-      icon: <Gauge className=\"w-6 h-6\" />,\r\n-      description: \"Smart meter data and implementation resources\"\r\n-    },\r\n-    {\r\n-      id: 7,\r\n-      title: \"Environmental\",\r\n-      icon: <Cloud className=\"w-6 h-6\" />,\r\n-      description: \"Climate and environmental impact data\"\r\n-    },\r\n-    {\r\n-      id: 8,\r\n-      title: \"Energy Tools\",\r\n-      icon: <Leaf className=\"w-6 h-6\" />,\r\n-      description: \"Energy data portals and analysis tools\"\r\n-    }\r\n-  ];\r\n-\r\n-  const datasets = {\r\n-    1: [\r\n-      \"IEEE Paper: Document 9826532\",\r\n-      \"ArXiv Paper: 2307.00142\",\r\n-      \"IEEE Paper: Document 10387673\",\r\n-      \"ArXiv Paper: 2102.12578\",\r\n-      \"MDPI Energies Journal Articles\"\r\n-    ],\r\n-    2: [\r\n-      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n-      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n-      \"EMHIRES Solar Generation Time Series\",\r\n-      \"Solcast Data Specifications\",\r\n-      \"NASA POWER Project\"\r\n-    ],\r\n-    3: [\r\n-      \"EIA Residential Consumption Data 2020\",\r\n-      \"Building Data Genome 2\",\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"Smart Meter Energy Use Data\",\r\n-      \"Electric Power Consumption Dataset\"\r\n-    ],\r\n-    4: [\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"GitHub: NILM Tools and Resources\",\r\n-      \"SHEd Dataset - NILM\",\r\n-      \"Household Appliances Power Consumption\",\r\n-      \"Appliances Energy Prediction Dataset\"\r\n-    ],\r\n-    5: [\r\n-      \"Better Buildings Solution Center\",\r\n-      \"Building Data Genome 2\",\r\n-      \"NREL Buildings Benchmark\",\r\n-      \"EnergySage - Whole Home Solutions\",\r\n-      \"Intelligent Energy Management System\"\r\n-    ],\r\n-    6: [\r\n-      \"Smart Meter Energy Use Data in London\",\r\n-      \"CRU: Smart Meters and Services\",\r\n-      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n-    ],\r\n-    7: [\r\n-      \"International Renewable Energy Agency (IRENA)\",\r\n-      \"GitHub: ClimateSet by RolnickLab\",\r\n-      \"CDP Data Portal\"\r\n-    ],\r\n-    8: [\r\n-      \"Global Energy Monitor\",\r\n-      \"Utility Rate Database - OpenEI\",\r\n-      \"Better Buildings Solution Center\",\r\n-      \"NREL Data and Tools\",\r\n-      \"U.S. Energy Information Administration (EIA)\"\r\n-    ]\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-black text-white\">\r\n-      {/* Hero Section */}\r\n-      <div className=\"relative h-96 flex items-center justify-center overflow-hidden\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-r from-blue-900 to-purple-900 opacity-50\" />\r\n-        <div className=\"relative z-10 text-center px-4\">\r\n-          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Energy Dataset Portal</h1>\r\n-          <p className=\"text-xl md:text-2xl text-gray-200 max-w-2xl mx-auto\">\r\n-            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n-          </p>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Search Bar */}\r\n-      <div className=\"max-w-4xl mx-auto px-4 -mt-8 relative z-20\">\r\n-        <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-2 flex items-center\">\r\n-          <Search className=\"w-6 h-6 text-gray-400 ml-2\" />\r\n-          <input\r\n-            type=\"text\"\r\n-            placeholder=\"Search datasets...\"\r\n-            className=\"w-full bg-transparent border-none focus:outline-none text-white px-4 py-2\"\r\n-            value={searchTerm}\r\n-            onChange={(e) => setSearchTerm(e.target.value)}\r\n-          />\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Categories Grid */}\r\n-      <div className=\"max-w-6xl mx-auto px-4 py-16\">\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {categories.map((category) => (\r\n-            <button\r\n-              key={category.id}\r\n-              onClick={() => setSelectedCategory(category.id)}\r\n-              className={`p-6 rounded-lg transition-all duration-300 ${\r\n-                selectedCategory === category.id\r\n-                  ? 'bg-white/20 backdrop-blur-lg'\r\n-                  : 'bg-white/10 hover:bg-white/15'\r\n-              }`}\r\n-            >\r\n-              <div className=\"flex items-center justify-between mb-4\">\r\n-                {category.icon}\r\n-                <ChevronRight className=\"w-5 h-5 text-gray-400\" />\r\n-              </div>\r\n-              <h3 className=\"text-lg font-semibold mb-2\">{category.title}</h3>\r\n-              <p className=\"text-sm text-gray-400\">{category.description}</p>\r\n-            </button>\r\n-          ))}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Dataset List */}\r\n-      {selectedCategory && (\r\n-        <div className=\"max-w-4xl mx-auto px-4 pb-16\">\r\n-          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6\">\r\n-            <h2 className=\"text-2xl font-bold mb-6\">\r\n-              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-            </h2>\r\n-            <div className=\"space-y-4\">\r\n-              {datasets[selectedCategory].map((dataset, index) => (\r\n-                <div\r\n-                  key={index}\r\n-                  className=\"p-4 bg-white/5 rounded-lg hover:bg-white/10 transition-colors cursor-pointer flex items-center justify-between\"\r\n-                >\r\n-                  <span>{dataset}</span>\r\n-                  <ChevronRight className=\"w-5 h-5 text-gray-400\" />\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default DatasetPortal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730126318073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n-'use client';  // Add this at the very top of the file\r\n+'use client';\r\n \r\n-import React, { useState } from 'react';\r\n-import { Search, ChevronRight, Database, Sun, Home, Activity, \r\n+import React, { useState, useEffect } from 'react';\r\n+import { Search, ChevronRight, Database, Sun, Activity, \r\n   BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n+import { motion } from 'framer-motion';\r\n \r\n type Category = {\r\n   id: number;\r\n   title: string;\r\n@@ -13,12 +14,22 @@\n \r\n type Datasets = {\r\n   [key: number]: string[];\r\n };\r\n+\r\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState<string>('');\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+  const [scrolled, setScrolled] = useState(false);\r\n \r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 50);\r\n+    };\r\n+    window.addEventListener('scroll', handleScroll);\r\n+    return () => window.removeEventListener('scroll', handleScroll);\r\n+  }, []);\r\n+\r\n   const categories = [\r\n     {\r\n       id: 1,\r\n       title: \"Research Papers\",\r\n@@ -123,65 +134,90 @@\n       \"U.S. Energy Information Administration (EIA)\"\r\n     ]\r\n   };\r\n \r\n+  const filteredCategories = categories.filter(category =>\r\n+    category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+    category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n+  );\r\n+\r\n   return (\r\n-    <div className=\"min-h-screen bg-[#000000] text-white overflow-x-hidden\">\r\n-      {/* Hero Section with Tesla-like gradient */}\r\n-      <div className=\"relative h-[90vh] flex items-center justify-center overflow-hidden\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-900/40 via-purple-900/40 to-black\" />\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+      {/* Navigation Bar */}\r\n+      <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n+        scrolled ? 'bg-black/80 backdrop-blur-lg' : 'bg-transparent'\r\n+      }`}>\r\n+        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n+          <div className=\"flex items-center justify-between h-16\">\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <button className=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\">\r\n+                Sign In\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </nav>\r\n+\r\n+      {/* Hero Section */}\r\n+      <div className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-600/20 via-purple-600/20 to-black\" />\r\n         <div \r\n           className=\"absolute inset-0 opacity-30\"\r\n           style={{\r\n             backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n             backgroundSize: '30px 30px'\r\n           }}\r\n         />\r\n         <div className=\"relative z-10 text-center px-4 max-w-4xl mx-auto\">\r\n-          <h1 className=\"text-5xl md:text-7xl font-bold mb-8 tracking-tight\">\r\n+          <h1 className=\"text-6xl md:text-8xl font-bold mb-8 tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n-          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed\">\r\n+          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n             AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n           </p>\r\n+          \r\n+          {/* Enhanced Search Bar */}\r\n+          <div className=\"max-w-2xl mx-auto\">\r\n+            <div className=\"relative\">\r\n+              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n+                <Search className=\"w-6 h-6 text-gray-400\" />\r\n+              </div>\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Search datasets...\"\r\n+                className=\"w-full bg-white/10 backdrop-blur-xl rounded-2xl pl-12 pr-4 py-4 border border-white/10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n+                value={searchTerm}\r\n+                onChange={(e) => setSearchTerm(e.target.value)}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Floating Search Bar with Glass Effect */}\r\n-      <div className=\"max-w-4xl mx-auto px-4 -mt-20 relative z-20\">\r\n-        <div className=\"bg-white/10 backdrop-blur-xl rounded-full p-2 flex items-center border border-white/10 shadow-lg\">\r\n-          <Search className=\"w-6 h-6 text-gray-400 ml-4\" />\r\n-          <input\r\n-            type=\"text\"\r\n-            placeholder=\"Search datasets...\"\r\n-            className=\"w-full bg-transparent border-none focus:outline-none text-white px-4 py-3 text-lg placeholder-gray-400\"\r\n-            value={searchTerm}\r\n-            onChange={(e) => setSearchTerm(e.target.value)}\r\n-          />\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Categories Grid with Glass Cards */}\r\n-      <div className=\"max-w-7xl mx-auto px-4 py-24\">\r\n+      {/* Categories Grid */}\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {categories.map((category) => (\r\n+          {filteredCategories.map((category) => (\r\n             <button\r\n               key={category.id}\r\n               onClick={() => setSelectedCategory(category.id)}\r\n               className={`group p-8 rounded-2xl transition-all duration-500 ${\r\n                 selectedCategory === category.id\r\n-                  ? 'bg-white/20 backdrop-blur-xl'\r\n-                  : 'bg-white/10 hover:bg-white/15'\r\n-              } border border-white/10 backdrop-blur-lg hover:transform hover:-translate-y-1`}\r\n+                  ? 'bg-blue-600/20 backdrop-blur-xl border-blue-400/50'\r\n+                  : 'bg-white/5 hover:bg-white/10 border-white/10'\r\n+              } border backdrop-blur-lg hover:transform hover:-translate-y-1`}\r\n             >\r\n               <div className=\"flex items-center justify-between mb-6\">\r\n-                <div className={`w-12 h-12 rounded-full flex items-center justify-center ${\r\n-                  selectedCategory === category.id ? 'bg-white/20' : 'bg-white/10'\r\n-                } group-hover:bg-white/20 transition-all duration-300`}>\r\n+                <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                  selectedCategory === category.id ? 'bg-blue-500/20' : 'bg-white/10'\r\n+                } group-hover:bg-blue-500/20 transition-all duration-300`}>\r\n                   {category.icon}\r\n                 </div>\r\n                 <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                  selectedCategory === category.id ? 'translate-x-1' : 'group-hover:translate-x-1'\r\n+                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : 'group-hover:translate-x-1'\r\n                 }`} />\r\n               </div>\r\n               <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n               <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n@@ -189,23 +225,25 @@\n           ))}\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Dataset List with Smooth Transitions */}\r\n+      {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <div className=\"bg-white/10 backdrop-blur-xl rounded-2xl p-8 border border-white/10\">\r\n-            <h2 className=\"text-3xl font-bold mb-8\">\r\n+          <div className=\"bg-white/5 backdrop-blur-xl rounded-2xl p-8 border border-white/10\">\r\n+            <h2 className=\"text-3xl font-bold mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n               {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n             </h2>\r\n             <div className=\"space-y-4\">\r\n               {datasets[selectedCategory].map((dataset, index) => (\r\n                 <div\r\n                   key={index}\r\n-                  className=\"group p-6 bg-white/5 rounded-xl hover:bg-white/10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white/5 hover:border-white/10\"\r\n+                  className=\"group p-6 bg-white/5 rounded-xl hover:bg-white/10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white/5 hover:border-blue-400/30\"\r\n                 >\r\n-                  <span className=\"text-lg text-gray-200\">{dataset}</span>\r\n-                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1\" />\r\n+                  <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                    {dataset}\r\n+                  </span>\r\n+                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n                 </div>\r\n               ))}\r\n             </div>\r\n           </div>\r\n"
                },
                {
                    "date": 1730126442581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,24 +2,12 @@\n \r\n import React, { useState, useEffect } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n   BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n-import { motion } from 'framer-motion';\r\n \r\n-type Category = {\r\n-  id: number;\r\n-  title: string;\r\n-  icon: React.ReactNode;\r\n-  description: string;\r\n-};\r\n-\r\n-type Datasets = {\r\n-  [key: number]: string[];\r\n-};\r\n-\r\n const DatasetPortal = () => {\r\n-  const [searchTerm, setSearchTerm] = useState<string>('');\r\n-  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+  const [searchTerm, setSearchTerm] = useState('');\r\n+  const [selectedCategory, setSelectedCategory] = useState(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n@@ -140,14 +128,14 @@\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n   return (\r\n-    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+    <div className=\"min-h-screen bg-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black/80 backdrop-blur-lg' : 'bg-transparent'\r\n+        scrolled ? 'bg-black bg-opacity-80' : 'bg-transparent'\r\n       }`}>\r\n-        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n+        <div className=\"max-w-7xl mx-auto px-4\">\r\n           <div className=\"flex items-center justify-between h-16\">\r\n             <div className=\"flex items-center space-x-4\">\r\n               <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n             </div>\r\n@@ -160,35 +148,28 @@\n         </div>\r\n       </nav>\r\n \r\n       {/* Hero Section */}\r\n-      <div className=\"relative min-h-screen flex items-center justify-center overflow-hidden\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-600/20 via-purple-600/20 to-black\" />\r\n-        <div \r\n-          className=\"absolute inset-0 opacity-30\"\r\n-          style={{\r\n-            backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n-            backgroundSize: '30px 30px'\r\n-          }}\r\n-        />\r\n-        <div className=\"relative z-10 text-center px-4 max-w-4xl mx-auto\">\r\n-          <h1 className=\"text-6xl md:text-8xl font-bold mb-8 tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n+      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div className=\"relative z-10 text-center px-4\">\r\n+          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n           <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n             AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n           </p>\r\n           \r\n-          {/* Enhanced Search Bar */}\r\n+          {/* Search Bar */}\r\n           <div className=\"max-w-2xl mx-auto\">\r\n             <div className=\"relative\">\r\n               <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n                 <Search className=\"w-6 h-6 text-gray-400\" />\r\n               </div>\r\n               <input\r\n                 type=\"text\"\r\n                 placeholder=\"Search datasets...\"\r\n-                className=\"w-full bg-white/10 backdrop-blur-xl rounded-2xl pl-12 pr-4 py-4 border border-white/10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n+                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n                 value={searchTerm}\r\n                 onChange={(e) => setSearchTerm(e.target.value)}\r\n               />\r\n             </div>\r\n@@ -202,23 +183,23 @@\n           {filteredCategories.map((category) => (\r\n             <button\r\n               key={category.id}\r\n               onClick={() => setSelectedCategory(category.id)}\r\n-              className={`group p-8 rounded-2xl transition-all duration-500 ${\r\n+              className={`group p-8 rounded-2xl transition-all duration-300 ${\r\n                 selectedCategory === category.id\r\n-                  ? 'bg-blue-600/20 backdrop-blur-xl border-blue-400/50'\r\n-                  : 'bg-white/5 hover:bg-white/10 border-white/10'\r\n-              } border backdrop-blur-lg hover:transform hover:-translate-y-1`}\r\n+                  ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n+                  : 'bg-white bg-opacity-5 hover:bg-opacity-10 border-white border-opacity-10'\r\n+              } border`}\r\n             >\r\n               <div className=\"flex items-center justify-between mb-6\">\r\n                 <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                  selectedCategory === category.id ? 'bg-blue-500/20' : 'bg-white/10'\r\n-                } group-hover:bg-blue-500/20 transition-all duration-300`}>\r\n+                  selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n+                } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n                   {category.icon}\r\n                 </div>\r\n                 <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : 'group-hover:translate-x-1'\r\n-                }`} />\r\n+                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n+                } group-hover:translate-x-1`} />\r\n               </div>\r\n               <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n               <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n             </button>\r\n@@ -228,17 +209,17 @@\n \r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <div className=\"bg-white/5 backdrop-blur-xl rounded-2xl p-8 border border-white/10\">\r\n-            <h2 className=\"text-3xl font-bold mb-8 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n+          <div className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n               {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n             </h2>\r\n             <div className=\"space-y-4\">\r\n               {datasets[selectedCategory].map((dataset, index) => (\r\n                 <div\r\n                   key={index}\r\n-                  className=\"group p-6 bg-white/5 rounded-xl hover:bg-white/10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white/5 hover:border-blue-400/30\"\r\n+                  className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n                 >\r\n                   <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n                     {dataset}\r\n                   </span>\r\n"
                },
                {
                    "date": 1730126741325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,28 @@\n 'use client';\r\n \r\n import React, { useState, useEffect } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n+import { Card, CardContent } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import categoriesData from '@/data/categories.json';\r\n+import { Category, Link as DatasetLink } from '@/types';\r\n \r\n+const iconMap = {\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+};\r\n+\r\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState(null);\r\n+  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n@@ -16,124 +31,33 @@\n     window.addEventListener('scroll', handleScroll);\r\n     return () => window.removeEventListener('scroll', handleScroll);\r\n   }, []);\r\n \r\n-  const categories = [\r\n-    {\r\n-      id: 1,\r\n-      title: \"Research Papers\",\r\n-      icon: <Database className=\"w-6 h-6\" />,\r\n-      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      title: \"Solar Production\",\r\n-      icon: <Sun className=\"w-6 h-6\" />,\r\n-      description: \"Solar generation data and geographical information systems\"\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      title: \"Energy Consumption\",\r\n-      icon: <Activity className=\"w-6 h-6\" />,\r\n-      description: \"Residential and commercial energy consumption datasets\"\r\n-    },\r\n-    {\r\n-      id: 4,\r\n-      title: \"Load Monitoring\",\r\n-      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n-      description: \"NILM datasets and appliance energy usage monitoring\"\r\n-    },\r\n-    {\r\n-      id: 5,\r\n-      title: \"Building Energy\",\r\n-      icon: <Building2 className=\"w-6 h-6\" />,\r\n-      description: \"Building energy data and efficiency metrics\"\r\n-    },\r\n-    {\r\n-      id: 6,\r\n-      title: \"Smart Meters\",\r\n-      icon: <Gauge className=\"w-6 h-6\" />,\r\n-      description: \"Smart meter data and implementation resources\"\r\n-    },\r\n-    {\r\n-      id: 7,\r\n-      title: \"Environmental\",\r\n-      icon: <Cloud className=\"w-6 h-6\" />,\r\n-      description: \"Climate and environmental impact data\"\r\n-    },\r\n-    {\r\n-      id: 8,\r\n-      title: \"Energy Tools\",\r\n-      icon: <Leaf className=\"w-6 h-6\" />,\r\n-      description: \"Energy data portals and analysis tools\"\r\n-    }\r\n-  ];\r\n-\r\n-  const datasets = {\r\n-    1: [\r\n-      \"IEEE Paper: Document 9826532\",\r\n-      \"ArXiv Paper: 2307.00142\",\r\n-      \"IEEE Paper: Document 10387673\",\r\n-      \"ArXiv Paper: 2102.12578\",\r\n-      \"MDPI Energies Journal Articles\"\r\n-    ],\r\n-    2: [\r\n-      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n-      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n-      \"EMHIRES Solar Generation Time Series\",\r\n-      \"Solcast Data Specifications\",\r\n-      \"NASA POWER Project\"\r\n-    ],\r\n-    3: [\r\n-      \"EIA Residential Consumption Data 2020\",\r\n-      \"Building Data Genome 2\",\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"Smart Meter Energy Use Data\",\r\n-      \"Electric Power Consumption Dataset\"\r\n-    ],\r\n-    4: [\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"GitHub: NILM Tools and Resources\",\r\n-      \"SHEd Dataset - NILM\",\r\n-      \"Household Appliances Power Consumption\",\r\n-      \"Appliances Energy Prediction Dataset\"\r\n-    ],\r\n-    5: [\r\n-      \"Better Buildings Solution Center\",\r\n-      \"Building Data Genome 2\",\r\n-      \"NREL Buildings Benchmark\",\r\n-      \"EnergySage - Whole Home Solutions\",\r\n-      \"Intelligent Energy Management System\"\r\n-    ],\r\n-    6: [\r\n-      \"Smart Meter Energy Use Data in London\",\r\n-      \"CRU: Smart Meters and Services\",\r\n-      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n-    ],\r\n-    7: [\r\n-      \"International Renewable Energy Agency (IRENA)\",\r\n-      \"GitHub: ClimateSet by RolnickLab\",\r\n-      \"CDP Data Portal\"\r\n-    ],\r\n-    8: [\r\n-      \"Global Energy Monitor\",\r\n-      \"Utility Rate Database - OpenEI\",\r\n-      \"Better Buildings Solution Center\",\r\n-      \"NREL Data and Tools\",\r\n-      \"U.S. Energy Information Administration (EIA)\"\r\n-    ]\r\n-  };\r\n-\r\n+  const categories = categoriesData.categories;\r\n+  \r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n+  const getBadgeColor = (type: string) => {\r\n+    const colors = {\r\n+      ieee: 'bg-blue-500',\r\n+      arxiv: 'bg-green-500',\r\n+      mdpi: 'bg-purple-500',\r\n+      tool: 'bg-yellow-500',\r\n+      database: 'bg-red-500',\r\n+      dataset: 'bg-indigo-500',\r\n+      specification: 'bg-pink-500',\r\n+    };\r\n+    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"min-h-screen bg-black text-white\">\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black bg-opacity-80' : 'bg-transparent'\r\n+        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n       }`}>\r\n         <div className=\"max-w-7xl mx-auto px-4\">\r\n           <div className=\"flex items-center justify-between h-16\">\r\n             <div className=\"flex items-center space-x-4\">\r\n@@ -150,8 +74,12 @@\n \r\n       {/* Hero Section */}\r\n       <div className=\"relative min-h-screen flex items-center justify-center\">\r\n         <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div className=\"absolute inset-0\" style={{\r\n+          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n+          backgroundSize: '30px 30px'\r\n+        }} />\r\n         <div className=\"relative z-10 text-center px-4\">\r\n           <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n@@ -179,56 +107,74 @@\n \r\n       {/* Categories Grid */}\r\n       <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => (\r\n-            <button\r\n-              key={category.id}\r\n-              onClick={() => setSelectedCategory(category.id)}\r\n-              className={`group p-8 rounded-2xl transition-all duration-300 ${\r\n-                selectedCategory === category.id\r\n-                  ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n-                  : 'bg-white bg-opacity-5 hover:bg-opacity-10 border-white border-opacity-10'\r\n-              } border`}\r\n-            >\r\n-              <div className=\"flex items-center justify-between mb-6\">\r\n-                <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                  selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n-                } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n-                  {category.icon}\r\n-                </div>\r\n-                <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n-                } group-hover:translate-x-1`} />\r\n-              </div>\r\n-              <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n-              <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n-            </button>\r\n-          ))}\r\n+          {filteredCategories.map((category) => {\r\n+            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n+            return (\r\n+              <Card\r\n+                key={category.id}\r\n+                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n+                  selectedCategory === category.id\r\n+                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n+                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n+                }`}\r\n+                onClick={() => setSelectedCategory(category.id)}\r\n+              >\r\n+                <CardContent className=\"p-0\">\r\n+                  <div className=\"flex items-center justify-between mb-6\">\r\n+                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n+                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n+                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n+                    </div>\r\n+                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n+                    } group-hover:translate-x-1`} />\r\n+                  </div>\r\n+                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            );\r\n+          })}\r\n         </div>\r\n       </div>\r\n \r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <div className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-            </h2>\r\n-            <div className=\"space-y-4\">\r\n-              {datasets[selectedCategory].map((dataset, index) => (\r\n-                <div\r\n-                  key={index}\r\n-                  className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                >\r\n-                  <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                    {dataset}\r\n-                  </span>\r\n-                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n+          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <CardContent className=\"p-0\">\r\n+              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+              </h2>\r\n+              <div className=\"space-y-4\">\r\n+                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n+                  <a\r\n+                    key={index}\r\n+                    href={link.url}\r\n+                    target=\"_blank\"\r\n+                    rel=\"noopener noreferrer\"\r\n+                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                  >\r\n+                    <div className=\"flex items-center space-x-4\">\r\n+                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                        {link.title}\r\n+                      </span>\r\n+                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n+                        {link.type}\r\n+                      </Badge>\r\n+                    </div>\r\n+                    <div className=\"flex items-center space-x-2\">\r\n+                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n+                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n+                    </div>\r\n+                  </a>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1730127306954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,183 @@\n+'use client';\r\n+\r\n+import React, { useState, useEffect } from 'react';\r\n+import { Search, ChevronRight, Database, Sun, Activity, \r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n+import { Card, CardContent } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import categoriesData from '@/data/categories.json';\r\n+import { Category, Link as DatasetLink } from '@/types';\r\n+\r\n+const iconMap = {\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+};\r\n+\r\n+const DatasetPortal = () => {\r\n+  const [searchTerm, setSearchTerm] = useState('');\r\n+  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+  const [scrolled, setScrolled] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 50);\r\n+    };\r\n+    window.addEventListener('scroll', handleScroll);\r\n+    return () => window.removeEventListener('scroll', handleScroll);\r\n+  }, []);\r\n+\r\n+  const categories = categoriesData.categories;\r\n+  \r\n+  const filteredCategories = categories.filter(category =>\r\n+    category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+    category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n+  );\r\n+\r\n+  const getBadgeColor = (type: string) => {\r\n+    const colors = {\r\n+      ieee: 'bg-blue-500',\r\n+      arxiv: 'bg-green-500',\r\n+      mdpi: 'bg-purple-500',\r\n+      tool: 'bg-yellow-500',\r\n+      database: 'bg-red-500',\r\n+      dataset: 'bg-indigo-500',\r\n+      specification: 'bg-pink-500',\r\n+    };\r\n+    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+      {/* Navigation Bar */}\r\n+      <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n+        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n+      }`}>\r\n+        <div className=\"max-w-7xl mx-auto px-4\">\r\n+          <div className=\"flex items-center justify-between h-16\">\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <button className=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\">\r\n+                Sign In\r\n+              </button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </nav>\r\n+\r\n+      {/* Hero Section */}\r\n+      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div className=\"absolute inset-0\" style={{\r\n+          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n+          backgroundSize: '30px 30px'\r\n+        }} />\r\n+        <div className=\"relative z-10 text-center px-4\">\r\n+          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+            Energy Dataset Portal\r\n+          </h1>\r\n+          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n+            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n+          </p>\r\n+          \r\n+          {/* Search Bar */}\r\n+          <div className=\"max-w-2xl mx-auto\">\r\n+            <div className=\"relative\">\r\n+              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n+                <Search className=\"w-6 h-6 text-gray-400\" />\r\n+              </div>\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Search datasets...\"\r\n+                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n+                value={searchTerm}\r\n+                onChange={(e) => setSearchTerm(e.target.value)}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Categories Grid */}\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+          {filteredCategories.map((category) => {\r\n+            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n+            return (\r\n+              <Card\r\n+                key={category.id}\r\n+                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n+                  selectedCategory === category.id\r\n+                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n+                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n+                }`}\r\n+                onClick={() => setSelectedCategory(category.id)}\r\n+              >\r\n+                <CardContent className=\"p-0\">\r\n+                  <div className=\"flex items-center justify-between mb-6\">\r\n+                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n+                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n+                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n+                    </div>\r\n+                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n+                    } group-hover:translate-x-1`} />\r\n+                  </div>\r\n+                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            );\r\n+          })}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Dataset List */}\r\n+      {selectedCategory && (\r\n+        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n+          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <CardContent className=\"p-0\">\r\n+              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+              </h2>\r\n+              <div className=\"space-y-4\">\r\n+                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n+                  <a\r\n+                    key={index}\r\n+                    href={link.url}\r\n+                    target=\"_blank\"\r\n+                    rel=\"noopener noreferrer\"\r\n+                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                  >\r\n+                    <div className=\"flex items-center space-x-4\">\r\n+                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                        {link.title}\r\n+                      </span>\r\n+                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n+                        {link.type}\r\n+                      </Badge>\r\n+                    </div>\r\n+                    <div className=\"flex items-center space-x-2\">\r\n+                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n+                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n+                    </div>\r\n+                  </a>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </div>\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DatasetPortal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730127809465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import categoriesData from '@/data/categories.json';\r\n-import { Category, Link as DatasetLink } from '@/types';\r\n+import { Link as DatasetLink } from '@/types';\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n@@ -179,188 +179,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default DatasetPortal;\n-'use client';\r\n-\r\n-import React, { useState, useEffect } from 'react';\r\n-import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n-import { Card, CardContent } from \"@/components/ui/card\";\r\n-import { Badge } from \"@/components/ui/badge\";\r\n-import categoriesData from '@/data/categories.json';\r\n-import { Category, Link as DatasetLink } from '@/types';\r\n-\r\n-const iconMap = {\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-};\r\n-\r\n-const DatasetPortal = () => {\r\n-  const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n-  const [scrolled, setScrolled] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      setScrolled(window.scrollY > 50);\r\n-    };\r\n-    window.addEventListener('scroll', handleScroll);\r\n-    return () => window.removeEventListener('scroll', handleScroll);\r\n-  }, []);\r\n-\r\n-  const categories = categoriesData.categories;\r\n-  \r\n-  const filteredCategories = categories.filter(category =>\r\n-    category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-    category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n-  );\r\n-\r\n-  const getBadgeColor = (type: string) => {\r\n-    const colors = {\r\n-      ieee: 'bg-blue-500',\r\n-      arxiv: 'bg-green-500',\r\n-      mdpi: 'bg-purple-500',\r\n-      tool: 'bg-yellow-500',\r\n-      database: 'bg-red-500',\r\n-      dataset: 'bg-indigo-500',\r\n-      specification: 'bg-pink-500',\r\n-    };\r\n-    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n-      {/* Navigation Bar */}\r\n-      <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n-      }`}>\r\n-        <div className=\"max-w-7xl mx-auto px-4\">\r\n-          <div className=\"flex items-center justify-between h-16\">\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <button className=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\">\r\n-                Sign In\r\n-              </button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </nav>\r\n-\r\n-      {/* Hero Section */}\r\n-      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n-        <div className=\"absolute inset-0\" style={{\r\n-          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n-          backgroundSize: '30px 30px'\r\n-        }} />\r\n-        <div className=\"relative z-10 text-center px-4\">\r\n-          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-            Energy Dataset Portal\r\n-          </h1>\r\n-          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n-            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n-          </p>\r\n-          \r\n-          {/* Search Bar */}\r\n-          <div className=\"max-w-2xl mx-auto\">\r\n-            <div className=\"relative\">\r\n-              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n-                <Search className=\"w-6 h-6 text-gray-400\" />\r\n-              </div>\r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Search datasets...\"\r\n-                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n-                value={searchTerm}\r\n-                onChange={(e) => setSearchTerm(e.target.value)}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Categories Grid */}\r\n-      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => {\r\n-            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n-            return (\r\n-              <Card\r\n-                key={category.id}\r\n-                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n-                  selectedCategory === category.id\r\n-                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n-                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n-                }`}\r\n-                onClick={() => setSelectedCategory(category.id)}\r\n-              >\r\n-                <CardContent className=\"p-0\">\r\n-                  <div className=\"flex items-center justify-between mb-6\">\r\n-                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n-                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n-                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n-                    </div>\r\n-                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n-                    } group-hover:translate-x-1`} />\r\n-                  </div>\r\n-                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n-                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n-                </CardContent>\r\n-              </Card>\r\n-            );\r\n-          })}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Dataset List */}\r\n-      {selectedCategory && (\r\n-        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <CardContent className=\"p-0\">\r\n-              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-              </h2>\r\n-              <div className=\"space-y-4\">\r\n-                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n-                  <a\r\n-                    key={index}\r\n-                    href={link.url}\r\n-                    target=\"_blank\"\r\n-                    rel=\"noopener noreferrer\"\r\n-                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                  >\r\n-                    <div className=\"flex items-center space-x-4\">\r\n-                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                        {link.title}\r\n-                      </span>\r\n-                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n-                        {link.type}\r\n-                      </Badge>\r\n-                    </div>\r\n-                    <div className=\"flex items-center space-x-2\">\r\n-                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n-                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n-                    </div>\r\n-                  </a>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default DatasetPortal;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730127874728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,13 @@\n 'use client';\r\n \r\n import React, { useState, useEffect } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n-import { Card, CardContent } from \"@/components/ui/card\";\r\n-import { Badge } from \"@/components/ui/badge\";\r\n-import categoriesData from '@/data/categories.json';\r\n-import { Link as DatasetLink } from '@/types';\r\n+  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n \r\n-const iconMap = {\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-};\r\n-\r\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+  const [selectedCategory, setSelectedCategory] = useState(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n@@ -31,33 +16,124 @@\n     window.addEventListener('scroll', handleScroll);\r\n     return () => window.removeEventListener('scroll', handleScroll);\r\n   }, []);\r\n \r\n-  const categories = categoriesData.categories;\r\n-  \r\n+  const categories = [\r\n+    {\r\n+      id: 1,\r\n+      title: \"Research Papers\",\r\n+      icon: <Database className=\"w-6 h-6\" />,\r\n+      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n+    },\r\n+    {\r\n+      id: 2,\r\n+      title: \"Solar Production\",\r\n+      icon: <Sun className=\"w-6 h-6\" />,\r\n+      description: \"Solar generation data and geographical information systems\"\r\n+    },\r\n+    {\r\n+      id: 3,\r\n+      title: \"Energy Consumption\",\r\n+      icon: <Activity className=\"w-6 h-6\" />,\r\n+      description: \"Residential and commercial energy consumption datasets\"\r\n+    },\r\n+    {\r\n+      id: 4,\r\n+      title: \"Load Monitoring\",\r\n+      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n+      description: \"NILM datasets and appliance energy usage monitoring\"\r\n+    },\r\n+    {\r\n+      id: 5,\r\n+      title: \"Building Energy\",\r\n+      icon: <Building2 className=\"w-6 h-6\" />,\r\n+      description: \"Building energy data and efficiency metrics\"\r\n+    },\r\n+    {\r\n+      id: 6,\r\n+      title: \"Smart Meters\",\r\n+      icon: <Gauge className=\"w-6 h-6\" />,\r\n+      description: \"Smart meter data and implementation resources\"\r\n+    },\r\n+    {\r\n+      id: 7,\r\n+      title: \"Environmental\",\r\n+      icon: <Cloud className=\"w-6 h-6\" />,\r\n+      description: \"Climate and environmental impact data\"\r\n+    },\r\n+    {\r\n+      id: 8,\r\n+      title: \"Energy Tools\",\r\n+      icon: <Leaf className=\"w-6 h-6\" />,\r\n+      description: \"Energy data portals and analysis tools\"\r\n+    }\r\n+  ];\r\n+\r\n+  const datasets = {\r\n+    1: [\r\n+      \"IEEE Paper: Document 9826532\",\r\n+      \"ArXiv Paper: 2307.00142\",\r\n+      \"IEEE Paper: Document 10387673\",\r\n+      \"ArXiv Paper: 2102.12578\",\r\n+      \"MDPI Energies Journal Articles\"\r\n+    ],\r\n+    2: [\r\n+      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n+      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n+      \"EMHIRES Solar Generation Time Series\",\r\n+      \"Solcast Data Specifications\",\r\n+      \"NASA POWER Project\"\r\n+    ],\r\n+    3: [\r\n+      \"EIA Residential Consumption Data 2020\",\r\n+      \"Building Data Genome 2\",\r\n+      \"UK-DALE Disaggregated Dataset\",\r\n+      \"Smart Meter Energy Use Data\",\r\n+      \"Electric Power Consumption Dataset\"\r\n+    ],\r\n+    4: [\r\n+      \"UK-DALE Disaggregated Dataset\",\r\n+      \"GitHub: NILM Tools and Resources\",\r\n+      \"SHEd Dataset - NILM\",\r\n+      \"Household Appliances Power Consumption\",\r\n+      \"Appliances Energy Prediction Dataset\"\r\n+    ],\r\n+    5: [\r\n+      \"Better Buildings Solution Center\",\r\n+      \"Building Data Genome 2\",\r\n+      \"NREL Buildings Benchmark\",\r\n+      \"EnergySage - Whole Home Solutions\",\r\n+      \"Intelligent Energy Management System\"\r\n+    ],\r\n+    6: [\r\n+      \"Smart Meter Energy Use Data in London\",\r\n+      \"CRU: Smart Meters and Services\",\r\n+      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n+    ],\r\n+    7: [\r\n+      \"International Renewable Energy Agency (IRENA)\",\r\n+      \"GitHub: ClimateSet by RolnickLab\",\r\n+      \"CDP Data Portal\"\r\n+    ],\r\n+    8: [\r\n+      \"Global Energy Monitor\",\r\n+      \"Utility Rate Database - OpenEI\",\r\n+      \"Better Buildings Solution Center\",\r\n+      \"NREL Data and Tools\",\r\n+      \"U.S. Energy Information Administration (EIA)\"\r\n+    ]\r\n+  };\r\n+\r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n-  const getBadgeColor = (type: string) => {\r\n-    const colors = {\r\n-      ieee: 'bg-blue-500',\r\n-      arxiv: 'bg-green-500',\r\n-      mdpi: 'bg-purple-500',\r\n-      tool: 'bg-yellow-500',\r\n-      database: 'bg-red-500',\r\n-      dataset: 'bg-indigo-500',\r\n-      specification: 'bg-pink-500',\r\n-    };\r\n-    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n-  };\r\n-\r\n   return (\r\n-    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+    <div className=\"min-h-screen bg-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n+        scrolled ? 'bg-black bg-opacity-80' : 'bg-transparent'\r\n       }`}>\r\n         <div className=\"max-w-7xl mx-auto px-4\">\r\n           <div className=\"flex items-center justify-between h-16\">\r\n             <div className=\"flex items-center space-x-4\">\r\n@@ -74,12 +150,8 @@\n \r\n       {/* Hero Section */}\r\n       <div className=\"relative min-h-screen flex items-center justify-center\">\r\n         <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n-        <div className=\"absolute inset-0\" style={{\r\n-          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n-          backgroundSize: '30px 30px'\r\n-        }} />\r\n         <div className=\"relative z-10 text-center px-4\">\r\n           <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n@@ -107,74 +179,56 @@\n \r\n       {/* Categories Grid */}\r\n       <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => {\r\n-            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n-            return (\r\n-              <Card\r\n-                key={category.id}\r\n-                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n-                  selectedCategory === category.id\r\n-                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n-                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n-                }`}\r\n-                onClick={() => setSelectedCategory(category.id)}\r\n-              >\r\n-                <CardContent className=\"p-0\">\r\n-                  <div className=\"flex items-center justify-between mb-6\">\r\n-                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n-                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n-                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n-                    </div>\r\n-                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n-                    } group-hover:translate-x-1`} />\r\n-                  </div>\r\n-                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n-                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n-                </CardContent>\r\n-              </Card>\r\n-            );\r\n-          })}\r\n+          {filteredCategories.map((category) => (\r\n+            <button\r\n+              key={category.id}\r\n+              onClick={() => setSelectedCategory(category.id)}\r\n+              className={`group p-8 rounded-2xl transition-all duration-300 ${\r\n+                selectedCategory === category.id\r\n+                  ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n+                  : 'bg-white bg-opacity-5 hover:bg-opacity-10 border-white border-opacity-10'\r\n+              } border`}\r\n+            >\r\n+              <div className=\"flex items-center justify-between mb-6\">\r\n+                <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                  selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n+                } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n+                  {category.icon}\r\n+                </div>\r\n+                <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n+                } group-hover:translate-x-1`} />\r\n+              </div>\r\n+              <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+              <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+            </button>\r\n+          ))}\r\n         </div>\r\n       </div>\r\n \r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <CardContent className=\"p-0\">\r\n-              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-              </h2>\r\n-              <div className=\"space-y-4\">\r\n-                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n-                  <a\r\n-                    key={index}\r\n-                    href={link.url}\r\n-                    target=\"_blank\"\r\n-                    rel=\"noopener noreferrer\"\r\n-                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                  >\r\n-                    <div className=\"flex items-center space-x-4\">\r\n-                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                        {link.title}\r\n-                      </span>\r\n-                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n-                        {link.type}\r\n-                      </Badge>\r\n-                    </div>\r\n-                    <div className=\"flex items-center space-x-2\">\r\n-                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n-                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n-                    </div>\r\n-                  </a>\r\n-                ))}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n+          <div className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+            </h2>\r\n+            <div className=\"space-y-4\">\r\n+              {datasets[selectedCategory].map((dataset, index) => (\r\n+                <div\r\n+                  key={index}\r\n+                  className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                >\r\n+                  <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                    {dataset}\r\n+                  </span>\r\n+                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n+                </div>\r\n+              ))}\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1730127881089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,28 @@\n 'use client';\r\n \r\n import React, { useState, useEffect } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n+import { Card, CardContent } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import categoriesData from '@/data/categories.json';\r\n+import { Link as DatasetLink } from '@/types';\r\n \r\n+const iconMap = {\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+};\r\n+\r\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n-  const [selectedCategory, setSelectedCategory] = useState(null);\r\n+  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n \r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n@@ -16,124 +31,33 @@\n     window.addEventListener('scroll', handleScroll);\r\n     return () => window.removeEventListener('scroll', handleScroll);\r\n   }, []);\r\n \r\n-  const categories = [\r\n-    {\r\n-      id: 1,\r\n-      title: \"Research Papers\",\r\n-      icon: <Database className=\"w-6 h-6\" />,\r\n-      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n-    },\r\n-    {\r\n-      id: 2,\r\n-      title: \"Solar Production\",\r\n-      icon: <Sun className=\"w-6 h-6\" />,\r\n-      description: \"Solar generation data and geographical information systems\"\r\n-    },\r\n-    {\r\n-      id: 3,\r\n-      title: \"Energy Consumption\",\r\n-      icon: <Activity className=\"w-6 h-6\" />,\r\n-      description: \"Residential and commercial energy consumption datasets\"\r\n-    },\r\n-    {\r\n-      id: 4,\r\n-      title: \"Load Monitoring\",\r\n-      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n-      description: \"NILM datasets and appliance energy usage monitoring\"\r\n-    },\r\n-    {\r\n-      id: 5,\r\n-      title: \"Building Energy\",\r\n-      icon: <Building2 className=\"w-6 h-6\" />,\r\n-      description: \"Building energy data and efficiency metrics\"\r\n-    },\r\n-    {\r\n-      id: 6,\r\n-      title: \"Smart Meters\",\r\n-      icon: <Gauge className=\"w-6 h-6\" />,\r\n-      description: \"Smart meter data and implementation resources\"\r\n-    },\r\n-    {\r\n-      id: 7,\r\n-      title: \"Environmental\",\r\n-      icon: <Cloud className=\"w-6 h-6\" />,\r\n-      description: \"Climate and environmental impact data\"\r\n-    },\r\n-    {\r\n-      id: 8,\r\n-      title: \"Energy Tools\",\r\n-      icon: <Leaf className=\"w-6 h-6\" />,\r\n-      description: \"Energy data portals and analysis tools\"\r\n-    }\r\n-  ];\r\n-\r\n-  const datasets = {\r\n-    1: [\r\n-      \"IEEE Paper: Document 9826532\",\r\n-      \"ArXiv Paper: 2307.00142\",\r\n-      \"IEEE Paper: Document 10387673\",\r\n-      \"ArXiv Paper: 2102.12578\",\r\n-      \"MDPI Energies Journal Articles\"\r\n-    ],\r\n-    2: [\r\n-      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n-      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n-      \"EMHIRES Solar Generation Time Series\",\r\n-      \"Solcast Data Specifications\",\r\n-      \"NASA POWER Project\"\r\n-    ],\r\n-    3: [\r\n-      \"EIA Residential Consumption Data 2020\",\r\n-      \"Building Data Genome 2\",\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"Smart Meter Energy Use Data\",\r\n-      \"Electric Power Consumption Dataset\"\r\n-    ],\r\n-    4: [\r\n-      \"UK-DALE Disaggregated Dataset\",\r\n-      \"GitHub: NILM Tools and Resources\",\r\n-      \"SHEd Dataset - NILM\",\r\n-      \"Household Appliances Power Consumption\",\r\n-      \"Appliances Energy Prediction Dataset\"\r\n-    ],\r\n-    5: [\r\n-      \"Better Buildings Solution Center\",\r\n-      \"Building Data Genome 2\",\r\n-      \"NREL Buildings Benchmark\",\r\n-      \"EnergySage - Whole Home Solutions\",\r\n-      \"Intelligent Energy Management System\"\r\n-    ],\r\n-    6: [\r\n-      \"Smart Meter Energy Use Data in London\",\r\n-      \"CRU: Smart Meters and Services\",\r\n-      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n-    ],\r\n-    7: [\r\n-      \"International Renewable Energy Agency (IRENA)\",\r\n-      \"GitHub: ClimateSet by RolnickLab\",\r\n-      \"CDP Data Portal\"\r\n-    ],\r\n-    8: [\r\n-      \"Global Energy Monitor\",\r\n-      \"Utility Rate Database - OpenEI\",\r\n-      \"Better Buildings Solution Center\",\r\n-      \"NREL Data and Tools\",\r\n-      \"U.S. Energy Information Administration (EIA)\"\r\n-    ]\r\n-  };\r\n-\r\n+  const categories = categoriesData.categories;\r\n+  \r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n+  const getBadgeColor = (type: string) => {\r\n+    const colors = {\r\n+      ieee: 'bg-blue-500',\r\n+      arxiv: 'bg-green-500',\r\n+      mdpi: 'bg-purple-500',\r\n+      tool: 'bg-yellow-500',\r\n+      database: 'bg-red-500',\r\n+      dataset: 'bg-indigo-500',\r\n+      specification: 'bg-pink-500',\r\n+    };\r\n+    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n+  };\r\n+\r\n   return (\r\n-    <div className=\"min-h-screen bg-black text-white\">\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black bg-opacity-80' : 'bg-transparent'\r\n+        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n       }`}>\r\n         <div className=\"max-w-7xl mx-auto px-4\">\r\n           <div className=\"flex items-center justify-between h-16\">\r\n             <div className=\"flex items-center space-x-4\">\r\n@@ -150,8 +74,12 @@\n \r\n       {/* Hero Section */}\r\n       <div className=\"relative min-h-screen flex items-center justify-center\">\r\n         <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div className=\"absolute inset-0\" style={{\r\n+          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n+          backgroundSize: '30px 30px'\r\n+        }} />\r\n         <div className=\"relative z-10 text-center px-4\">\r\n           <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n@@ -179,56 +107,74 @@\n \r\n       {/* Categories Grid */}\r\n       <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => (\r\n-            <button\r\n-              key={category.id}\r\n-              onClick={() => setSelectedCategory(category.id)}\r\n-              className={`group p-8 rounded-2xl transition-all duration-300 ${\r\n-                selectedCategory === category.id\r\n-                  ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n-                  : 'bg-white bg-opacity-5 hover:bg-opacity-10 border-white border-opacity-10'\r\n-              } border`}\r\n-            >\r\n-              <div className=\"flex items-center justify-between mb-6\">\r\n-                <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                  selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n-                } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n-                  {category.icon}\r\n-                </div>\r\n-                <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                  selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n-                } group-hover:translate-x-1`} />\r\n-              </div>\r\n-              <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n-              <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n-            </button>\r\n-          ))}\r\n+          {filteredCategories.map((category) => {\r\n+            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n+            return (\r\n+              <Card\r\n+                key={category.id}\r\n+                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n+                  selectedCategory === category.id\r\n+                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n+                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n+                }`}\r\n+                onClick={() => setSelectedCategory(category.id)}\r\n+              >\r\n+                <CardContent className=\"p-0\">\r\n+                  <div className=\"flex items-center justify-between mb-6\">\r\n+                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n+                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n+                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n+                    </div>\r\n+                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n+                    } group-hover:translate-x-1`} />\r\n+                  </div>\r\n+                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            );\r\n+          })}\r\n         </div>\r\n       </div>\r\n \r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <div className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-            </h2>\r\n-            <div className=\"space-y-4\">\r\n-              {datasets[selectedCategory].map((dataset, index) => (\r\n-                <div\r\n-                  key={index}\r\n-                  className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                >\r\n-                  <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                    {dataset}\r\n-                  </span>\r\n-                  <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n-                </div>\r\n-              ))}\r\n-            </div>\r\n-          </div>\r\n+          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <CardContent className=\"p-0\">\r\n+              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+              </h2>\r\n+              <div className=\"space-y-4\">\r\n+                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n+                  <a\r\n+                    key={index}\r\n+                    href={link.url}\r\n+                    target=\"_blank\"\r\n+                    rel=\"noopener noreferrer\"\r\n+                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                  >\r\n+                    <div className=\"flex items-center space-x-4\">\r\n+                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                        {link.title}\r\n+                      </span>\r\n+                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n+                        {link.type}\r\n+                      </Badge>\r\n+                    </div>\r\n+                    <div className=\"flex items-center space-x-2\">\r\n+                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n+                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n+                    </div>\r\n+                  </a>\r\n+                ))}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n         </div>\r\n       )}\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1730128462890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n   BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import categoriesData from '@/data/categories.json';\r\n-import { Link as DatasetLink } from '@/types';\r\n+import { Category, Link as DatasetLink } from '@/types';\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n"
                },
                {
                    "date": 1730128633153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,15 @@\n 'use client';\r\n \r\n-import React, { useState, useEffect } from 'react';\r\n+import React, { useState } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, ExternalLink } from 'lucide-react';\r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, Plus, PlusCircle, ExternalLink } from 'lucide-react';\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { useLocalStorage } from '@/hooks/useLocalStorage';\r\n+import CategoryDialog from './CategoryDialog';\r\n+import LinkDialog from './LinkDialog';\r\n import categoriesData from '@/data/categories.json';\r\n import { Category, Link as DatasetLink } from '@/types';\r\n \r\n const iconMap = {\r\n@@ -22,35 +26,122 @@\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n+  const [categories, setCategories] = useLocalStorage('categories', categoriesData.categories);\r\n+  \r\n+  // Dialog states\r\n+  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n+  const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n+  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n+  const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n+  const [dialogMode, setDialogMode] = useState<'add' | 'edit'>('add');\r\n \r\n-  useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      setScrolled(window.scrollY > 50);\r\n-    };\r\n-    window.addEventListener('scroll', handleScroll);\r\n-    return () => window.removeEventListener('scroll', handleScroll);\r\n-  }, []);\r\n+  // Event Handlers for Categories\r\n+  const handleAddCategory = () => {\r\n+    setDialogMode('add');\r\n+    setEditingCategory(undefined);\r\n+    setIsCategoryDialogOpen(true);\r\n+  };\r\n \r\n-  const categories = categoriesData.categories;\r\n-  \r\n+  const handleEditCategory = (category: Category) => {\r\n+    setDialogMode('edit');\r\n+    setEditingCategory(category);\r\n+    setIsCategoryDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleDeleteCategory = (categoryId: number) => {\r\n+    if (window.confirm('Are you sure you want to delete this category?')) {\r\n+      setCategories(categories.filter(c => c.id !== categoryId));\r\n+      if (selectedCategory === categoryId) {\r\n+        setSelectedCategory(null);\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveCategory = (categoryData: Partial<Category>) => {\r\n+    if (dialogMode === 'add') {\r\n+      const newCategory: Category = {\r\n+        ...categoryData as Category,\r\n+        id: Math.max(0, ...categories.map(c => c.id)) + 1,\r\n+        links: []\r\n+      };\r\n+      setCategories([...categories, newCategory]);\r\n+    } else if (dialogMode === 'edit' && editingCategory) {\r\n+      setCategories(categories.map(c => \r\n+        c.id === editingCategory.id ? { ...c, ...categoryData } : c\r\n+      ));\r\n+    }\r\n+  };\r\n+\r\n+  // Event Handlers for Links\r\n+  const handleAddLink = () => {\r\n+    setDialogMode('add');\r\n+    setEditingLink(undefined);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleEditLink = (link: DatasetLink) => {\r\n+    setDialogMode('edit');\r\n+    setEditingLink(link);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleDeleteLink = (linkTitle: string) => {\r\n+    if (window.confirm('Are you sure you want to delete this link?')) {\r\n+      setCategories(categories.map(category => \r\n+        category.id === selectedCategory\r\n+          ? {\r\n+              ...category,\r\n+              links: category.links.filter(link => link.title !== linkTitle)\r\n+            }\r\n+          : category\r\n+      ));\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveLink = (linkData: DatasetLink) => {\r\n+    const currentCategory = categories.find(c => c.id === selectedCategory);\r\n+    if (!currentCategory) return;\r\n+\r\n+    if (dialogMode === 'add') {\r\n+      setCategories(categories.map(category =>\r\n+        category.id === selectedCategory\r\n+          ? { ...category, links: [...category.links, linkData] }\r\n+          : category\r\n+      ));\r\n+    } else if (dialogMode === 'edit' && editingLink) {\r\n+      setCategories(categories.map(category =>\r\n+        category.id === selectedCategory\r\n+          ? {\r\n+              ...category,\r\n+              links: category.links.map(link =>\r\n+                link.title === editingLink.title ? linkData : link\r\n+              )\r\n+            }\r\n+          : category\r\n+      ));\r\n+    }\r\n+  };\r\n+\r\n+  // Filter categories based on search term\r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n   );\r\n \r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n-      ieee: 'bg-blue-500',\r\n-      arxiv: 'bg-green-500',\r\n-      mdpi: 'bg-purple-500',\r\n-      tool: 'bg-yellow-500',\r\n-      database: 'bg-red-500',\r\n-      dataset: 'bg-indigo-500',\r\n-      specification: 'bg-pink-500',\r\n+      ieee: 'bg-blue-600',\r\n+      arxiv: 'bg-green-600',\r\n+      mdpi: 'bg-purple-600',\r\n+      tool: 'bg-yellow-600',\r\n+      database: 'bg-red-600',\r\n+      dataset: 'bg-indigo-600',\r\n+      specification: 'bg-pink-600',\r\n+      article: 'bg-orange-600'\r\n     };\r\n-    return colors[type as keyof typeof colors] || 'bg-gray-500';\r\n+    return colors[type as keyof typeof colors] || 'bg-gray-600';\r\n   };\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n@@ -63,11 +154,14 @@\n             <div className=\"flex items-center space-x-4\">\r\n               <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n             </div>\r\n             <div className=\"flex items-center space-x-4\">\r\n-              <button className=\"px-4 py-2 rounded-lg bg-blue-600 hover:bg-blue-700 transition-colors\">\r\n-                Sign In\r\n-              </button>\r\n+              <Button\r\n+                onClick={handleAddCategory}\r\n+                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+              >\r\n+                <Plus className=\"w-4 h-4 mr-2\" /> Add Category\r\n+              </Button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </nav>\r\n@@ -119,9 +213,33 @@\n                     : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n                 }`}\r\n                 onClick={() => setSelectedCategory(category.id)}\r\n               >\r\n-                <CardContent className=\"p-0\">\r\n+                <CardContent className=\"p-0 relative\">\r\n+                  <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-blue-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleEditCategory(category);\r\n+                      }}\r\n+                    >\r\n+                      <Edit className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-red-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleDeleteCategory(category.id);\r\n+                      }}\r\n+                    >\r\n+                      <Trash2 className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n                   <div className=\"flex items-center justify-between mb-6\">\r\n                     <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n                       selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n                     } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n@@ -144,19 +262,24 @@\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n           <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n             <CardContent className=\"p-0\">\r\n-              <h2 className=\"text-3xl font-bold mb-8 bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n-              </h2>\r\n+              <div className=\"flex items-center justify-between mb-8\">\r\n+                <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                  {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+                </h2>\r\n+                <Button\r\n+                  onClick={handleAddLink}\r\n+                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+                >\r\n+                  <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n+                </Button>\r\n+              </div>\r\n               <div className=\"space-y-4\">\r\n                 {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n-                  <a\r\n+                  <div\r\n                     key={index}\r\n-                    href={link.url}\r\n-                    target=\"_blank\"\r\n-                    rel=\"noopener noreferrer\"\r\n-                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 cursor-pointer flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n                   >\r\n                     <div className=\"flex items-center space-x-4\">\r\n                       <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n                         {link.title}\r\n@@ -165,18 +288,59 @@\n                         {link.type}\r\n                       </Badge>\r\n                     </div>\r\n                     <div className=\"flex items-center space-x-2\">\r\n-                      <ExternalLink className=\"w-5 h-5 text-gray-400 group-hover:text-blue-400\" />\r\n-                      <ChevronRight className=\"w-5 h-5 text-gray-400 transform transition-all duration-300 group-hover:translate-x-1 group-hover:text-blue-400\" />\r\n+                      <Button\r\n+                        variant=\"ghost\"\r\n+                        size=\"icon\"\r\n+                        className=\"text-gray-400 hover:text-blue-400\"\r\n+                        onClick={() => handleEditLink(link)}\r\n+                      >\r\n+                        <Edit className=\"w-4 h-4\" />\r\n+                      </Button>\r\n+                      <Button\r\n+                        variant=\"ghost\"\r\n+                        size=\"icon\"\r\n+                        className=\"text-gray-400 hover:text-red-400\"\r\n+                        onClick={() => handleDeleteLink(link.title)}\r\n+                      >\r\n+                        <Trash2 className=\"w-4 h-4\" />\r\n+                      </Button>\r\n+                      {link.url !== '#' && (\r\n+                        <a\r\n+                          href={link.url}\r\n+                          target=\"_blank\"\r\n+                          rel=\"noopener noreferrer\"\r\n+                          className=\"text-gray-400 hover:text-blue-400\"\r\n+                        >\r\n+                          <ExternalLink className=\"w-4 h-4\" />\r\n+                        </a>\r\n+                      )}\r\n                     </div>\r\n-                  </a>\r\n+                  </div>\r\n                 ))}\r\n               </div>\r\n             </CardContent>\r\n           </Card>\r\n         </div>\r\n       )}\r\n+\r\n+      {/* Dialogs */}\r\n+      <CategoryDialog\r\n+        isOpen={isCategoryDialogOpen}\r\n+        onClose={() => setIsCategoryDialogOpen(false)}\r\n+        onSave={handleSaveCategory}\r\n+        category={editingCategory}\r\n+        mode={dialogMode}\r\n+      />\r\n+\r\n+      <LinkDialog\r\n+        isOpen={isLinkDialogOpen}\r\n+        onClose={() => setIsLinkDialogOpen(false)}\r\n+        onSave={handleSaveLink}\r\n+        link={editingLink}\r\n+        mode={dialogMode}\r\n+      />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1730129980264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,10 @@\n import CategoryDialog from './CategoryDialog';\r\n import LinkDialog from './LinkDialog';\r\n import categoriesData from '@/data/categories.json';\r\n import { Category, Link as DatasetLink } from '@/types';\r\n+// At the top of DatasetPortal.tsx, add or update:\r\n+import { formatDistanceToNow } from 'date-fns';\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n@@ -101,29 +103,37 @@\n \r\n   const handleSaveLink = (linkData: DatasetLink) => {\r\n     const currentCategory = categories.find(c => c.id === selectedCategory);\r\n     if (!currentCategory) return;\r\n-\r\n+  \r\n+    // Prepare link data with notes\r\n+    const updatedLinkData = {\r\n+      ...linkData,\r\n+      notes: linkData.notes ? {\r\n+        ...linkData.notes,\r\n+        lastUpdated: new Date().toISOString()\r\n+      } : undefined\r\n+    };\r\n+  \r\n     if (dialogMode === 'add') {\r\n       setCategories(categories.map(category =>\r\n         category.id === selectedCategory\r\n-          ? { ...category, links: [...category.links, linkData] }\r\n+          ? { ...category, links: [...category.links, updatedLinkData] }\r\n           : category\r\n       ));\r\n     } else if (dialogMode === 'edit' && editingLink) {\r\n       setCategories(categories.map(category =>\r\n         category.id === selectedCategory\r\n           ? {\r\n               ...category,\r\n               links: category.links.map(link =>\r\n-                link.title === editingLink.title ? linkData : link\r\n+                link.title === editingLink.title ? updatedLinkData : link\r\n               )\r\n             }\r\n           : category\r\n       ));\r\n     }\r\n   };\r\n-\r\n   // Filter categories based on search term\r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n     category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n"
                },
                {
                    "date": 1730130145781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,13 @@\n import categoriesData from '@/data/categories.json';\r\n import { Category, Link as DatasetLink } from '@/types';\r\n // At the top of DatasetPortal.tsx, add or update:\r\n import { formatDistanceToNow } from 'date-fns';\r\n+import { Search, ChevronRight, Database, Sun, Activity, \r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, \r\n+  Plus, PlusCircle, ExternalLink, ChevronDown, ChevronUp, StickyNote } from 'lucide-react';\r\n \r\n+\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n"
                },
                {
                    "date": 1730130152182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n 'use client';\r\n \r\n import React, { useState } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, Plus, PlusCircle, ExternalLink } from 'lucide-react';\r\n+  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, \r\n+  Plus, PlusCircle, ExternalLink, ChevronDown, ChevronUp, StickyNote } from 'lucide-react';\r\n+\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { useLocalStorage } from '@/hooks/useLocalStorage';\r\n@@ -12,11 +14,8 @@\n import categoriesData from '@/data/categories.json';\r\n import { Category, Link as DatasetLink } from '@/types';\r\n // At the top of DatasetPortal.tsx, add or update:\r\n import { formatDistanceToNow } from 'date-fns';\r\n-import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, \r\n-  Plus, PlusCircle, ExternalLink, ChevronDown, ChevronUp, StickyNote } from 'lucide-react';\r\n \r\n \r\n const iconMap = {\r\n   Database,\r\n"
                },
                {
                    "date": 1730130580696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,21 +3,18 @@\n import React, { useState } from 'react';\r\n import { Search, ChevronRight, Database, Sun, Activity, \r\n   BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, \r\n   Plus, PlusCircle, ExternalLink, ChevronDown, ChevronUp, StickyNote } from 'lucide-react';\r\n-\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { useLocalStorage } from '@/hooks/useLocalStorage';\r\n import CategoryDialog from './CategoryDialog';\r\n import LinkDialog from './LinkDialog';\r\n import categoriesData from '@/data/categories.json';\r\n import { Category, Link as DatasetLink } from '@/types';\r\n-// At the top of DatasetPortal.tsx, add or update:\r\n import { formatDistanceToNow } from 'date-fns';\r\n \r\n-\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n@@ -27,8 +24,32 @@\n   Cloud,\r\n   Leaf,\r\n };\r\n \r\n+// New component for expanded notes\r\n+const ExpandedNotes: React.FC<{ notes: DatasetLink['notes'] }> = ({ notes }) => {\r\n+  if (!notes?.content) return null;\r\n+\r\n+  return (\r\n+    <div className=\"mt-4 space-y-2\">\r\n+      <div className=\"flex items-start justify-between\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n+          <StickyNote className=\"w-4 h-4\" />\r\n+          <span>Notes</span>\r\n+        </div>\r\n+        {notes.lastUpdated && (\r\n+          <span className=\"text-xs text-gray-500\">\r\n+            Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n+          </span>\r\n+        )}\r\n+      </div>\r\n+      <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n+        {notes.content}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n const DatasetPortal = () => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n@@ -106,18 +127,18 @@\n \r\n   const handleSaveLink = (linkData: DatasetLink) => {\r\n     const currentCategory = categories.find(c => c.id === selectedCategory);\r\n     if (!currentCategory) return;\r\n-  \r\n+\r\n     // Prepare link data with notes\r\n     const updatedLinkData = {\r\n       ...linkData,\r\n       notes: linkData.notes ? {\r\n         ...linkData.notes,\r\n         lastUpdated: new Date().toISOString()\r\n       } : undefined\r\n     };\r\n-  \r\n+\r\n     if (dialogMode === 'add') {\r\n       setCategories(categories.map(category =>\r\n         category.id === selectedCategory\r\n           ? { ...category, links: [...category.links, updatedLinkData] }\r\n@@ -135,12 +156,17 @@\n           : category\r\n       ));\r\n     }\r\n   };\r\n-  // Filter categories based on search term\r\n+\r\n+  // Filter categories based on search term (including notes)\r\n   const filteredCategories = categories.filter(category =>\r\n     category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-    category.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n+    category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+    category.links.some(link => \r\n+      link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n+    )\r\n   );\r\n \r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n@@ -155,8 +181,18 @@\n     };\r\n     return colors[type as keyof typeof colors] || 'bg-gray-600';\r\n   };\r\n \r\n+  // Add scroll event listener\r\n+  React.useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 10);\r\n+    };\r\n+\r\n+    window.addEventListener('scroll', handleScroll);\r\n+    return () => window.removeEventListener('scroll', handleScroll);\r\n+  }, []);\r\n+\r\n   return (\r\n     <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n@@ -216,8 +252,10 @@\n       <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n           {filteredCategories.map((category) => {\r\n             const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n+            const hasNotes = category.links.some(link => !!link.notes?.content);\r\n+            \r\n             return (\r\n               <Card\r\n                 key={category.id}\r\n                 className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n@@ -261,9 +299,17 @@\n                     <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n                       selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n                     } group-hover:translate-x-1`} />\r\n                   </div>\r\n-                  <h3 className=\"text-xl font-semibold mb-3\">{category.title}</h3>\r\n+                  <div className=\"flex items-center justify-between mb-3\">\r\n+                    <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n+                    {hasNotes && (\r\n+                      <div className=\"flex items-center text-xs text-gray-400\">\r\n+                        <StickyNote className=\"w-3 h-3 mr-1\" />\r\n+                        <span>Has notes</span>\r\n+                      </div>\r\n+                    )}\r\n+                  </div>\r\n                   <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n                 </CardContent>\r\n               </Card>\r\n             );\r\n@@ -287,51 +333,84 @@\n                   <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n                 </Button>\r\n               </div>\r\n               <div className=\"space-y-4\">\r\n-                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => (\r\n-                  <div\r\n-                    key={index}\r\n-                    className=\"group p-6 bg-white bg-opacity-5 rounded-xl hover:bg-opacity-10 transition-all duration-300 flex items-center justify-between border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                  >\r\n-                    <div className=\"flex items-center space-x-4\">\r\n-                      <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                        {link.title}\r\n-                      </span>\r\n-                      <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n-                        {link.type}\r\n-                      </Badge>\r\n+                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => {\r\n+                  const [isExpanded, setIsExpanded] = useState(false);\r\n+                  const hasNotes = !!link.notes?.content;\r\n+\r\n+                  return (\r\n+                    <div\r\n+                      key={index}\r\n+                      className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                    >\r\n+                      <div className=\"p-6\">\r\n+                        <div className=\"flex items-center justify-between\">\r\n+                          <div className=\"flex items-center space-x-4\">\r\n+                            <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                              {link.title}\r\n+                            </span>\r\n+                            <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n+                              {link.type}\r\n+                            </Badge>\r\n+                            {hasNotes && !isExpanded && (\r\n+                              <button\r\n+                                onClick={() => setIsExpanded(true)}\r\n+                                className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                              >\r\n+                                <StickyNote className=\"w-3 h-3\" />\r\n+                                <span>View notes</span>\r\n+                              </button>\r\n+                            )}\r\n+                          </div>\r\n+                          <div className=\"flex items-center space-x-2\">\r\n+                            {hasNotes && (\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                                onClick={() => setIsExpanded(!isExpanded)}\r\n+                              >\r\n+                                {isExpanded ? (\r\n+                                  <ChevronUp className=\"w-4 h-4\" />\r\n+                                ) : (\r\n+                                  <ChevronDown className=\"w-4 h-4\" />\r\n+                                )}\r\n+                              </Button>\r\n+                            )}\r\n+                            <Button\r\n+                              variant=\"ghost\"\r\n+                              size=\"icon\"\r\n+                              className=\"text-gray-400 hover:text-blue-400\"\r\n+                              onClick={() => handleEditLink(link)}\r\n+                            >\r\n+                              <Edit className=\"w-4 h-4\" />\r\n+                            </Button>\r\n+                            <Button\r\n+                              variant=\"ghost\"\r\n+                              size=\"icon\"\r\n+                              className=\"text-gray-400 hover:text-red-400\"\r\n+                              onClick={() => handleDeleteLink(link.title)}\r\n+                            >\r\n+                              <Trash2 className=\"w-4 h-4\" />\r\n+                            </Button>\r\n+                            {link.url !== '#' && (\r\n+                              <a\r\n+                                href={link.url}\r\n+                                target=\"_blank\"\r\n+                                rel=\"noopener noreferrer\"\r\n+                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                              >\r\n+                                <ExternalLink className=\"w-4 h-4\" />\r\n+                              </a>\r\n+                            )}\r\n+                          </div>\r\n+                        </div>\r\n+                        {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n+                      </div>\r\n                     </div>\r\n-                    <div className=\"flex items-center space-x-2\">\r\n-                      <Button\r\n-                        variant=\"ghost\"\r\n-                        size=\"icon\"\r\n-                        className=\"text-gray-400 hover:text-blue-400\"\r\n-                        onClick={() => handleEditLink(link)}\r\n-                      >\r\n-                        <Edit className=\"w-4 h-4\" />\r\n-                      </Button>\r\n-                      <Button\r\n-                        variant=\"ghost\"\r\n-                        size=\"icon\"\r\n-                        className=\"text-gray-400 hover:text-red-400\"\r\n-                        onClick={() => handleDeleteLink(link.title)}\r\n-                      >\r\n-                        <Trash2 className=\"w-4 h-4\" />\r\n-                      </Button>\r\n-                      {link.url !== '#' && (\r\n-                        <a\r\n-                          href={link.url}\r\n-                          target=\"_blank\"\r\n-                          rel=\"noopener noreferrer\"\r\n-                          className=\"text-gray-400 hover:text-blue-400\"\r\n-                        >\r\n-                          <ExternalLink className=\"w-4 h-4\" />\r\n-                        </a>\r\n-                      )}\r\n-                    </div>\r\n-                  </div>\r\n-                ))}\r\n+                  );\r\n+                })}\r\n               </div>\r\n             </CardContent>\r\n           </Card>\r\n         </div>\r\n"
                },
                {
                    "date": 1730130703396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,36 @@\n-'use client';\r\n+\"use client\";\r\n \r\n-import React, { useState } from 'react';\r\n-import { Search, ChevronRight, Database, Sun, Activity, \r\n-  BarChart2, Building2, Gauge, Cloud, Leaf, Edit, Trash2, \r\n-  Plus, PlusCircle, ExternalLink, ChevronDown, ChevronUp, StickyNote } from 'lucide-react';\r\n+import React, { useState } from \"react\";\r\n+import {\r\n+  Search,\r\n+  ChevronRight,\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+  Edit,\r\n+  Trash2,\r\n+  Plus,\r\n+  PlusCircle,\r\n+  ExternalLink,\r\n+  ChevronDown,\r\n+  ChevronUp,\r\n+  StickyNote,\r\n+} from \"lucide-react\";\r\n import { Card, CardContent } from \"@/components/ui/card\";\r\n import { Badge } from \"@/components/ui/badge\";\r\n import { Button } from \"@/components/ui/button\";\r\n-import { useLocalStorage } from '@/hooks/useLocalStorage';\r\n-import CategoryDialog from './CategoryDialog';\r\n-import LinkDialog from './LinkDialog';\r\n-import categoriesData from '@/data/categories.json';\r\n-import { Category, Link as DatasetLink } from '@/types';\r\n-import { formatDistanceToNow } from 'date-fns';\r\n+import { useLocalStorage } from \"@/hooks/useLocalStorage\";\r\n+import CategoryDialog from \"./CategoryDialog\";\r\n+import LinkDialog from \"./LinkDialog\";\r\n+import categoriesData from \"@/data/categories.json\";\r\n+import { Category, Link as DatasetLink } from \"@/types\";\r\n+import { formatDistanceToNow } from \"date-fns\";\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n@@ -25,9 +42,11 @@\n   Leaf,\r\n };\r\n \r\n // New component for expanded notes\r\n-const ExpandedNotes: React.FC<{ notes: DatasetLink['notes'] }> = ({ notes }) => {\r\n+const ExpandedNotes: React.FC<{ notes: DatasetLink[\"notes\"] }> = ({\r\n+  notes,\r\n+}) => {\r\n   if (!notes?.content) return null;\r\n \r\n   return (\r\n     <div className=\"mt-4 space-y-2\">\r\n@@ -48,157 +67,192 @@\n     </div>\r\n   );\r\n };\r\n \r\n+const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n+\r\n+const toggleLinkExpansion = (linkTitle: string) => {\r\n+  setExpandedLinks((prev) => {\r\n+    const newSet = new Set(prev);\r\n+    if (newSet.has(linkTitle)) {\r\n+      newSet.delete(linkTitle);\r\n+    } else {\r\n+      newSet.add(linkTitle);\r\n+    }\r\n+    return newSet;\r\n+  });\r\n+};\r\n+\r\n const DatasetPortal = () => {\r\n-  const [searchTerm, setSearchTerm] = useState('');\r\n+  const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n-  const [categories, setCategories] = useLocalStorage('categories', categoriesData.categories);\r\n-  \r\n+  const [categories, setCategories] = useLocalStorage(\r\n+    \"categories\",\r\n+    categoriesData.categories\r\n+  );\r\n+\r\n   // Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n+  const [editingCategory, setEditingCategory] = useState<\r\n+    Category | undefined\r\n+  >();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n-  const [dialogMode, setDialogMode] = useState<'add' | 'edit'>('add');\r\n+  const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n   // Event Handlers for Categories\r\n   const handleAddCategory = () => {\r\n-    setDialogMode('add');\r\n+    setDialogMode(\"add\");\r\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n   const handleEditCategory = (category: Category) => {\r\n-    setDialogMode('edit');\r\n+    setDialogMode(\"edit\");\r\n     setEditingCategory(category);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n   const handleDeleteCategory = (categoryId: number) => {\r\n-    if (window.confirm('Are you sure you want to delete this category?')) {\r\n-      setCategories(categories.filter(c => c.id !== categoryId));\r\n+    if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n+      setCategories(categories.filter((c) => c.id !== categoryId));\r\n       if (selectedCategory === categoryId) {\r\n         setSelectedCategory(null);\r\n       }\r\n     }\r\n   };\r\n \r\n   const handleSaveCategory = (categoryData: Partial<Category>) => {\r\n-    if (dialogMode === 'add') {\r\n+    if (dialogMode === \"add\") {\r\n       const newCategory: Category = {\r\n-        ...categoryData as Category,\r\n-        id: Math.max(0, ...categories.map(c => c.id)) + 1,\r\n-        links: []\r\n+        ...(categoryData as Category),\r\n+        id: Math.max(0, ...categories.map((c) => c.id)) + 1,\r\n+        links: [],\r\n       };\r\n       setCategories([...categories, newCategory]);\r\n-    } else if (dialogMode === 'edit' && editingCategory) {\r\n-      setCategories(categories.map(c => \r\n-        c.id === editingCategory.id ? { ...c, ...categoryData } : c\r\n-      ));\r\n+    } else if (dialogMode === \"edit\" && editingCategory) {\r\n+      setCategories(\r\n+        categories.map((c) =>\r\n+          c.id === editingCategory.id ? { ...c, ...categoryData } : c\r\n+        )\r\n+      );\r\n     }\r\n   };\r\n \r\n   // Event Handlers for Links\r\n   const handleAddLink = () => {\r\n-    setDialogMode('add');\r\n+    setDialogMode(\"add\");\r\n     setEditingLink(undefined);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleEditLink = (link: DatasetLink) => {\r\n-    setDialogMode('edit');\r\n+    setDialogMode(\"edit\");\r\n     setEditingLink(link);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleDeleteLink = (linkTitle: string) => {\r\n-    if (window.confirm('Are you sure you want to delete this link?')) {\r\n-      setCategories(categories.map(category => \r\n-        category.id === selectedCategory\r\n-          ? {\r\n-              ...category,\r\n-              links: category.links.filter(link => link.title !== linkTitle)\r\n-            }\r\n-          : category\r\n-      ));\r\n+    if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n+      setCategories(\r\n+        categories.map((category) =>\r\n+          category.id === selectedCategory\r\n+            ? {\r\n+                ...category,\r\n+                links: category.links.filter(\r\n+                  (link) => link.title !== linkTitle\r\n+                ),\r\n+              }\r\n+            : category\r\n+        )\r\n+      );\r\n     }\r\n   };\r\n \r\n   const handleSaveLink = (linkData: DatasetLink) => {\r\n-    const currentCategory = categories.find(c => c.id === selectedCategory);\r\n+    const currentCategory = categories.find((c) => c.id === selectedCategory);\r\n     if (!currentCategory) return;\r\n \r\n     // Prepare link data with notes\r\n     const updatedLinkData = {\r\n       ...linkData,\r\n-      notes: linkData.notes ? {\r\n-        ...linkData.notes,\r\n-        lastUpdated: new Date().toISOString()\r\n-      } : undefined\r\n+      notes: linkData.notes\r\n+        ? {\r\n+            ...linkData.notes,\r\n+            lastUpdated: new Date().toISOString(),\r\n+          }\r\n+        : undefined,\r\n     };\r\n \r\n-    if (dialogMode === 'add') {\r\n-      setCategories(categories.map(category =>\r\n-        category.id === selectedCategory\r\n-          ? { ...category, links: [...category.links, updatedLinkData] }\r\n-          : category\r\n-      ));\r\n-    } else if (dialogMode === 'edit' && editingLink) {\r\n-      setCategories(categories.map(category =>\r\n-        category.id === selectedCategory\r\n-          ? {\r\n-              ...category,\r\n-              links: category.links.map(link =>\r\n-                link.title === editingLink.title ? updatedLinkData : link\r\n-              )\r\n-            }\r\n-          : category\r\n-      ));\r\n+    if (dialogMode === \"add\") {\r\n+      setCategories(\r\n+        categories.map((category) =>\r\n+          category.id === selectedCategory\r\n+            ? { ...category, links: [...category.links, updatedLinkData] }\r\n+            : category\r\n+        )\r\n+      );\r\n+    } else if (dialogMode === \"edit\" && editingLink) {\r\n+      setCategories(\r\n+        categories.map((category) =>\r\n+          category.id === selectedCategory\r\n+            ? {\r\n+                ...category,\r\n+                links: category.links.map((link) =>\r\n+                  link.title === editingLink.title ? updatedLinkData : link\r\n+                ),\r\n+              }\r\n+            : category\r\n+        )\r\n+      );\r\n     }\r\n   };\r\n \r\n   // Filter categories based on search term (including notes)\r\n-  const filteredCategories = categories.filter(category =>\r\n-    category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-    category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-    category.links.some(link => \r\n-      link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n-    )\r\n+  const filteredCategories = categories.filter(\r\n+    (category) =>\r\n+      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.links.some(\r\n+        (link) =>\r\n+          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n+      )\r\n   );\r\n \r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n-      ieee: 'bg-blue-600',\r\n-      arxiv: 'bg-green-600',\r\n-      mdpi: 'bg-purple-600',\r\n-      tool: 'bg-yellow-600',\r\n-      database: 'bg-red-600',\r\n-      dataset: 'bg-indigo-600',\r\n-      specification: 'bg-pink-600',\r\n-      article: 'bg-orange-600'\r\n+      ieee: \"bg-blue-600\",\r\n+      arxiv: \"bg-green-600\",\r\n+      mdpi: \"bg-purple-600\",\r\n+      tool: \"bg-yellow-600\",\r\n+      database: \"bg-red-600\",\r\n+      dataset: \"bg-indigo-600\",\r\n+      specification: \"bg-pink-600\",\r\n+      article: \"bg-orange-600\",\r\n     };\r\n-    return colors[type as keyof typeof colors] || 'bg-gray-600';\r\n+    return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n   };\r\n \r\n   // Add scroll event listener\r\n   React.useEffect(() => {\r\n     const handleScroll = () => {\r\n       setScrolled(window.scrollY > 10);\r\n     };\r\n \r\n-    window.addEventListener('scroll', handleScroll);\r\n-    return () => window.removeEventListener('scroll', handleScroll);\r\n+    window.addEventListener(\"scroll\", handleScroll);\r\n+    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n   }, []);\r\n \r\n   return (\r\n     <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n-      <nav className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-        scrolled ? 'bg-black bg-opacity-80 backdrop-blur' : 'bg-transparent'\r\n-      }`}>\r\n+      <nav\r\n+        className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n+          scrolled ? \"bg-black bg-opacity-80 backdrop-blur\" : \"bg-transparent\"\r\n+        }`}\r\n+      >\r\n         <div className=\"max-w-7xl mx-auto px-4\">\r\n           <div className=\"flex items-center justify-between h-16\">\r\n             <div className=\"flex items-center space-x-4\">\r\n               <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n@@ -217,20 +271,25 @@\n \r\n       {/* Hero Section */}\r\n       <div className=\"relative min-h-screen flex items-center justify-center\">\r\n         <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n-        <div className=\"absolute inset-0\" style={{\r\n-          backgroundImage: 'radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)',\r\n-          backgroundSize: '30px 30px'\r\n-        }} />\r\n+        <div\r\n+          className=\"absolute inset-0\"\r\n+          style={{\r\n+            backgroundImage:\r\n+              \"radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)\",\r\n+            backgroundSize: \"30px 30px\",\r\n+          }}\r\n+        />\r\n         <div className=\"relative z-10 text-center px-4\">\r\n           <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n             Energy Dataset Portal\r\n           </h1>\r\n           <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n-            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n+            Explore comprehensive energy data resources for research and\r\n+            analysis\r\n           </p>\r\n-          \r\n+\r\n           {/* Search Bar */}\r\n           <div className=\"max-w-2xl mx-auto\">\r\n             <div className=\"relative\">\r\n               <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n@@ -251,18 +310,21 @@\n       {/* Categories Grid */}\r\n       <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n           {filteredCategories.map((category) => {\r\n-            const IconComponent = iconMap[category.icon as keyof typeof iconMap];\r\n-            const hasNotes = category.links.some(link => !!link.notes?.content);\r\n-            \r\n+            const IconComponent =\r\n+              iconMap[category.icon as keyof typeof iconMap];\r\n+            const hasNotes = category.links.some(\r\n+              (link) => !!link.notes?.content\r\n+            );\r\n+\r\n             return (\r\n               <Card\r\n                 key={category.id}\r\n                 className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n                   selectedCategory === category.id\r\n-                    ? 'bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50'\r\n-                    : 'bg-white bg-opacity-5 hover:bg-opacity-10'\r\n+                    ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n+                    : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n                 }`}\r\n                 onClick={() => setSelectedCategory(category.id)}\r\n               >\r\n                 <CardContent className=\"p-0 relative\">\r\n@@ -290,16 +352,24 @@\n                       <Trash2 className=\"w-4 h-4\" />\r\n                     </Button>\r\n                   </div>\r\n                   <div className=\"flex items-center justify-between mb-6\">\r\n-                    <div className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                      selectedCategory === category.id ? 'bg-blue-500 bg-opacity-20' : 'bg-white bg-opacity-10'\r\n-                    } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}>\r\n+                    <div\r\n+                      className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"bg-blue-500 bg-opacity-20\"\r\n+                          : \"bg-white bg-opacity-10\"\r\n+                      } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}\r\n+                    >\r\n                       {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n                     </div>\r\n-                    <ChevronRight className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                      selectedCategory === category.id ? 'translate-x-1 text-blue-400' : ''\r\n-                    } group-hover:translate-x-1`} />\r\n+                    <ChevronRight\r\n+                      className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"translate-x-1 text-blue-400\"\r\n+                          : \"\"\r\n+                      } group-hover:translate-x-1`}\r\n+                    />\r\n                   </div>\r\n                   <div className=\"flex items-center justify-between mb-3\">\r\n                     <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n                     {hasNotes && (\r\n@@ -308,9 +378,11 @@\n                         <span>Has notes</span>\r\n                       </div>\r\n                     )}\r\n                   </div>\r\n-                  <p className=\"text-gray-400 text-sm leading-relaxed\">{category.description}</p>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">\r\n+                    {category.description}\r\n+                  </p>\r\n                 </CardContent>\r\n               </Card>\r\n             );\r\n           })}\r\n@@ -323,9 +395,10 @@\n           <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n             <CardContent className=\"p-0\">\r\n               <div className=\"flex items-center justify-between mb-8\">\r\n                 <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                  {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n+                  {categories.find((c) => c.id === selectedCategory)?.title}{\" \"}\r\n+                  Resources\r\n                 </h2>\r\n                 <Button\r\n                   onClick={handleAddLink}\r\n                   className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n@@ -333,90 +406,99 @@\n                   <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n                 </Button>\r\n               </div>\r\n               <div className=\"space-y-4\">\r\n-                {categories.find(c => c.id === selectedCategory)?.links.map((link: DatasetLink, index: number) => {\r\n-                  const [isExpanded, setIsExpanded] = useState(false);\r\n-                  const hasNotes = !!link.notes?.content;\r\n+                {categories\r\n+                  .find((c) => c.id === selectedCategory)\r\n+                  ?.links.map((link: DatasetLink, index: number) => {\r\n+                    const isExpanded = expandedLinks.has(link.title);\r\n+                    const hasNotes = !!link.notes?.content;\r\n \r\n-                  return (\r\n-                    <div\r\n-                      key={index}\r\n-                      className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                    >\r\n-                      <div className=\"p-6\">\r\n-                        <div className=\"flex items-center justify-between\">\r\n-                          <div className=\"flex items-center space-x-4\">\r\n-                            <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                              {link.title}\r\n-                            </span>\r\n-                            <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n-                              {link.type}\r\n-                            </Badge>\r\n-                            {hasNotes && !isExpanded && (\r\n-                              <button\r\n-                                onClick={() => setIsExpanded(true)}\r\n-                                className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                    return (\r\n+                      <div\r\n+                        key={index}\r\n+                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                      >\r\n+                        <div className=\"p-6\">\r\n+                          <div className=\"flex items-center justify-between\">\r\n+                            <div className=\"flex items-center space-x-4\">\r\n+                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                                {link.title}\r\n+                              </span>\r\n+                              <Badge\r\n+                                className={`${getBadgeColor(\r\n+                                  link.type\r\n+                                )} text-white`}\r\n                               >\r\n-                                <StickyNote className=\"w-3 h-3\" />\r\n-                                <span>View notes</span>\r\n-                              </button>\r\n-                            )}\r\n-                          </div>\r\n-                          <div className=\"flex items-center space-x-2\">\r\n-                            {hasNotes && (\r\n+                                {link.type}\r\n+                              </Badge>\r\n+                              {hasNotes && !isExpanded && (\r\n+                                <button\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                                >\r\n+                                  <StickyNote className=\"w-3 h-3\" />\r\n+                                  <span>View notes</span>\r\n+                                </button>\r\n+                              )}\r\n+                            </div>\r\n+                            <div className=\"flex items-center space-x-2\">\r\n+                              {hasNotes && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                >\r\n+                                  {isExpanded ? (\r\n+                                    <ChevronUp className=\"w-4 h-4\" />\r\n+                                  ) : (\r\n+                                    <ChevronDown className=\"w-4 h-4\" />\r\n+                                  )}\r\n+                                </Button>\r\n+                              )}\r\n                               <Button\r\n                                 variant=\"ghost\"\r\n                                 size=\"icon\"\r\n                                 className=\"text-gray-400 hover:text-blue-400\"\r\n-                                onClick={() => setIsExpanded(!isExpanded)}\r\n+                                onClick={() => handleEditLink(link)}\r\n                               >\r\n-                                {isExpanded ? (\r\n-                                  <ChevronUp className=\"w-4 h-4\" />\r\n-                                ) : (\r\n-                                  <ChevronDown className=\"w-4 h-4\" />\r\n-                                )}\r\n+                                <Edit className=\"w-4 h-4\" />\r\n                               </Button>\r\n-                            )}\r\n-                            <Button\r\n-                              variant=\"ghost\"\r\n-                              size=\"icon\"\r\n-                              className=\"text-gray-400 hover:text-blue-400\"\r\n-                              onClick={() => handleEditLink(link)}\r\n-                            >\r\n-                              <Edit className=\"w-4 h-4\" />\r\n-                            </Button>\r\n-                            <Button\r\n-                              variant=\"ghost\"\r\n-                              size=\"icon\"\r\n-                              className=\"text-gray-400 hover:text-red-400\"\r\n-                              onClick={() => handleDeleteLink(link.title)}\r\n-                            >\r\n-                              <Trash2 className=\"w-4 h-4\" />\r\n-                            </Button>\r\n-                            {link.url !== '#' && (\r\n-                              <a\r\n-                                href={link.url}\r\n-                                target=\"_blank\"\r\n-                                rel=\"noopener noreferrer\"\r\n-                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-red-400\"\r\n+                                onClick={() => handleDeleteLink(link.title)}\r\n                               >\r\n-                                <ExternalLink className=\"w-4 h-4\" />\r\n-                              </a>\r\n-                            )}\r\n+                                <Trash2 className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              {link.url !== \"#\" && (\r\n+                                <a\r\n+                                  href={link.url}\r\n+                                  target=\"_blank\"\r\n+                                  rel=\"noopener noreferrer\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                >\r\n+                                  <ExternalLink className=\"w-4 h-4\" />\r\n+                                </a>\r\n+                              )}\r\n+                            </div>\r\n                           </div>\r\n+                          {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n                         </div>\r\n-                        {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n                       </div>\r\n-                    </div>\r\n-                  );\r\n-                })}\r\n+                    );\r\n+                  })}\r\n               </div>\r\n             </CardContent>\r\n           </Card>\r\n         </div>\r\n       )}\r\n-\r\n       {/* Dialogs */}\r\n       <CategoryDialog\r\n         isOpen={isCategoryDialogOpen}\r\n         onClose={() => setIsCategoryDialogOpen(false)}\r\n@@ -435,5 +517,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default DatasetPortal;\n\\ No newline at end of file\n+export default DatasetPortal;\r\n"
                },
                {
                    "date": 1730130806950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,8 @@\n     </div>\r\n   );\r\n };\r\n \r\n-const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n \r\n const toggleLinkExpansion = (linkTitle: string) => {\r\n   setExpandedLinks((prev) => {\r\n     const newSet = new Set(prev);\r\n@@ -82,8 +81,9 @@\n   });\r\n };\r\n \r\n const DatasetPortal = () => {\r\n+  const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n   const [categories, setCategories] = useLocalStorage(\r\n"
                },
                {
                    "date": 1730130817316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,20 +68,10 @@\n   );\r\n };\r\n \r\n \r\n-const toggleLinkExpansion = (linkTitle: string) => {\r\n-  setExpandedLinks((prev) => {\r\n-    const newSet = new Set(prev);\r\n-    if (newSet.has(linkTitle)) {\r\n-      newSet.delete(linkTitle);\r\n-    } else {\r\n-      newSet.add(linkTitle);\r\n-    }\r\n-    return newSet;\r\n-  });\r\n-};\r\n \r\n+\r\n const DatasetPortal = () => {\r\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n@@ -106,8 +96,20 @@\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n+  const toggleLinkExpansion = (linkTitle: string) => {\r\n+    setExpandedLinks((prev) => {\r\n+      const newSet = new Set(prev);\r\n+      if (newSet.has(linkTitle)) {\r\n+        newSet.delete(linkTitle);\r\n+      } else {\r\n+        newSet.add(linkTitle);\r\n+      }\r\n+      return newSet;\r\n+    });\r\n+  };\r\n+\r\n   const handleEditCategory = (category: Category) => {\r\n     setDialogMode(\"edit\");\r\n     setEditingCategory(category);\r\n     setIsCategoryDialogOpen(true);\r\n"
                },
                {
                    "date": 1730131255861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,15 +107,9 @@\n       }\r\n       return newSet;\r\n     });\r\n   };\r\n-\r\n-  const handleEditCategory = (category: Category) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingCategory(category);\r\n-    setIsCategoryDialogOpen(true);\r\n-  };\r\n-\r\n+  \r\n   const handleDeleteCategory = (categoryId: number) => {\r\n     if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n       setCategories(categories.filter((c) => c.id !== categoryId));\r\n       if (selectedCategory === categoryId) {\r\n@@ -148,12 +142,18 @@\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleEditLink = (link: DatasetLink) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingLink(link);\r\n+    setDialogMode('edit');\r\n+    setEditingLink({...link}); // Create a copy of the link data\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n+  \r\n+  const handleEditCategory = (category: Category) => {\r\n+    setDialogMode('edit');\r\n+    setEditingCategory({...category}); // Create a copy of the category data\r\n+    setIsCategoryDialogOpen(true);\r\n+  };\r\n \r\n   const handleDeleteLink = (linkTitle: string) => {\r\n     if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n       setCategories(\r\n"
                },
                {
                    "date": 1730136980533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n import LinkDialog from \"./LinkDialog\";\r\n import categoriesData from \"@/data/categories.json\";\r\n import { Category, Link as DatasetLink } from \"@/types\";\r\n import { formatDistanceToNow } from \"date-fns\";\r\n+import { migrateDataToFirestore } from \"@/lib/firebase/migration\";\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n@@ -67,11 +68,8 @@\n     </div>\r\n   );\r\n };\r\n \r\n-\r\n-\r\n-\r\n const DatasetPortal = () => {\r\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n@@ -96,8 +94,17 @@\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n+  const handleMigration = async () => {\r\n+    const success = await migrateDataToFirestore(categories);\r\n+    if (success) {\r\n+      alert(\"Migration completed successfully!\");\r\n+    } else {\r\n+      alert(\"Migration failed. Check console for details.\");\r\n+    }\r\n+  };\r\n+\r\n   const toggleLinkExpansion = (linkTitle: string) => {\r\n     setExpandedLinks((prev) => {\r\n       const newSet = new Set(prev);\r\n       if (newSet.has(linkTitle)) {\r\n@@ -107,9 +114,9 @@\n       }\r\n       return newSet;\r\n     });\r\n   };\r\n-  \r\n+\r\n   const handleDeleteCategory = (categoryId: number) => {\r\n     if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n       setCategories(categories.filter((c) => c.id !== categoryId));\r\n       if (selectedCategory === categoryId) {\r\n@@ -142,16 +149,16 @@\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleEditLink = (link: DatasetLink) => {\r\n-    setDialogMode('edit');\r\n-    setEditingLink({...link}); // Create a copy of the link data\r\n+    setDialogMode(\"edit\");\r\n+    setEditingLink({ ...link }); // Create a copy of the link data\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n-  \r\n+\r\n   const handleEditCategory = (category: Category) => {\r\n-    setDialogMode('edit');\r\n-    setEditingCategory({...category}); // Create a copy of the category data\r\n+    setDialogMode(\"edit\");\r\n+    setEditingCategory({ ...category }); // Create a copy of the category data\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n   const handleDeleteLink = (linkTitle: string) => {\r\n@@ -390,8 +397,15 @@\n           })}\r\n         </div>\r\n       </div>\r\n \r\n+      <Button\r\n+        onClick={handleMigration}\r\n+        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+      >\r\n+        Migrate to Firebase\r\n+      </Button>\r\n+\r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n           <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n"
                },
                {
                    "date": 1730137333537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,83 +141,63 @@\n       );\r\n     }\r\n   };\r\n \r\n-  // Event Handlers for Links\r\n   const handleAddLink = () => {\r\n     setDialogMode(\"add\");\r\n     setEditingLink(undefined);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleEditLink = (link: DatasetLink) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingLink({ ...link }); // Create a copy of the link data\r\n+    setDialogMode('edit');\r\n+    setEditingLink({...link});\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n-  const handleEditCategory = (category: Category) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingCategory({ ...category }); // Create a copy of the category data\r\n-    setIsCategoryDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleDeleteLink = (linkTitle: string) => {\r\n+  const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n     if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n-      setCategories(\r\n-        categories.map((category) =>\r\n-          category.id === selectedCategory\r\n-            ? {\r\n-                ...category,\r\n-                links: category.links.filter(\r\n-                  (link) => link.title !== linkTitle\r\n-                ),\r\n-              }\r\n-            : category\r\n-        )\r\n-      );\r\n+      const success = await deleteLink(categoryId, linkId);\r\n+      if (!success) {\r\n+        alert(\"Failed to delete link. Please try again.\");\r\n+      }\r\n     }\r\n   };\r\n \r\n-  const handleSaveLink = (linkData: DatasetLink) => {\r\n-    const currentCategory = categories.find((c) => c.id === selectedCategory);\r\n-    if (!currentCategory) return;\r\n \r\n-    // Prepare link data with notes\r\n-    const updatedLinkData = {\r\n-      ...linkData,\r\n-      notes: linkData.notes\r\n-        ? {\r\n-            ...linkData.notes,\r\n-            lastUpdated: new Date().toISOString(),\r\n-          }\r\n-        : undefined,\r\n-    };\r\n+  const handleSaveLink = async (linkData: DatasetLink) => {\r\n+    if (!selectedCategory) return;\r\n \r\n-    if (dialogMode === \"add\") {\r\n-      setCategories(\r\n-        categories.map((category) =>\r\n-          category.id === selectedCategory\r\n-            ? { ...category, links: [...category.links, updatedLinkData] }\r\n-            : category\r\n-        )\r\n-      );\r\n-    } else if (dialogMode === \"edit\" && editingLink) {\r\n-      setCategories(\r\n-        categories.map((category) =>\r\n-          category.id === selectedCategory\r\n-            ? {\r\n-                ...category,\r\n-                links: category.links.map((link) =>\r\n-                  link.title === editingLink.title ? updatedLinkData : link\r\n-                ),\r\n-              }\r\n-            : category\r\n-        )\r\n-      );\r\n+    try {\r\n+      if (dialogMode === \"add\") {\r\n+        const success = await addLink(selectedCategory, linkData);\r\n+        if (!success) {\r\n+          alert(\"Failed to add link. Please try again.\");\r\n+        }\r\n+      } else if (dialogMode === \"edit\" && editingLink) {\r\n+        const success = await updateLink(\r\n+          selectedCategory,\r\n+          editingLink.title,\r\n+          linkData\r\n+        );\r\n+        if (!success) {\r\n+          alert(\"Failed to update link. Please try again.\");\r\n+        }\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Error saving link:\", error);\r\n+      alert(\"An error occurred while saving the link.\");\r\n     }\r\n   };\r\n \r\n+  // Add loading states to the UI\r\n+  if (categoriesLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n+        <div className=\"text-xl\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n   // Filter categories based on search term (including notes)\r\n   const filteredCategories = categories.filter(\r\n     (category) =>\r\n       category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n"
                },
                {
                    "date": 1730137357684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,9 @@\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n+\r\n   const handleMigration = async () => {\r\n     const success = await migrateDataToFirestore(categories);\r\n     if (success) {\r\n       alert(\"Migration completed successfully!\");\r\n@@ -115,31 +116,32 @@\n       return newSet;\r\n     });\r\n   };\r\n \r\n-  const handleDeleteCategory = (categoryId: number) => {\r\n+  const handleDeleteCategory = async (categoryId: string) => {\r\n     if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n-      setCategories(categories.filter((c) => c.id !== categoryId));\r\n-      if (selectedCategory === categoryId) {\r\n-        setSelectedCategory(null);\r\n+      const success = await deleteCategory(categoryId);\r\n+      if (success) {\r\n+        if (selectedCategory === categoryId) {\r\n+          setSelectedCategory(null);\r\n+        }\r\n+      } else {\r\n+        alert(\"Failed to delete category. Please try again.\");\r\n       }\r\n     }\r\n   };\r\n \r\n-  const handleSaveCategory = (categoryData: Partial<Category>) => {\r\n+  const handleSaveCategory = async (categoryData: Partial<Category>) => {\r\n     if (dialogMode === \"add\") {\r\n-      const newCategory: Category = {\r\n-        ...(categoryData as Category),\r\n-        id: Math.max(0, ...categories.map((c) => c.id)) + 1,\r\n-        links: [],\r\n-      };\r\n-      setCategories([...categories, newCategory]);\r\n+      const success = await addCategory(categoryData as Category);\r\n+      if (!success) {\r\n+        alert(\"Failed to add category. Please try again.\");\r\n+      }\r\n     } else if (dialogMode === \"edit\" && editingCategory) {\r\n-      setCategories(\r\n-        categories.map((c) =>\r\n-          c.id === editingCategory.id ? { ...c, ...categoryData } : c\r\n-        )\r\n-      );\r\n+      const success = await updateCategory(editingCategory.id.toString(), categoryData);\r\n+      if (!success) {\r\n+        alert(\"Failed to update category. Please try again.\");\r\n+      }\r\n     }\r\n   };\r\n \r\n   const handleAddLink = () => {\r\n"
                },
                {
                    "date": 1730137382226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,19 +73,22 @@\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n-  const [categories, setCategories] = useLocalStorage(\r\n-    \"categories\",\r\n-    categoriesData.categories\r\n-  );\r\n-\r\n+  const { categories, loading: categoriesLoading } = useFirebase();\r\n+  const {\r\n+    addCategory,\r\n+    updateCategory,\r\n+    deleteCategory,\r\n+    addLink,\r\n+    updateLink,\r\n+    deleteLink,\r\n+    loading: operationsLoading\r\n+  } = useFirebaseOperations();\r\n   // Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<\r\n-    Category | undefined\r\n-  >();\r\n+  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n   // Event Handlers for Categories\r\n"
                },
                {
                    "date": 1730137405865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,12 @@\n import categoriesData from \"@/data/categories.json\";\r\n import { Category, Link as DatasetLink } from \"@/types\";\r\n import { formatDistanceToNow } from \"date-fns\";\r\n import { migrateDataToFirestore } from \"@/lib/firebase/migration\";\r\n+import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n+import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n \r\n+\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n@@ -74,8 +77,9 @@\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n   const { categories, loading: categoriesLoading } = useFirebase();\r\n+  \r\n   const {\r\n     addCategory,\r\n     updateCategory,\r\n     deleteCategory,\r\n@@ -83,8 +87,10 @@\n     updateLink,\r\n     deleteLink,\r\n     loading: operationsLoading\r\n   } = useFirebaseOperations();\r\n+\r\n+\r\n   // Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n   const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n"
                },
                {
                    "date": 1730137589388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,8 @@\n import { migrateDataToFirestore } from \"@/lib/firebase/migration\";\r\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n \r\n-\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n@@ -77,24 +76,25 @@\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n   const { categories, loading: categoriesLoading } = useFirebase();\r\n-  \r\n+\r\n   const {\r\n     addCategory,\r\n     updateCategory,\r\n     deleteCategory,\r\n     addLink,\r\n     updateLink,\r\n     deleteLink,\r\n-    loading: operationsLoading\r\n+    loading: operationsLoading,\r\n   } = useFirebaseOperations();\r\n \r\n-\r\n   // Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n+  const [editingCategory, setEditingCategory] = useState<\r\n+    Category | undefined\r\n+  >();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n   // Event Handlers for Categories\r\n@@ -103,9 +103,8 @@\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n-\r\n   const handleMigration = async () => {\r\n     const success = await migrateDataToFirestore(categories);\r\n     if (success) {\r\n       alert(\"Migration completed successfully!\");\r\n@@ -145,9 +144,12 @@\n       if (!success) {\r\n         alert(\"Failed to add category. Please try again.\");\r\n       }\r\n     } else if (dialogMode === \"edit\" && editingCategory) {\r\n-      const success = await updateCategory(editingCategory.id.toString(), categoryData);\r\n+      const success = await updateCategory(\r\n+        editingCategory.id.toString(),\r\n+        categoryData\r\n+      );\r\n       if (!success) {\r\n         alert(\"Failed to update category. Please try again.\");\r\n       }\r\n     }\r\n@@ -159,10 +161,10 @@\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleEditLink = (link: DatasetLink) => {\r\n-    setDialogMode('edit');\r\n-    setEditingLink({...link});\r\n+    setDialogMode(\"edit\");\r\n+    setEditingLink({ ...link });\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n@@ -173,9 +175,8 @@\n       }\r\n     }\r\n   };\r\n \r\n-\r\n   const handleSaveLink = async (linkData: DatasetLink) => {\r\n     if (!selectedCategory) return;\r\n \r\n     try {\r\n@@ -402,9 +403,12 @@\n           <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n             <CardContent className=\"p-0\">\r\n               <div className=\"flex items-center justify-between mb-8\">\r\n                 <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                  {categories.find((c) => c.id === selectedCategory)?.title}{\" \"}\r\n+                  {\r\n+                    categories.find((c) => c.id.toString() === selectedCategory)\r\n+                      ?.title\r\n+                  }{\" \"}\r\n                   Resources\r\n                 </h2>\r\n                 <Button\r\n                   onClick={handleAddLink}\r\n@@ -414,9 +418,9 @@\n                 </Button>\r\n               </div>\r\n               <div className=\"space-y-4\">\r\n                 {categories\r\n-                  .find((c) => c.id === selectedCategory)\r\n+                  .find((c) => c.id.toString() === selectedCategory)\r\n                   ?.links.map((link: DatasetLink, index: number) => {\r\n                     const isExpanded = expandedLinks.has(link.title);\r\n                     const hasNotes = !!link.notes?.content;\r\n \r\n"
                },
                {
                    "date": 1730137627400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,13 +321,13 @@\n             return (\r\n               <Card\r\n                 key={category.id}\r\n                 className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n-                  selectedCategory === category.id\r\n+                  selectedCategory === category.id.toString()\r\n                     ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n                     : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n                 }`}\r\n-                onClick={() => setSelectedCategory(category.id)}\r\n+                onClick={() => setSelectedCategory(category.id.toString())}\r\n               >\r\n                 <CardContent className=\"p-0 relative\">\r\n                   <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n                     <Button\r\n"
                },
                {
                    "date": 1730137654059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -346,9 +346,9 @@\n                       size=\"icon\"\r\n                       className=\"text-gray-400 hover:text-red-400\"\r\n                       onClick={(e) => {\r\n                         e.stopPropagation();\r\n-                        handleDeleteCategory(category.id);\r\n+                        handleDeleteCategory(category.id.toString());\r\n                       }}\r\n                     >\r\n                       <Trash2 className=\"w-4 h-4\" />\r\n                     </Button>\r\n"
                },
                {
                    "date": 1730137831754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,14 +71,16 @@\n   );\r\n };\r\n \r\n const DatasetPortal = () => {\r\n+  // --- All hooks must be at the top level ---\r\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n-  const [selectedCategory, setSelectedCategory] = useState<number | null>(null);\r\n+  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n+\r\n+  // Firebase hooks\r\n   const { categories, loading: categoriesLoading } = useFirebase();\r\n-\r\n   const {\r\n     addCategory,\r\n     updateCategory,\r\n     deleteCategory,\r\n@@ -96,9 +98,31 @@\n   >();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n-  // Event Handlers for Categories\r\n+  // Scroll effect\r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 10);\r\n+    };\r\n+\r\n+    window.addEventListener(\"scroll\", handleScroll);\r\n+    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n+  }, []);\r\n+\r\n+  // Filter categories based on search term\r\n+  const filteredCategories = categories.filter(\r\n+    (category) =>\r\n+      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.links.some(\r\n+        (link) =>\r\n+          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n+      )\r\n+  );\r\n+\r\n+  // Event handlers\r\n   const handleAddCategory = () => {\r\n     setDialogMode(\"add\");\r\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n"
                },
                {
                    "date": 1730137899120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,8 +232,9 @@\n         <div className=\"text-xl\">Loading...</div>\r\n       </div>\r\n     );\r\n   }\r\n+\r\n   // Filter categories based on search term (including notes)\r\n   const filteredCategories = categories.filter(\r\n     (category) =>\r\n       category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n"
                },
                {
                    "date": 1730137913319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -533,8 +533,9 @@\n             </CardContent>\r\n           </Card>\r\n         </div>\r\n       )}\r\n+\r\n       {/* Dialogs */}\r\n       <CategoryDialog\r\n         isOpen={isCategoryDialogOpen}\r\n         onClose={() => setIsCategoryDialogOpen(false)}\r\n"
                },
                {
                    "date": 1730138065273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,20 +233,10 @@\n       </div>\r\n     );\r\n   }\r\n \r\n-  // Filter categories based on search term (including notes)\r\n-  const filteredCategories = categories.filter(\r\n-    (category) =>\r\n-      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.links.some(\r\n-        (link) =>\r\n-          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n-      )\r\n-  );\r\n \r\n+\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730138136463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\";\r\n \r\n-import React, { useState } from \"react\";\r\n+import React, { useState, useEffect } from \"react\"; \r\n import {\r\n   Search,\r\n   ChevronRight,\r\n   Database,\r\n@@ -234,9 +234,8 @@\n     );\r\n   }\r\n \r\n \r\n-\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730138363600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,36 +71,34 @@\n   );\r\n };\r\n \r\n const DatasetPortal = () => {\r\n-  // --- All hooks must be at the top level ---\r\n+  // 1. All useState hooks\r\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n-\r\n-  // Firebase hooks\r\n+  \r\n+  // 2. Custom hooks\r\n   const { categories, loading: categoriesLoading } = useFirebase();\r\n   const {\r\n     addCategory,\r\n     updateCategory,\r\n     deleteCategory,\r\n     addLink,\r\n     updateLink,\r\n     deleteLink,\r\n-    loading: operationsLoading,\r\n+    loading: operationsLoading\r\n   } = useFirebaseOperations();\r\n \r\n-  // Dialog states\r\n+  // 3. Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<\r\n-    Category | undefined\r\n-  >();\r\n+  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n-  // Scroll effect\r\n+  // 4. Effects - all useEffect hooks need to be together\r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n       setScrolled(window.scrollY > 10);\r\n     };\r\n@@ -108,9 +106,9 @@\n     window.addEventListener(\"scroll\", handleScroll);\r\n     return () => window.removeEventListener(\"scroll\", handleScroll);\r\n   }, []);\r\n \r\n-  // Filter categories based on search term\r\n+  // 5. Derived state\r\n   const filteredCategories = categories.filter(\r\n     (category) =>\r\n       category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n       category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n@@ -120,15 +118,25 @@\n           link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n       )\r\n   );\r\n \r\n-  // Event handlers\r\n+  // 6. Loading state - move this after all hooks\r\n+  if (categoriesLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n+        <div className=\"text-xl\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // 7. Event handlers - after all hooks and before render\r\n   const handleAddCategory = () => {\r\n     setDialogMode(\"add\");\r\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n+\r\n   const handleMigration = async () => {\r\n     const success = await migrateDataToFirestore(categories);\r\n     if (success) {\r\n       alert(\"Migration completed successfully!\");\r\n@@ -224,18 +232,8 @@\n       alert(\"An error occurred while saving the link.\");\r\n     }\r\n   };\r\n \r\n-  // Add loading states to the UI\r\n-  if (categoriesLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n-        <div className=\"text-xl\">Loading...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730138379801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -246,18 +246,10 @@\n     };\r\n     return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n   };\r\n \r\n-  // Add scroll event listener\r\n-  React.useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      setScrolled(window.scrollY > 10);\r\n-    };\r\n+  \r\n \r\n-    window.addEventListener(\"scroll\", handleScroll);\r\n-    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n-  }, []);\r\n-\r\n   return (\r\n     <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav\r\n"
                },
                {
                    "date": 1730138750506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n \"use client\";\r\n \r\n-import React, { useState, useEffect } from \"react\"; \r\n+import React, { useState, useEffect } from \"react\";\r\n import {\r\n   Search,\r\n   ChevronRight,\r\n   Database,\r\n@@ -76,9 +76,9 @@\n   const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n   const [searchTerm, setSearchTerm] = useState(\"\");\r\n   const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n   const [scrolled, setScrolled] = useState(false);\r\n-  \r\n+\r\n   // 2. Custom hooks\r\n   const { categories, loading: categoriesLoading } = useFirebase();\r\n   const {\r\n     addCategory,\r\n@@ -86,15 +86,17 @@\n     deleteCategory,\r\n     addLink,\r\n     updateLink,\r\n     deleteLink,\r\n-    loading: operationsLoading\r\n+    loading: operationsLoading,\r\n   } = useFirebaseOperations();\r\n \r\n   // 3. Dialog states\r\n   const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n   const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<Category | undefined>();\r\n+  const [editingCategory, setEditingCategory] = useState<\r\n+    Category | undefined\r\n+  >();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n   // 4. Effects - all useEffect hooks need to be together\r\n@@ -134,14 +136,46 @@\n     setEditingCategory(undefined);\r\n     setIsCategoryDialogOpen(true);\r\n   };\r\n \r\n+  const handleMigration = async () => {\r\n+    const categoriesData = await import(\"@/data/categories.json\");\r\n \r\n-  const handleMigration = async () => {\r\n-    const success = await migrateDataToFirestore(categories);\r\n-    if (success) {\r\n-      alert(\"Migration completed successfully!\");\r\n-    } else {\r\n+    // First validate the data\r\n+    if (!validateMigrationData(categoriesData.categories)) {\r\n+      alert(\r\n+        \"Invalid data structure detected. Please check the console for details.\"\r\n+      );\r\n+      return;\r\n+    }\r\n+\r\n+    // Confirm migration\r\n+    if (\r\n+      !window.confirm(\r\n+        \"This will migrate all categories and links to Firebase. Continue?\"\r\n+      )\r\n+    ) {\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Attempt migration\r\n+      const success = await migrateDataToFirestore(categoriesData.categories);\r\n+\r\n+      if (success) {\r\n+        alert(\"Migration completed successfully!\");\r\n+      } else {\r\n+        const cleanup = window.confirm(\r\n+          \"Migration failed. Would you like to clean up any partial migration data?\"\r\n+        );\r\n+\r\n+        if (cleanup) {\r\n+          await cleanupFailedMigration(categoriesData.categories);\r\n+          alert(\"Cleanup completed.\");\r\n+        }\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Migration error:\", error);\r\n       alert(\"Migration failed. Check console for details.\");\r\n     }\r\n   };\r\n \r\n@@ -246,10 +280,8 @@\n     };\r\n     return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n   };\r\n \r\n-  \r\n-\r\n   return (\r\n     <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n       {/* Navigation Bar */}\r\n       <nav\r\n"
                },
                {
                    "date": 1730138840960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n import LinkDialog from \"./LinkDialog\";\r\n import categoriesData from \"@/data/categories.json\";\r\n import { Category, Link as DatasetLink } from \"@/types\";\r\n import { formatDistanceToNow } from \"date-fns\";\r\n-import { migrateDataToFirestore } from \"@/lib/firebase/migration\";\r\n+import { migrateDataToFirestore, validateMigrationData } from \"@/lib/firebase/migration\";\r\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n \r\n const iconMap = {\r\n"
                },
                {
                    "date": 1730138966942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -425,14 +425,14 @@\n           })}\r\n         </div>\r\n       </div>\r\n \r\n-      <Button\r\n+      {/* <Button\r\n         onClick={handleMigration}\r\n         className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n       >\r\n         Migrate to Firebase\r\n-      </Button>\r\n+      </Button> */}\r\n \r\n       {/* Dataset List */}\r\n       {selectedCategory && (\r\n         <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n"
                },
                {
                    "date": 1730139329204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -241,33 +241,46 @@\n       }\r\n     }\r\n   };\r\n \r\n-  const handleSaveLink = async (linkData: DatasetLink) => {\r\n+  const handleSaveLink = async (linkData: Link) => {\r\n     if (!selectedCategory) return;\r\n-\r\n+  \r\n     try {\r\n       if (dialogMode === \"add\") {\r\n-        const success = await addLink(selectedCategory, linkData);\r\n+        // Generate a proper ID for the new link\r\n+        const newLinkData = {\r\n+          ...linkData,\r\n+          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n+        };\r\n+        \r\n+        const success = await addLink(selectedCategory, newLinkData);\r\n         if (!success) {\r\n           alert(\"Failed to add link. Please try again.\");\r\n         }\r\n       } else if (dialogMode === \"edit\" && editingLink) {\r\n+        // Use the existing link ID or generate one if it doesn't exist\r\n+        const updatedLinkData = {\r\n+          ...linkData,\r\n+          id: editingLink.id || linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n+        };\r\n+        \r\n         const success = await updateLink(\r\n           selectedCategory,\r\n-          editingLink.title,\r\n-          linkData\r\n+          updatedLinkData.id,\r\n+          updatedLinkData\r\n         );\r\n         if (!success) {\r\n           alert(\"Failed to update link. Please try again.\");\r\n         }\r\n       }\r\n+      \r\n+      setIsLinkDialogOpen(false);\r\n     } catch (error) {\r\n       console.error(\"Error saving link:\", error);\r\n       alert(\"An error occurred while saving the link.\");\r\n     }\r\n   };\r\n-\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730139392328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,12 @@\n import LinkDialog from \"./LinkDialog\";\r\n import categoriesData from \"@/data/categories.json\";\r\n import { Category, Link as DatasetLink } from \"@/types\";\r\n import { formatDistanceToNow } from \"date-fns\";\r\n-import { migrateDataToFirestore, validateMigrationData } from \"@/lib/firebase/migration\";\r\n+import {\r\n+  migrateDataToFirestore,\r\n+  validateMigrationData,\r\n+} from \"@/lib/firebase/migration\";\r\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n \r\n const iconMap = {\r\n@@ -233,38 +236,47 @@\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n   const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n+    if (!selectedCategory) return;\r\n+\r\n     if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n-      const success = await deleteLink(categoryId, linkId);\r\n-      if (!success) {\r\n-        alert(\"Failed to delete link. Please try again.\");\r\n+      try {\r\n+        const success = await deleteLink(selectedCategory, linkId);\r\n+        if (!success) {\r\n+          alert(\"Failed to delete link. Please try again.\");\r\n+        }\r\n+      } catch (error) {\r\n+        console.error(\"Error deleting link:\", error);\r\n+        alert(\"An error occurred while deleting the link.\");\r\n       }\r\n     }\r\n   };\r\n \r\n   const handleSaveLink = async (linkData: Link) => {\r\n     if (!selectedCategory) return;\r\n-  \r\n+\r\n     try {\r\n       if (dialogMode === \"add\") {\r\n         // Generate a proper ID for the new link\r\n         const newLinkData = {\r\n           ...linkData,\r\n-          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n+          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n         };\r\n-        \r\n+\r\n         const success = await addLink(selectedCategory, newLinkData);\r\n         if (!success) {\r\n           alert(\"Failed to add link. Please try again.\");\r\n         }\r\n       } else if (dialogMode === \"edit\" && editingLink) {\r\n         // Use the existing link ID or generate one if it doesn't exist\r\n         const updatedLinkData = {\r\n           ...linkData,\r\n-          id: editingLink.id || linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\r\n+          id:\r\n+            editingLink.id ||\r\n+            linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n         };\r\n-        \r\n+\r\n         const success = await updateLink(\r\n           selectedCategory,\r\n           updatedLinkData.id,\r\n           updatedLinkData\r\n@@ -272,15 +284,16 @@\n         if (!success) {\r\n           alert(\"Failed to update link. Please try again.\");\r\n         }\r\n       }\r\n-      \r\n+\r\n       setIsLinkDialogOpen(false);\r\n     } catch (error) {\r\n       console.error(\"Error saving link:\", error);\r\n       alert(\"An error occurred while saving the link.\");\r\n     }\r\n   };\r\n+\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730139414018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -229,14 +229,15 @@\n     setEditingLink(undefined);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n-  const handleEditLink = (link: DatasetLink) => {\r\n+  const handleEditLink = (link: Link) => {\r\n     setDialogMode(\"edit\");\r\n-    setEditingLink({ ...link });\r\n+    setEditingLink(link);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n+  \r\n   const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n     if (!selectedCategory) return;\r\n \r\n     if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n"
                },
                {
                    "date": 1730139428354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -235,9 +235,8 @@\n     setEditingLink(link);\r\n     setIsLinkDialogOpen(true);\r\n   };\r\n \r\n-  \r\n   const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n     if (!selectedCategory) return;\r\n \r\n     if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n@@ -587,8 +586,9 @@\n         onClose={() => setIsLinkDialogOpen(false)}\r\n         onSave={handleSaveLink}\r\n         link={editingLink}\r\n         mode={dialogMode}\r\n+        categoryId={selectedCategory || undefined}\r\n       />\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1730139475281,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,596 @@\n+\"use client\";\r\n+\r\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Search,\r\n+  ChevronRight,\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+  Edit,\r\n+  Trash2,\r\n+  Plus,\r\n+  PlusCircle,\r\n+  ExternalLink,\r\n+  ChevronDown,\r\n+  ChevronUp,\r\n+  StickyNote,\r\n+} from \"lucide-react\";\r\n+import { Card, CardContent } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { useLocalStorage } from \"@/hooks/useLocalStorage\";\r\n+import CategoryDialog from \"./CategoryDialog\";\r\n+import LinkDialog from \"./LinkDialog\";\r\n+import categoriesData from \"@/data/categories.json\";\r\n+import { Category, Link as DatasetLink } from \"@/types\";\r\n+import { formatDistanceToNow } from \"date-fns\";\r\n+import {\r\n+  migrateDataToFirestore,\r\n+  validateMigrationData,\r\n+} from \"@/lib/firebase/migration\";\r\n+import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n+import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n+\r\n+const iconMap = {\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+};\r\n+\r\n+// New component for expanded notes\r\n+const ExpandedNotes: React.FC<{ notes: DatasetLink[\"notes\"] }> = ({\r\n+  notes,\r\n+}) => {\r\n+  if (!notes?.content) return null;\r\n+\r\n+  return (\r\n+    <div className=\"mt-4 space-y-2\">\r\n+      <div className=\"flex items-start justify-between\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n+          <StickyNote className=\"w-4 h-4\" />\r\n+          <span>Notes</span>\r\n+        </div>\r\n+        {notes.lastUpdated && (\r\n+          <span className=\"text-xs text-gray-500\">\r\n+            Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n+          </span>\r\n+        )}\r\n+      </div>\r\n+      <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n+        {notes.content}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+const DatasetPortal = () => {\r\n+  // 1. All useState hooks\r\n+  const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n+  const [searchTerm, setSearchTerm] = useState(\"\");\r\n+  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n+  const [scrolled, setScrolled] = useState(false);\r\n+\r\n+  // 2. Custom hooks\r\n+  const { categories, loading: categoriesLoading } = useFirebase();\r\n+  const {\r\n+    addCategory,\r\n+    updateCategory,\r\n+    deleteCategory,\r\n+    addLink,\r\n+    updateLink,\r\n+    deleteLink,\r\n+    loading: operationsLoading,\r\n+  } = useFirebaseOperations();\r\n+\r\n+  // 3. Dialog states\r\n+  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n+  const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n+  const [editingCategory, setEditingCategory] = useState<\r\n+    Category | undefined\r\n+  >();\r\n+  const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n+  const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n+\r\n+  // 4. Effects - all useEffect hooks need to be together\r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 10);\r\n+    };\r\n+\r\n+    window.addEventListener(\"scroll\", handleScroll);\r\n+    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n+  }, []);\r\n+\r\n+  // 5. Derived state\r\n+  const filteredCategories = categories.filter(\r\n+    (category) =>\r\n+      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.links.some(\r\n+        (link) =>\r\n+          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n+      )\r\n+  );\r\n+\r\n+  // 6. Loading state - move this after all hooks\r\n+  if (categoriesLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n+        <div className=\"text-xl\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // 7. Event handlers - after all hooks and before render\r\n+  const handleAddCategory = () => {\r\n+    setDialogMode(\"add\");\r\n+    setEditingCategory(undefined);\r\n+    setIsCategoryDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleMigration = async () => {\r\n+    const categoriesData = await import(\"@/data/categories.json\");\r\n+\r\n+    // First validate the data\r\n+    if (!validateMigrationData(categoriesData.categories)) {\r\n+      alert(\r\n+        \"Invalid data structure detected. Please check the console for details.\"\r\n+      );\r\n+      return;\r\n+    }\r\n+\r\n+    // Confirm migration\r\n+    if (\r\n+      !window.confirm(\r\n+        \"This will migrate all categories and links to Firebase. Continue?\"\r\n+      )\r\n+    ) {\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Attempt migration\r\n+      const success = await migrateDataToFirestore(categoriesData.categories);\r\n+\r\n+      if (success) {\r\n+        alert(\"Migration completed successfully!\");\r\n+      } else {\r\n+        const cleanup = window.confirm(\r\n+          \"Migration failed. Would you like to clean up any partial migration data?\"\r\n+        );\r\n+\r\n+        if (cleanup) {\r\n+          await cleanupFailedMigration(categoriesData.categories);\r\n+          alert(\"Cleanup completed.\");\r\n+        }\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Migration error:\", error);\r\n+      alert(\"Migration failed. Check console for details.\");\r\n+    }\r\n+  };\r\n+\r\n+  const toggleLinkExpansion = (linkTitle: string) => {\r\n+    setExpandedLinks((prev) => {\r\n+      const newSet = new Set(prev);\r\n+      if (newSet.has(linkTitle)) {\r\n+        newSet.delete(linkTitle);\r\n+      } else {\r\n+        newSet.add(linkTitle);\r\n+      }\r\n+      return newSet;\r\n+    });\r\n+  };\r\n+\r\n+  const handleDeleteCategory = async (categoryId: string) => {\r\n+    if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n+      const success = await deleteCategory(categoryId);\r\n+      if (success) {\r\n+        if (selectedCategory === categoryId) {\r\n+          setSelectedCategory(null);\r\n+        }\r\n+      } else {\r\n+        alert(\"Failed to delete category. Please try again.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveCategory = async (categoryData: Partial<Category>) => {\r\n+    if (dialogMode === \"add\") {\r\n+      const success = await addCategory(categoryData as Category);\r\n+      if (!success) {\r\n+        alert(\"Failed to add category. Please try again.\");\r\n+      }\r\n+    } else if (dialogMode === \"edit\" && editingCategory) {\r\n+      const success = await updateCategory(\r\n+        editingCategory.id.toString(),\r\n+        categoryData\r\n+      );\r\n+      if (!success) {\r\n+        alert(\"Failed to update category. Please try again.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleAddLink = () => {\r\n+    setDialogMode(\"add\");\r\n+    setEditingLink(undefined);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleEditLink = (link: Link) => {\r\n+    setDialogMode(\"edit\");\r\n+    setEditingLink(link);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n+    if (!selectedCategory) return;\r\n+\r\n+    if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n+      try {\r\n+        const success = await deleteLink(selectedCategory, linkId);\r\n+        if (!success) {\r\n+          alert(\"Failed to delete link. Please try again.\");\r\n+        }\r\n+      } catch (error) {\r\n+        console.error(\"Error deleting link:\", error);\r\n+        alert(\"An error occurred while deleting the link.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveLink = async (linkData: Link) => {\r\n+    if (!selectedCategory) return;\r\n+\r\n+    try {\r\n+      if (dialogMode === \"add\") {\r\n+        // Generate a proper ID for the new link\r\n+        const newLinkData = {\r\n+          ...linkData,\r\n+          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n+        };\r\n+\r\n+        const success = await addLink(selectedCategory, newLinkData);\r\n+        if (!success) {\r\n+          alert(\"Failed to add link. Please try again.\");\r\n+        }\r\n+      } else if (dialogMode === \"edit\" && editingLink) {\r\n+        // Use the existing link ID or generate one if it doesn't exist\r\n+        const updatedLinkData = {\r\n+          ...linkData,\r\n+          id:\r\n+            editingLink.id ||\r\n+            linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n+        };\r\n+\r\n+        const success = await updateLink(\r\n+          selectedCategory,\r\n+          updatedLinkData.id,\r\n+          updatedLinkData\r\n+        );\r\n+        if (!success) {\r\n+          alert(\"Failed to update link. Please try again.\");\r\n+        }\r\n+      }\r\n+\r\n+      setIsLinkDialogOpen(false);\r\n+    } catch (error) {\r\n+      console.error(\"Error saving link:\", error);\r\n+      alert(\"An error occurred while saving the link.\");\r\n+    }\r\n+  };\r\n+\r\n+  const getBadgeColor = (type: string) => {\r\n+    const colors = {\r\n+      ieee: \"bg-blue-600\",\r\n+      arxiv: \"bg-green-600\",\r\n+      mdpi: \"bg-purple-600\",\r\n+      tool: \"bg-yellow-600\",\r\n+      database: \"bg-red-600\",\r\n+      dataset: \"bg-indigo-600\",\r\n+      specification: \"bg-pink-600\",\r\n+      article: \"bg-orange-600\",\r\n+    };\r\n+    return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+      {/* Navigation Bar */}\r\n+      <nav\r\n+        className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n+          scrolled ? \"bg-black bg-opacity-80 backdrop-blur\" : \"bg-transparent\"\r\n+        }`}\r\n+      >\r\n+        <div className=\"max-w-7xl mx-auto px-4\">\r\n+          <div className=\"flex items-center justify-between h-16\">\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <Button\r\n+                onClick={handleAddCategory}\r\n+                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+              >\r\n+                <Plus className=\"w-4 h-4 mr-2\" /> Add Category\r\n+              </Button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </nav>\r\n+\r\n+      {/* Hero Section */}\r\n+      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div\r\n+          className=\"absolute inset-0\"\r\n+          style={{\r\n+            backgroundImage:\r\n+              \"radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)\",\r\n+            backgroundSize: \"30px 30px\",\r\n+          }}\r\n+        />\r\n+        <div className=\"relative z-10 text-center px-4\">\r\n+          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+            Energy Dataset Portal\r\n+          </h1>\r\n+          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n+            Explore comprehensive energy data resources for research and\r\n+            analysis\r\n+          </p>\r\n+\r\n+          {/* Search Bar */}\r\n+          <div className=\"max-w-2xl mx-auto\">\r\n+            <div className=\"relative\">\r\n+              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n+                <Search className=\"w-6 h-6 text-gray-400\" />\r\n+              </div>\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Search datasets...\"\r\n+                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n+                value={searchTerm}\r\n+                onChange={(e) => setSearchTerm(e.target.value)}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Categories Grid */}\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+          {filteredCategories.map((category) => {\r\n+            const IconComponent =\r\n+              iconMap[category.icon as keyof typeof iconMap];\r\n+            const hasNotes = category.links.some(\r\n+              (link) => !!link.notes?.content\r\n+            );\r\n+\r\n+            return (\r\n+              <Card\r\n+                key={category.id}\r\n+                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n+                  selectedCategory === category.id.toString()\r\n+                    ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n+                    : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n+                }`}\r\n+                onClick={() => setSelectedCategory(category.id.toString())}\r\n+              >\r\n+                <CardContent className=\"p-0 relative\">\r\n+                  <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-blue-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleEditCategory(category);\r\n+                      }}\r\n+                    >\r\n+                      <Edit className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-red-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleDeleteCategory(category.id.toString());\r\n+                      }}\r\n+                    >\r\n+                      <Trash2 className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                  <div className=\"flex items-center justify-between mb-6\">\r\n+                    <div\r\n+                      className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"bg-blue-500 bg-opacity-20\"\r\n+                          : \"bg-white bg-opacity-10\"\r\n+                      } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}\r\n+                    >\r\n+                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n+                    </div>\r\n+                    <ChevronRight\r\n+                      className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"translate-x-1 text-blue-400\"\r\n+                          : \"\"\r\n+                      } group-hover:translate-x-1`}\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"flex items-center justify-between mb-3\">\r\n+                    <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n+                    {hasNotes && (\r\n+                      <div className=\"flex items-center text-xs text-gray-400\">\r\n+                        <StickyNote className=\"w-3 h-3 mr-1\" />\r\n+                        <span>Has notes</span>\r\n+                      </div>\r\n+                    )}\r\n+                  </div>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">\r\n+                    {category.description}\r\n+                  </p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            );\r\n+          })}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* <Button\r\n+        onClick={handleMigration}\r\n+        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+      >\r\n+        Migrate to Firebase\r\n+      </Button> */}\r\n+\r\n+      {/* Dataset List */}\r\n+      {selectedCategory && (\r\n+        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n+          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <CardContent className=\"p-0\">\r\n+              <div className=\"flex items-center justify-between mb-8\">\r\n+                <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                  {\r\n+                    categories.find((c) => c.id.toString() === selectedCategory)\r\n+                      ?.title\r\n+                  }{\" \"}\r\n+                  Resources\r\n+                </h2>\r\n+                <Button\r\n+                  onClick={handleAddLink}\r\n+                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+                >\r\n+                  <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n+                </Button>\r\n+              </div>\r\n+              <div className=\"space-y-4\">\r\n+                {categories\r\n+                  .find((c) => c.id.toString() === selectedCategory)\r\n+                  ?.links.map((link: DatasetLink, index: number) => {\r\n+                    const isExpanded = expandedLinks.has(link.title);\r\n+                    const hasNotes = !!link.notes?.content;\r\n+\r\n+                    return (\r\n+                      <div\r\n+                        key={index}\r\n+                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                      >\r\n+                        <div className=\"p-6\">\r\n+                          <div className=\"flex items-center justify-between\">\r\n+                            <div className=\"flex items-center space-x-4\">\r\n+                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                                {link.title}\r\n+                              </span>\r\n+                              <Badge\r\n+                                className={`${getBadgeColor(\r\n+                                  link.type\r\n+                                )} text-white`}\r\n+                              >\r\n+                                {link.type}\r\n+                              </Badge>\r\n+                              {hasNotes && !isExpanded && (\r\n+                                <button\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                                >\r\n+                                  <StickyNote className=\"w-3 h-3\" />\r\n+                                  <span>View notes</span>\r\n+                                </button>\r\n+                              )}\r\n+                            </div>\r\n+                            <div className=\"flex items-center space-x-2\">\r\n+                              {hasNotes && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                >\r\n+                                  {isExpanded ? (\r\n+                                    <ChevronUp className=\"w-4 h-4\" />\r\n+                                  ) : (\r\n+                                    <ChevronDown className=\"w-4 h-4\" />\r\n+                                  )}\r\n+                                </Button>\r\n+                              )}\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                                onClick={() => handleEditLink(link)}\r\n+                              >\r\n+                                <Edit className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-red-400\"\r\n+                                onClick={() => handleDeleteLink(link.title)}\r\n+                              >\r\n+                                <Trash2 className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              {link.url !== \"#\" && (\r\n+                                <a\r\n+                                  href={link.url}\r\n+                                  target=\"_blank\"\r\n+                                  rel=\"noopener noreferrer\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                >\r\n+                                  <ExternalLink className=\"w-4 h-4\" />\r\n+                                </a>\r\n+                              )}\r\n+                            </div>\r\n+                          </div>\r\n+                          {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n+                        </div>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Dialogs */}\r\n+      <CategoryDialog\r\n+        isOpen={isCategoryDialogOpen}\r\n+        onClose={() => setIsCategoryDialogOpen(false)}\r\n+        onSave={handleSaveCategory}\r\n+        category={editingCategory}\r\n+        mode={dialogMode}\r\n+      />\r\n+\r\n+      <LinkDialog\r\n+        isOpen={isLinkDialogOpen}\r\n+        onClose={() => setIsLinkDialogOpen(false)}\r\n+        onSave={handleSaveLink}\r\n+        link={editingLink}\r\n+        mode={dialogMode}\r\n+        categoryId={selectedCategory || undefined}\r\n+      />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DatasetPortal;\r\n"
                },
                {
                    "date": 1730196708724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -571,605 +571,21 @@\n           </Card>\r\n         </div>\r\n       )}\r\n \r\n-      {/* Dialogs */}\r\n-      <CategoryDialog\r\n-        isOpen={isCategoryDialogOpen}\r\n-        onClose={() => setIsCategoryDialogOpen(false)}\r\n-        onSave={handleSaveCategory}\r\n-        category={editingCategory}\r\n-        mode={dialogMode}\r\n+      {/* Add NotesDialog */}\r\n+      <NotesDialog\r\n+        isOpen={isNotesDialogOpen}\r\n+        onClose={() => {\r\n+          setIsNotesDialogOpen(false);\r\n+          setEditingNotes(null);\r\n+        }}\r\n+        onSave={handleSaveNotes}\r\n+        initialNotes={editingNotes?.notes}\r\n+        title={editingNotes?.linkTitle || \"\"}\r\n       />\r\n \r\n-      <LinkDialog\r\n-        isOpen={isLinkDialogOpen}\r\n-        onClose={() => setIsLinkDialogOpen(false)}\r\n-        onSave={handleSaveLink}\r\n-        link={editingLink}\r\n-        mode={dialogMode}\r\n-        categoryId={selectedCategory || undefined}\r\n-      />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default DatasetPortal;\r\n-\"use client\";\r\n-\r\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Search,\r\n-  ChevronRight,\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-  Edit,\r\n-  Trash2,\r\n-  Plus,\r\n-  PlusCircle,\r\n-  ExternalLink,\r\n-  ChevronDown,\r\n-  ChevronUp,\r\n-  StickyNote,\r\n-} from \"lucide-react\";\r\n-import { Card, CardContent } from \"@/components/ui/card\";\r\n-import { Badge } from \"@/components/ui/badge\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { useLocalStorage } from \"@/hooks/useLocalStorage\";\r\n-import CategoryDialog from \"./CategoryDialog\";\r\n-import LinkDialog from \"./LinkDialog\";\r\n-import categoriesData from \"@/data/categories.json\";\r\n-import { Category, Link as DatasetLink } from \"@/types\";\r\n-import { formatDistanceToNow } from \"date-fns\";\r\n-import {\r\n-  migrateDataToFirestore,\r\n-  validateMigrationData,\r\n-} from \"@/lib/firebase/migration\";\r\n-import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n-import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n-\r\n-const iconMap = {\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-};\r\n-\r\n-// New component for expanded notes\r\n-const ExpandedNotes: React.FC<{ notes: DatasetLink[\"notes\"] }> = ({\r\n-  notes,\r\n-}) => {\r\n-  if (!notes?.content) return null;\r\n-\r\n-  return (\r\n-    <div className=\"mt-4 space-y-2\">\r\n-      <div className=\"flex items-start justify-between\">\r\n-        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n-          <StickyNote className=\"w-4 h-4\" />\r\n-          <span>Notes</span>\r\n-        </div>\r\n-        {notes.lastUpdated && (\r\n-          <span className=\"text-xs text-gray-500\">\r\n-            Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n-          </span>\r\n-        )}\r\n-      </div>\r\n-      <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n-        {notes.content}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-const DatasetPortal = () => {\r\n-  // 1. All useState hooks\r\n-  const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n-  const [searchTerm, setSearchTerm] = useState(\"\");\r\n-  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n-  const [scrolled, setScrolled] = useState(false);\r\n-\r\n-  // 2. Custom hooks\r\n-  const { categories, loading: categoriesLoading } = useFirebase();\r\n-  const {\r\n-    addCategory,\r\n-    updateCategory,\r\n-    deleteCategory,\r\n-    addLink,\r\n-    updateLink,\r\n-    deleteLink,\r\n-    loading: operationsLoading,\r\n-  } = useFirebaseOperations();\r\n-\r\n-  // 3. Dialog states\r\n-  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n-  const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<\r\n-    Category | undefined\r\n-  >();\r\n-  const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n-  const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n-\r\n-  // 4. Effects - all useEffect hooks need to be together\r\n-  useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      setScrolled(window.scrollY > 10);\r\n-    };\r\n-\r\n-    window.addEventListener(\"scroll\", handleScroll);\r\n-    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n-  }, []);\r\n-\r\n-  // 5. Derived state\r\n-  const filteredCategories = categories.filter(\r\n-    (category) =>\r\n-      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.links.some(\r\n-        (link) =>\r\n-          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n-      )\r\n-  );\r\n-\r\n-  // 6. Loading state - move this after all hooks\r\n-  if (categoriesLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n-        <div className=\"text-xl\">Loading...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // 7. Event handlers - after all hooks and before render\r\n-  const handleAddCategory = () => {\r\n-    setDialogMode(\"add\");\r\n-    setEditingCategory(undefined);\r\n-    setIsCategoryDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleMigration = async () => {\r\n-    const categoriesData = await import(\"@/data/categories.json\");\r\n-\r\n-    // First validate the data\r\n-    if (!validateMigrationData(categoriesData.categories)) {\r\n-      alert(\r\n-        \"Invalid data structure detected. Please check the console for details.\"\r\n-      );\r\n-      return;\r\n-    }\r\n-\r\n-    // Confirm migration\r\n-    if (\r\n-      !window.confirm(\r\n-        \"This will migrate all categories and links to Firebase. Continue?\"\r\n-      )\r\n-    ) {\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      // Attempt migration\r\n-      const success = await migrateDataToFirestore(categoriesData.categories);\r\n-\r\n-      if (success) {\r\n-        alert(\"Migration completed successfully!\");\r\n-      } else {\r\n-        const cleanup = window.confirm(\r\n-          \"Migration failed. Would you like to clean up any partial migration data?\"\r\n-        );\r\n-\r\n-        if (cleanup) {\r\n-          await cleanupFailedMigration(categoriesData.categories);\r\n-          alert(\"Cleanup completed.\");\r\n-        }\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Migration error:\", error);\r\n-      alert(\"Migration failed. Check console for details.\");\r\n-    }\r\n-  };\r\n-\r\n-  const toggleLinkExpansion = (linkTitle: string) => {\r\n-    setExpandedLinks((prev) => {\r\n-      const newSet = new Set(prev);\r\n-      if (newSet.has(linkTitle)) {\r\n-        newSet.delete(linkTitle);\r\n-      } else {\r\n-        newSet.add(linkTitle);\r\n-      }\r\n-      return newSet;\r\n-    });\r\n-  };\r\n-\r\n-  const handleDeleteCategory = async (categoryId: string) => {\r\n-    if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n-      const success = await deleteCategory(categoryId);\r\n-      if (success) {\r\n-        if (selectedCategory === categoryId) {\r\n-          setSelectedCategory(null);\r\n-        }\r\n-      } else {\r\n-        alert(\"Failed to delete category. Please try again.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSaveCategory = async (categoryData: Partial<Category>) => {\r\n-    if (dialogMode === \"add\") {\r\n-      const success = await addCategory(categoryData as Category);\r\n-      if (!success) {\r\n-        alert(\"Failed to add category. Please try again.\");\r\n-      }\r\n-    } else if (dialogMode === \"edit\" && editingCategory) {\r\n-      const success = await updateCategory(\r\n-        editingCategory.id.toString(),\r\n-        categoryData\r\n-      );\r\n-      if (!success) {\r\n-        alert(\"Failed to update category. Please try again.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleAddLink = () => {\r\n-    setDialogMode(\"add\");\r\n-    setEditingLink(undefined);\r\n-    setIsLinkDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleEditLink = (link: Link) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingLink(link);\r\n-    setIsLinkDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n-    if (!selectedCategory) return;\r\n-\r\n-    if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n-      try {\r\n-        const success = await deleteLink(selectedCategory, linkId);\r\n-        if (!success) {\r\n-          alert(\"Failed to delete link. Please try again.\");\r\n-        }\r\n-      } catch (error) {\r\n-        console.error(\"Error deleting link:\", error);\r\n-        alert(\"An error occurred while deleting the link.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSaveLink = async (linkData: Link) => {\r\n-    if (!selectedCategory) return;\r\n-\r\n-    try {\r\n-      if (dialogMode === \"add\") {\r\n-        // Generate a proper ID for the new link\r\n-        const newLinkData = {\r\n-          ...linkData,\r\n-          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n-        };\r\n-\r\n-        const success = await addLink(selectedCategory, newLinkData);\r\n-        if (!success) {\r\n-          alert(\"Failed to add link. Please try again.\");\r\n-        }\r\n-      } else if (dialogMode === \"edit\" && editingLink) {\r\n-        // Use the existing link ID or generate one if it doesn't exist\r\n-        const updatedLinkData = {\r\n-          ...linkData,\r\n-          id:\r\n-            editingLink.id ||\r\n-            linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n-        };\r\n-\r\n-        const success = await updateLink(\r\n-          selectedCategory,\r\n-          updatedLinkData.id,\r\n-          updatedLinkData\r\n-        );\r\n-        if (!success) {\r\n-          alert(\"Failed to update link. Please try again.\");\r\n-        }\r\n-      }\r\n-\r\n-      setIsLinkDialogOpen(false);\r\n-    } catch (error) {\r\n-      console.error(\"Error saving link:\", error);\r\n-      alert(\"An error occurred while saving the link.\");\r\n-    }\r\n-  };\r\n-\r\n-  const getBadgeColor = (type: string) => {\r\n-    const colors = {\r\n-      ieee: \"bg-blue-600\",\r\n-      arxiv: \"bg-green-600\",\r\n-      mdpi: \"bg-purple-600\",\r\n-      tool: \"bg-yellow-600\",\r\n-      database: \"bg-red-600\",\r\n-      dataset: \"bg-indigo-600\",\r\n-      specification: \"bg-pink-600\",\r\n-      article: \"bg-orange-600\",\r\n-    };\r\n-    return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n-      {/* Navigation Bar */}\r\n-      <nav\r\n-        className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-          scrolled ? \"bg-black bg-opacity-80 backdrop-blur\" : \"bg-transparent\"\r\n-        }`}\r\n-      >\r\n-        <div className=\"max-w-7xl mx-auto px-4\">\r\n-          <div className=\"flex items-center justify-between h-16\">\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <Button\r\n-                onClick={handleAddCategory}\r\n-                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-              >\r\n-                <Plus className=\"w-4 h-4 mr-2\" /> Add Category\r\n-              </Button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </nav>\r\n-\r\n-      {/* Hero Section */}\r\n-      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n-        <div\r\n-          className=\"absolute inset-0\"\r\n-          style={{\r\n-            backgroundImage:\r\n-              \"radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)\",\r\n-            backgroundSize: \"30px 30px\",\r\n-          }}\r\n-        />\r\n-        <div className=\"relative z-10 text-center px-4\">\r\n-          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-            Energy Dataset Portal\r\n-          </h1>\r\n-          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n-            Explore comprehensive energy data resources for research and\r\n-            analysis\r\n-          </p>\r\n-\r\n-          {/* Search Bar */}\r\n-          <div className=\"max-w-2xl mx-auto\">\r\n-            <div className=\"relative\">\r\n-              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n-                <Search className=\"w-6 h-6 text-gray-400\" />\r\n-              </div>\r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Search datasets...\"\r\n-                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n-                value={searchTerm}\r\n-                onChange={(e) => setSearchTerm(e.target.value)}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Categories Grid */}\r\n-      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => {\r\n-            const IconComponent =\r\n-              iconMap[category.icon as keyof typeof iconMap];\r\n-            const hasNotes = category.links.some(\r\n-              (link) => !!link.notes?.content\r\n-            );\r\n-\r\n-            return (\r\n-              <Card\r\n-                key={category.id}\r\n-                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n-                  selectedCategory === category.id.toString()\r\n-                    ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n-                    : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n-                }`}\r\n-                onClick={() => setSelectedCategory(category.id.toString())}\r\n-              >\r\n-                <CardContent className=\"p-0 relative\">\r\n-                  <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n-                    <Button\r\n-                      variant=\"ghost\"\r\n-                      size=\"icon\"\r\n-                      className=\"text-gray-400 hover:text-blue-400\"\r\n-                      onClick={(e) => {\r\n-                        e.stopPropagation();\r\n-                        handleEditCategory(category);\r\n-                      }}\r\n-                    >\r\n-                      <Edit className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                    <Button\r\n-                      variant=\"ghost\"\r\n-                      size=\"icon\"\r\n-                      className=\"text-gray-400 hover:text-red-400\"\r\n-                      onClick={(e) => {\r\n-                        e.stopPropagation();\r\n-                        handleDeleteCategory(category.id.toString());\r\n-                      }}\r\n-                    >\r\n-                      <Trash2 className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                  <div className=\"flex items-center justify-between mb-6\">\r\n-                    <div\r\n-                      className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                        selectedCategory === category.id\r\n-                          ? \"bg-blue-500 bg-opacity-20\"\r\n-                          : \"bg-white bg-opacity-10\"\r\n-                      } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}\r\n-                    >\r\n-                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n-                    </div>\r\n-                    <ChevronRight\r\n-                      className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                        selectedCategory === category.id\r\n-                          ? \"translate-x-1 text-blue-400\"\r\n-                          : \"\"\r\n-                      } group-hover:translate-x-1`}\r\n-                    />\r\n-                  </div>\r\n-                  <div className=\"flex items-center justify-between mb-3\">\r\n-                    <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n-                    {hasNotes && (\r\n-                      <div className=\"flex items-center text-xs text-gray-400\">\r\n-                        <StickyNote className=\"w-3 h-3 mr-1\" />\r\n-                        <span>Has notes</span>\r\n-                      </div>\r\n-                    )}\r\n-                  </div>\r\n-                  <p className=\"text-gray-400 text-sm leading-relaxed\">\r\n-                    {category.description}\r\n-                  </p>\r\n-                </CardContent>\r\n-              </Card>\r\n-            );\r\n-          })}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* <Button\r\n-        onClick={handleMigration}\r\n-        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-      >\r\n-        Migrate to Firebase\r\n-      </Button> */}\r\n-\r\n-      {/* Dataset List */}\r\n-      {selectedCategory && (\r\n-        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <CardContent className=\"p-0\">\r\n-              <div className=\"flex items-center justify-between mb-8\">\r\n-                <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                  {\r\n-                    categories.find((c) => c.id.toString() === selectedCategory)\r\n-                      ?.title\r\n-                  }{\" \"}\r\n-                  Resources\r\n-                </h2>\r\n-                <Button\r\n-                  onClick={handleAddLink}\r\n-                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-                >\r\n-                  <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n-                </Button>\r\n-              </div>\r\n-              <div className=\"space-y-4\">\r\n-                {categories\r\n-                  .find((c) => c.id.toString() === selectedCategory)\r\n-                  ?.links.map((link: DatasetLink, index: number) => {\r\n-                    const isExpanded = expandedLinks.has(link.title);\r\n-                    const hasNotes = !!link.notes?.content;\r\n-\r\n-                    return (\r\n-                      <div\r\n-                        key={index}\r\n-                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                      >\r\n-                        <div className=\"p-6\">\r\n-                          <div className=\"flex items-center justify-between\">\r\n-                            <div className=\"flex items-center space-x-4\">\r\n-                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                                {link.title}\r\n-                              </span>\r\n-                              <Badge\r\n-                                className={`${getBadgeColor(\r\n-                                  link.type\r\n-                                )} text-white`}\r\n-                              >\r\n-                                {link.type}\r\n-                              </Badge>\r\n-                              {hasNotes && !isExpanded && (\r\n-                                <button\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n-                                >\r\n-                                  <StickyNote className=\"w-3 h-3\" />\r\n-                                  <span>View notes</span>\r\n-                                </button>\r\n-                              )}\r\n-                            </div>\r\n-                            <div className=\"flex items-center space-x-2\">\r\n-                              {hasNotes && (\r\n-                                <Button\r\n-                                  variant=\"ghost\"\r\n-                                  size=\"icon\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                >\r\n-                                  {isExpanded ? (\r\n-                                    <ChevronUp className=\"w-4 h-4\" />\r\n-                                  ) : (\r\n-                                    <ChevronDown className=\"w-4 h-4\" />\r\n-                                  )}\r\n-                                </Button>\r\n-                              )}\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-blue-400\"\r\n-                                onClick={() => handleEditLink(link)}\r\n-                              >\r\n-                                <Edit className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-red-400\"\r\n-                                onClick={() => handleDeleteLink(link.title)}\r\n-                              >\r\n-                                <Trash2 className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              {link.url !== \"#\" && (\r\n-                                <a\r\n-                                  href={link.url}\r\n-                                  target=\"_blank\"\r\n-                                  rel=\"noopener noreferrer\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                >\r\n-                                  <ExternalLink className=\"w-4 h-4\" />\r\n-                                </a>\r\n-                              )}\r\n-                            </div>\r\n-                          </div>\r\n-                          {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n-                        </div>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Dialogs */}\r\n+      {/* Keep existing dialogs */}\r\n       <CategoryDialog\r\n         isOpen={isCategoryDialogOpen}\r\n         onClose={() => setIsCategoryDialogOpen(false)}\r\n         onSave={handleSaveCategory}\r\n"
                },
                {
                    "date": 1730196828123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -479,99 +479,102 @@\n                   <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n                 </Button>\r\n               </div>\r\n               <div className=\"space-y-4\">\r\n-                {categories\r\n-                  .find((c) => c.id.toString() === selectedCategory)\r\n-                  ?.links.map((link: DatasetLink, index: number) => {\r\n-                    const isExpanded = expandedLinks.has(link.title);\r\n-                    const hasNotes = !!link.notes?.content;\r\n+              {categories\r\n+    .find((c) => c.id.toString() === selectedCategory)\r\n+    ?.links.map((link: DatasetLink, index: number) => {\r\n+      const isExpanded = expandedLinks.has(link.title);\r\n+      const hasNotes = !!link.notes?.content;\r\n \r\n-                    return (\r\n-                      <div\r\n-                        key={index}\r\n-                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                      >\r\n-                        <div className=\"p-6\">\r\n-                          <div className=\"flex items-center justify-between\">\r\n-                            <div className=\"flex items-center space-x-4\">\r\n-                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                                {link.title}\r\n-                              </span>\r\n-                              <Badge\r\n-                                className={`${getBadgeColor(\r\n-                                  link.type\r\n-                                )} text-white`}\r\n-                              >\r\n-                                {link.type}\r\n-                              </Badge>\r\n-                              {hasNotes && !isExpanded && (\r\n-                                <button\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n-                                >\r\n-                                  <StickyNote className=\"w-3 h-3\" />\r\n-                                  <span>View notes</span>\r\n-                                </button>\r\n-                              )}\r\n-                            </div>\r\n-                            <div className=\"flex items-center space-x-2\">\r\n-                              {hasNotes && (\r\n-                                <Button\r\n-                                  variant=\"ghost\"\r\n-                                  size=\"icon\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                >\r\n-                                  {isExpanded ? (\r\n-                                    <ChevronUp className=\"w-4 h-4\" />\r\n-                                  ) : (\r\n-                                    <ChevronDown className=\"w-4 h-4\" />\r\n-                                  )}\r\n-                                </Button>\r\n-                              )}\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-blue-400\"\r\n-                                onClick={() => handleEditLink(link)}\r\n-                              >\r\n-                                <Edit className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-red-400\"\r\n-                                onClick={() => handleDeleteLink(link.title)}\r\n-                              >\r\n-                                <Trash2 className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              {link.url !== \"#\" && (\r\n-                                <a\r\n-                                  href={link.url}\r\n-                                  target=\"_blank\"\r\n-                                  rel=\"noopener noreferrer\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                >\r\n-                                  <ExternalLink className=\"w-4 h-4\" />\r\n-                                </a>\r\n-                              )}\r\n-                            </div>\r\n-                          </div>\r\n-                          {isExpanded && <ExpandedNotes notes={link.notes} />}\r\n-                        </div>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n+      return (\r\n+        <div\r\n+          key={index}\r\n+          className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+        >\r\n+          <div className=\"p-6\">\r\n+            <div className=\"flex items-center justify-between\">\r\n+              <div className=\"flex items-center space-x-4\">\r\n+                <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                  {link.title}\r\n+                </span>\r\n+                <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n+                  {link.type}\r\n+                </Badge>\r\n+                {hasNotes && !isExpanded && (\r\n+                  <button\r\n+                    onClick={() => toggleLinkExpansion(link.title)}\r\n+                    className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                  >\r\n+                    <StickyNote className=\"w-3 h-3\" />\r\n+                    <span>View notes</span>\r\n+                  </button>\r\n+                )}\r\n               </div>\r\n-            </CardContent>\r\n-          </Card>\r\n+              <div className=\"flex items-center space-x-2\">\r\n+                {!isExpanded && (\r\n+                  <Button\r\n+                    variant=\"ghost\"\r\n+                    size=\"icon\"\r\n+                    className=\"text-gray-400 hover:text-blue-400\"\r\n+                    onClick={() => handleEditNotes(selectedCategory!, link)}\r\n+                  >\r\n+                    <StickyNote className=\"w-4 h-4\" />\r\n+                  </Button>\r\n+                )}\r\n+                {hasNotes && (\r\n+                  <Button\r\n+                    variant=\"ghost\"\r\n+                    size=\"icon\"\r\n+                    className=\"text-gray-400 hover:text-blue-400\"\r\n+                    onClick={() => toggleLinkExpansion(link.title)}\r\n+                  >\r\n+                    {isExpanded ? (\r\n+                      <ChevronUp className=\"w-4 h-4\" />\r\n+                    ) : (\r\n+                      <ChevronDown className=\"w-4 h-4\" />\r\n+                    )}\r\n+                  </Button>\r\n+                )}\r\n+                <Button\r\n+                  variant=\"ghost\"\r\n+                  size=\"icon\"\r\n+                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                  onClick={() => handleEditLink(link)}\r\n+                >\r\n+                  <Edit className=\"w-4 h-4\" />\r\n+                </Button>\r\n+                <Button\r\n+                  variant=\"ghost\"\r\n+                  size=\"icon\"\r\n+                  className=\"text-gray-400 hover:text-red-400\"\r\n+                  onClick={() => handleDeleteLink(selectedCategory!, link.id)}\r\n+                >\r\n+                  <Trash2 className=\"w-4 h-4\" />\r\n+                </Button>\r\n+                {link.url !== \"#\" && (\r\n+                  <a\r\n+                    href={link.url}\r\n+                    target=\"_blank\"\r\n+                    rel=\"noopener noreferrer\"\r\n+                    className=\"text-gray-400 hover:text-blue-400\"\r\n+                  >\r\n+                    <ExternalLink className=\"w-4 h-4\" />\r\n+                  </a>\r\n+                )}\r\n+              </div>\r\n+            </div>\r\n+            {isExpanded && (\r\n+              <ExpandedNotes \r\n+                notes={link.notes} \r\n+                onEdit={() => handleEditNotes(selectedCategory!, link)}\r\n+              />\r\n+            )}\r\n+          </div>\r\n         </div>\r\n-      )}\r\n+      );\r\n+    })\r\n+  }\r\n \r\n       {/* Add NotesDialog */}\r\n       <NotesDialog\r\n         isOpen={isNotesDialogOpen}\r\n"
                },
                {
                    "date": 1730196991312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -479,102 +479,120 @@\n                   <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n                 </Button>\r\n               </div>\r\n               <div className=\"space-y-4\">\r\n-              {categories\r\n-    .find((c) => c.id.toString() === selectedCategory)\r\n-    ?.links.map((link: DatasetLink, index: number) => {\r\n-      const isExpanded = expandedLinks.has(link.title);\r\n-      const hasNotes = !!link.notes?.content;\r\n+                {categories\r\n+                  .find((c) => c.id.toString() === selectedCategory)\r\n+                  ?.links.map((link: DatasetLink, index: number) => {\r\n+                    const isExpanded = expandedLinks.has(link.title);\r\n+                    const hasNotes = !!link.notes?.content;\r\n \r\n-      return (\r\n-        <div\r\n-          key={index}\r\n-          className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-        >\r\n-          <div className=\"p-6\">\r\n-            <div className=\"flex items-center justify-between\">\r\n-              <div className=\"flex items-center space-x-4\">\r\n-                <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                  {link.title}\r\n-                </span>\r\n-                <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n-                  {link.type}\r\n-                </Badge>\r\n-                {hasNotes && !isExpanded && (\r\n-                  <button\r\n-                    onClick={() => toggleLinkExpansion(link.title)}\r\n-                    className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n-                  >\r\n-                    <StickyNote className=\"w-3 h-3\" />\r\n-                    <span>View notes</span>\r\n-                  </button>\r\n-                )}\r\n+                    return (\r\n+                      <div\r\n+                        key={index}\r\n+                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                      >\r\n+                        <div className=\"p-6\">\r\n+                          <div className=\"flex items-center justify-between\">\r\n+                            <div className=\"flex items-center space-x-4\">\r\n+                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                                {link.title}\r\n+                              </span>\r\n+                              <Badge\r\n+                                className={`${getBadgeColor(\r\n+                                  link.type\r\n+                                )} text-white`}\r\n+                              >\r\n+                                {link.type}\r\n+                              </Badge>\r\n+                              {hasNotes && !isExpanded && (\r\n+                                <button\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                                >\r\n+                                  <StickyNote className=\"w-3 h-3\" />\r\n+                                  <span>View notes</span>\r\n+                                </button>\r\n+                              )}\r\n+                            </div>\r\n+                            <div className=\"flex items-center space-x-2\">\r\n+                              {!isExpanded && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    handleEditNotes(selectedCategory!, link)\r\n+                                  }\r\n+                                >\r\n+                                  <StickyNote className=\"w-4 h-4\" />\r\n+                                </Button>\r\n+                              )}\r\n+                              {hasNotes && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                >\r\n+                                  {isExpanded ? (\r\n+                                    <ChevronUp className=\"w-4 h-4\" />\r\n+                                  ) : (\r\n+                                    <ChevronDown className=\"w-4 h-4\" />\r\n+                                  )}\r\n+                                </Button>\r\n+                              )}\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                                onClick={() => handleEditLink(link)}\r\n+                              >\r\n+                                <Edit className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-red-400\"\r\n+                                onClick={() =>\r\n+                                  handleDeleteLink(selectedCategory!, link.id)\r\n+                                }\r\n+                              >\r\n+                                <Trash2 className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              {link.url !== \"#\" && (\r\n+                                <a\r\n+                                  href={link.url}\r\n+                                  target=\"_blank\"\r\n+                                  rel=\"noopener noreferrer\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                >\r\n+                                  <ExternalLink className=\"w-4 h-4\" />\r\n+                                </a>\r\n+                              )}\r\n+                            </div>\r\n+                          </div>\r\n+                          {isExpanded && (\r\n+                            <ExpandedNotes\r\n+                              notes={link.notes}\r\n+                              onEdit={() =>\r\n+                                handleEditNotes(selectedCategory!, link)\r\n+                              }\r\n+                            />\r\n+                          )}\r\n+                        </div>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n               </div>\r\n-              <div className=\"flex items-center space-x-2\">\r\n-                {!isExpanded && (\r\n-                  <Button\r\n-                    variant=\"ghost\"\r\n-                    size=\"icon\"\r\n-                    className=\"text-gray-400 hover:text-blue-400\"\r\n-                    onClick={() => handleEditNotes(selectedCategory!, link)}\r\n-                  >\r\n-                    <StickyNote className=\"w-4 h-4\" />\r\n-                  </Button>\r\n-                )}\r\n-                {hasNotes && (\r\n-                  <Button\r\n-                    variant=\"ghost\"\r\n-                    size=\"icon\"\r\n-                    className=\"text-gray-400 hover:text-blue-400\"\r\n-                    onClick={() => toggleLinkExpansion(link.title)}\r\n-                  >\r\n-                    {isExpanded ? (\r\n-                      <ChevronUp className=\"w-4 h-4\" />\r\n-                    ) : (\r\n-                      <ChevronDown className=\"w-4 h-4\" />\r\n-                    )}\r\n-                  </Button>\r\n-                )}\r\n-                <Button\r\n-                  variant=\"ghost\"\r\n-                  size=\"icon\"\r\n-                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                  onClick={() => handleEditLink(link)}\r\n-                >\r\n-                  <Edit className=\"w-4 h-4\" />\r\n-                </Button>\r\n-                <Button\r\n-                  variant=\"ghost\"\r\n-                  size=\"icon\"\r\n-                  className=\"text-gray-400 hover:text-red-400\"\r\n-                  onClick={() => handleDeleteLink(selectedCategory!, link.id)}\r\n-                >\r\n-                  <Trash2 className=\"w-4 h-4\" />\r\n-                </Button>\r\n-                {link.url !== \"#\" && (\r\n-                  <a\r\n-                    href={link.url}\r\n-                    target=\"_blank\"\r\n-                    rel=\"noopener noreferrer\"\r\n-                    className=\"text-gray-400 hover:text-blue-400\"\r\n-                  >\r\n-                    <ExternalLink className=\"w-4 h-4\" />\r\n-                  </a>\r\n-                )}\r\n-              </div>\r\n-            </div>\r\n-            {isExpanded && (\r\n-              <ExpandedNotes \r\n-                notes={link.notes} \r\n-                onEdit={() => handleEditNotes(selectedCategory!, link)}\r\n-              />\r\n-            )}\r\n-          </div>\r\n+            </CardContent>\r\n+          </Card>\r\n         </div>\r\n-      );\r\n-    })\r\n-  }\r\n+      )}\r\n \r\n       {/* Add NotesDialog */}\r\n       <NotesDialog\r\n         isOpen={isNotesDialogOpen}\r\n"
                },
                {
                    "date": 1730197068869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -292,8 +292,57 @@\n       alert(\"An error occurred while saving the link.\");\r\n     }\r\n   };\r\n \r\n+  const handleSaveNotes = async (updatedNotes: {\r\n+    content: string;\r\n+    lastUpdated: string;\r\n+  }) => {\r\n+    if (!editingNotes) return;\r\n+\r\n+    try {\r\n+      const linkToUpdate = categories\r\n+        .find((c) => c.id.toString() === editingNotes.categoryId)\r\n+        ?.links.find((l) => l.id === editingNotes.linkId);\r\n+\r\n+      if (!linkToUpdate) return;\r\n+\r\n+      const updatedLink = {\r\n+        ...linkToUpdate,\r\n+        notes: updatedNotes,\r\n+      };\r\n+\r\n+      const success = await updateLink(\r\n+        editingNotes.categoryId,\r\n+        editingNotes.linkId,\r\n+        updatedLink\r\n+      );\r\n+\r\n+      if (!success) {\r\n+        alert(\"Failed to update notes. Please try again.\");\r\n+      }\r\n+\r\n+      setIsNotesDialogOpen(false);\r\n+      setEditingNotes(null);\r\n+    } catch (error) {\r\n+      console.error(\"Error saving notes:\", error);\r\n+      alert(\"An error occurred while saving the notes.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleEditNotes = (categoryId: string, link: DatasetLink) => {\r\n+    setEditingNotes({\r\n+      categoryId,\r\n+      linkId: link.id,\r\n+      notes: link.notes || {\r\n+        content: \"\",\r\n+        lastUpdated: new Date().toISOString(),\r\n+      },\r\n+      linkTitle: link.title,\r\n+    });\r\n+    setIsNotesDialogOpen(true);\r\n+  };\r\n+\r\n   const getBadgeColor = (type: string) => {\r\n     const colors = {\r\n       ieee: \"bg-blue-600\",\r\n       arxiv: \"bg-green-600\",\r\n"
                },
                {
                    "date": 1730197097133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,8 +101,16 @@\n   >();\r\n   const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n   const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n \r\n+  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\r\n+  const [editingNotes, setEditingNotes] = useState<{\r\n+    categoryId: string;\r\n+    linkId: string;\r\n+    notes: { content: string; lastUpdated: string };\r\n+    linkTitle: string;\r\n+  } | null>(null);\r\n+\r\n   // 4. Effects - all useEffect hooks need to be together\r\n   useEffect(() => {\r\n     const handleScroll = () => {\r\n       setScrolled(window.scrollY > 10);\r\n"
                },
                {
                    "date": 1730197111982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,12 @@\n   Leaf,\r\n };\r\n \r\n // New component for expanded notes\r\n-const ExpandedNotes: React.FC<{ notes: DatasetLink[\"notes\"] }> = ({\r\n-  notes,\r\n-}) => {\r\n+const ExpandedNotes: React.FC<{ \r\n+  notes: DatasetLink[\"notes\"];\r\n+  onEdit?: () => void;\r\n+}> = ({ notes, onEdit }) => {\r\n   if (!notes?.content) return null;\r\n \r\n   return (\r\n     <div className=\"mt-4 space-y-2\">\r\n@@ -60,13 +61,25 @@\n         <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n           <StickyNote className=\"w-4 h-4\" />\r\n           <span>Notes</span>\r\n         </div>\r\n-        {notes.lastUpdated && (\r\n-          <span className=\"text-xs text-gray-500\">\r\n-            Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n-          </span>\r\n-        )}\r\n+        <div className=\"flex items-center gap-4\">\r\n+          {notes.lastUpdated && (\r\n+            <span className=\"text-xs text-gray-500\">\r\n+              Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n+            </span>\r\n+          )}\r\n+          {onEdit && (\r\n+            <Button\r\n+              variant=\"ghost\"\r\n+              size=\"sm\"\r\n+              onClick={onEdit}\r\n+              className=\"text-gray-400 hover:text-blue-400\"\r\n+            >\r\n+              <Edit className=\"w-4 h-4\" />\r\n+            </Button>\r\n+          )}\r\n+        </div>\r\n       </div>\r\n       <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n         {notes.content}\r\n       </div>\r\n"
                },
                {
                    "date": 1730197123114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,11 @@\n   validateMigrationData,\r\n } from \"@/lib/firebase/migration\";\r\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n+import NotesDialog from \"./NotesDialog\";\r\n \r\n+\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n@@ -48,9 +50,9 @@\n   Leaf,\r\n };\r\n \r\n // New component for expanded notes\r\n-const ExpandedNotes: React.FC<{ \r\n+const ExpandedNotes: React.FC<{\r\n   notes: DatasetLink[\"notes\"];\r\n   onEdit?: () => void;\r\n }> = ({ notes, onEdit }) => {\r\n   if (!notes?.content) return null;\r\n"
                },
                {
                    "date": 1730197128519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n import NotesDialog from \"./NotesDialog\";\r\n \r\n-\r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n   Activity,\r\n"
                },
                {
                    "date": 1730204993856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -391,8 +391,9 @@\n             <div className=\"flex items-center space-x-4\">\r\n               <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n             </div>\r\n             <div className=\"flex items-center space-x-4\">\r\n+              <NotificationMenu />\r\n               <Button\r\n                 onClick={handleAddCategory}\r\n                 className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n               >\r\n"
                },
                {
                    "date": 1730205177973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,8 +36,9 @@\n } from \"@/lib/firebase/migration\";\r\n import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n import NotesDialog from \"./NotesDialog\";\r\n+import NotificationMenu from \"./NotificationMenu\";\r\n \r\n const iconMap = {\r\n   Database,\r\n   Sun,\r\n@@ -216,10 +217,17 @@\n     });\r\n   };\r\n \r\n   const handleDeleteCategory = async (categoryId: string) => {\r\n-    if (window.confirm(\"Are you sure you want to delete this category?\")) {\r\n-      const success = await deleteCategory(categoryId);\r\n+    const category = categories.find((c) => c.id.toString() === categoryId);\r\n+    if (!category) return;\r\n+\r\n+    if (\r\n+      window.confirm(\r\n+        `Are you sure you want to delete the category \"${category.title}\"?`\r\n+      )\r\n+    ) {\r\n+      const success = await deleteCategory(categoryId, category.title);\r\n       if (success) {\r\n         if (selectedCategory === categoryId) {\r\n           setSelectedCategory(null);\r\n         }\r\n@@ -260,11 +268,19 @@\n \r\n   const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n     if (!selectedCategory) return;\r\n \r\n-    if (window.confirm(\"Are you sure you want to delete this link?\")) {\r\n+    const category = categories.find((c) => c.id.toString() === categoryId);\r\n+    const link = category?.links.find((l) => l.id === linkId);\r\n+    if (!category || !link) return;\r\n+\r\n+    if (\r\n+      window.confirm(\r\n+        `Are you sure you want to delete the link \"${link.title}\"?`\r\n+      )\r\n+    ) {\r\n       try {\r\n-        const success = await deleteLink(selectedCategory, linkId);\r\n+        const success = await deleteLink(categoryId, linkId, link.title);\r\n         if (!success) {\r\n           alert(\"Failed to delete link. Please try again.\");\r\n         }\r\n       } catch (error) {\r\n"
                },
                {
                    "date": 1730205305158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,717 @@\n+\"use client\";\r\n+\r\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Search,\r\n+  ChevronRight,\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+  Edit,\r\n+  Trash2,\r\n+  Plus,\r\n+  PlusCircle,\r\n+  ExternalLink,\r\n+  ChevronDown,\r\n+  ChevronUp,\r\n+  StickyNote,\r\n+} from \"lucide-react\";\r\n+import { Card, CardContent } from \"@/components/ui/card\";\r\n+import { Badge } from \"@/components/ui/badge\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { useLocalStorage } from \"@/hooks/useLocalStorage\";\r\n+import CategoryDialog from \"./CategoryDialog\";\r\n+import LinkDialog from \"./LinkDialog\";\r\n+import categoriesData from \"@/data/categories.json\";\r\n+import { Category, Link as DatasetLink } from \"@/types\";\r\n+import { formatDistanceToNow } from \"date-fns\";\r\n+import {\r\n+  migrateDataToFirestore,\r\n+  validateMigrationData,\r\n+} from \"@/lib/firebase/migration\";\r\n+import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n+import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n+import NotesDialog from \"./NotesDialog\";\r\n+import NotificationMenu from '@/components/NotificationMenu';\r\n+\r\n+const iconMap = {\r\n+  Database,\r\n+  Sun,\r\n+  Activity,\r\n+  BarChart2,\r\n+  Building2,\r\n+  Gauge,\r\n+  Cloud,\r\n+  Leaf,\r\n+};\r\n+\r\n+// New component for expanded notes\r\n+const ExpandedNotes: React.FC<{\r\n+  notes: DatasetLink[\"notes\"];\r\n+  onEdit?: () => void;\r\n+}> = ({ notes, onEdit }) => {\r\n+  if (!notes?.content) return null;\r\n+\r\n+  return (\r\n+    <div className=\"mt-4 space-y-2\">\r\n+      <div className=\"flex items-start justify-between\">\r\n+        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n+          <StickyNote className=\"w-4 h-4\" />\r\n+          <span>Notes</span>\r\n+        </div>\r\n+        <div className=\"flex items-center gap-4\">\r\n+          {notes.lastUpdated && (\r\n+            <span className=\"text-xs text-gray-500\">\r\n+              Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n+            </span>\r\n+          )}\r\n+          {onEdit && (\r\n+            <Button\r\n+              variant=\"ghost\"\r\n+              size=\"sm\"\r\n+              onClick={onEdit}\r\n+              className=\"text-gray-400 hover:text-blue-400\"\r\n+            >\r\n+              <Edit className=\"w-4 h-4\" />\r\n+            </Button>\r\n+          )}\r\n+        </div>\r\n+      </div>\r\n+      <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n+        {notes.content}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+const DatasetPortal = () => {\r\n+  // 1. All useState hooks\r\n+  const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n+  const [searchTerm, setSearchTerm] = useState(\"\");\r\n+  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n+  const [scrolled, setScrolled] = useState(false);\r\n+\r\n+  // 2. Custom hooks\r\n+  const { categories, loading: categoriesLoading } = useFirebase();\r\n+  const {\r\n+    addCategory,\r\n+    updateCategory,\r\n+    deleteCategory,\r\n+    addLink,\r\n+    updateLink,\r\n+    deleteLink,\r\n+    loading: operationsLoading,\r\n+  } = useFirebaseOperations();\r\n+\r\n+  // 3. Dialog states\r\n+  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n+  const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n+  const [editingCategory, setEditingCategory] = useState<\r\n+    Category | undefined\r\n+  >();\r\n+  const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n+  const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n+\r\n+  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\r\n+  const [editingNotes, setEditingNotes] = useState<{\r\n+    categoryId: string;\r\n+    linkId: string;\r\n+    notes: { content: string; lastUpdated: string };\r\n+    linkTitle: string;\r\n+  } | null>(null);\r\n+\r\n+  // 4. Effects - all useEffect hooks need to be together\r\n+  useEffect(() => {\r\n+    const handleScroll = () => {\r\n+      setScrolled(window.scrollY > 10);\r\n+    };\r\n+\r\n+    window.addEventListener(\"scroll\", handleScroll);\r\n+    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n+  }, []);\r\n+\r\n+  // 5. Derived state\r\n+  const filteredCategories = categories.filter(\r\n+    (category) =>\r\n+      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+      category.links.some(\r\n+        (link) =>\r\n+          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n+          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n+      )\r\n+  );\r\n+\r\n+  // 6. Loading state - move this after all hooks\r\n+  if (categoriesLoading) {\r\n+    return (\r\n+      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n+        <div className=\"text-xl\">Loading...</div>\r\n+      </div>\r\n+    );\r\n+  }\r\n+\r\n+  // 7. Event handlers - after all hooks and before render\r\n+  const handleAddCategory = () => {\r\n+    setDialogMode(\"add\");\r\n+    setEditingCategory(undefined);\r\n+    setIsCategoryDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleMigration = async () => {\r\n+    const categoriesData = await import(\"@/data/categories.json\");\r\n+\r\n+    // First validate the data\r\n+    if (!validateMigrationData(categoriesData.categories)) {\r\n+      alert(\r\n+        \"Invalid data structure detected. Please check the console for details.\"\r\n+      );\r\n+      return;\r\n+    }\r\n+\r\n+    // Confirm migration\r\n+    if (\r\n+      !window.confirm(\r\n+        \"This will migrate all categories and links to Firebase. Continue?\"\r\n+      )\r\n+    ) {\r\n+      return;\r\n+    }\r\n+\r\n+    try {\r\n+      // Attempt migration\r\n+      const success = await migrateDataToFirestore(categoriesData.categories);\r\n+\r\n+      if (success) {\r\n+        alert(\"Migration completed successfully!\");\r\n+      } else {\r\n+        const cleanup = window.confirm(\r\n+          \"Migration failed. Would you like to clean up any partial migration data?\"\r\n+        );\r\n+\r\n+        if (cleanup) {\r\n+          await cleanupFailedMigration(categoriesData.categories);\r\n+          alert(\"Cleanup completed.\");\r\n+        }\r\n+      }\r\n+    } catch (error) {\r\n+      console.error(\"Migration error:\", error);\r\n+      alert(\"Migration failed. Check console for details.\");\r\n+    }\r\n+  };\r\n+\r\n+  const toggleLinkExpansion = (linkTitle: string) => {\r\n+    setExpandedLinks((prev) => {\r\n+      const newSet = new Set(prev);\r\n+      if (newSet.has(linkTitle)) {\r\n+        newSet.delete(linkTitle);\r\n+      } else {\r\n+        newSet.add(linkTitle);\r\n+      }\r\n+      return newSet;\r\n+    });\r\n+  };\r\n+\r\n+  const handleDeleteCategory = async (categoryId: string) => {\r\n+    const category = categories.find((c) => c.id.toString() === categoryId);\r\n+    if (!category) return;\r\n+\r\n+    if (\r\n+      window.confirm(\r\n+        `Are you sure you want to delete the category \"${category.title}\"?`\r\n+      )\r\n+    ) {\r\n+      const success = await deleteCategory(categoryId, category.title);\r\n+      if (success) {\r\n+        if (selectedCategory === categoryId) {\r\n+          setSelectedCategory(null);\r\n+        }\r\n+      } else {\r\n+        alert(\"Failed to delete category. Please try again.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveCategory = async (categoryData: Partial<Category>) => {\r\n+    if (dialogMode === \"add\") {\r\n+      const success = await addCategory(categoryData as Category);\r\n+      if (!success) {\r\n+        alert(\"Failed to add category. Please try again.\");\r\n+      }\r\n+    } else if (dialogMode === \"edit\" && editingCategory) {\r\n+      const success = await updateCategory(\r\n+        editingCategory.id.toString(),\r\n+        categoryData\r\n+      );\r\n+      if (!success) {\r\n+        alert(\"Failed to update category. Please try again.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleAddLink = () => {\r\n+    setDialogMode(\"add\");\r\n+    setEditingLink(undefined);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleEditLink = (link: Link) => {\r\n+    setDialogMode(\"edit\");\r\n+    setEditingLink(link);\r\n+    setIsLinkDialogOpen(true);\r\n+  };\r\n+\r\n+  const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n+    if (!selectedCategory) return;\r\n+\r\n+    const category = categories.find((c) => c.id.toString() === categoryId);\r\n+    const link = category?.links.find((l) => l.id === linkId);\r\n+    if (!category || !link) return;\r\n+\r\n+    if (\r\n+      window.confirm(\r\n+        `Are you sure you want to delete the link \"${link.title}\"?`\r\n+      )\r\n+    ) {\r\n+      try {\r\n+        const success = await deleteLink(categoryId, linkId, link.title);\r\n+        if (!success) {\r\n+          alert(\"Failed to delete link. Please try again.\");\r\n+        }\r\n+      } catch (error) {\r\n+        console.error(\"Error deleting link:\", error);\r\n+        alert(\"An error occurred while deleting the link.\");\r\n+      }\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveLink = async (linkData: Link) => {\r\n+    if (!selectedCategory) return;\r\n+\r\n+    try {\r\n+      if (dialogMode === \"add\") {\r\n+        // Generate a proper ID for the new link\r\n+        const newLinkData = {\r\n+          ...linkData,\r\n+          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n+        };\r\n+\r\n+        const success = await addLink(selectedCategory, newLinkData);\r\n+        if (!success) {\r\n+          alert(\"Failed to add link. Please try again.\");\r\n+        }\r\n+      } else if (dialogMode === \"edit\" && editingLink) {\r\n+        // Use the existing link ID or generate one if it doesn't exist\r\n+        const updatedLinkData = {\r\n+          ...linkData,\r\n+          id:\r\n+            editingLink.id ||\r\n+            linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n+        };\r\n+\r\n+        const success = await updateLink(\r\n+          selectedCategory,\r\n+          updatedLinkData.id,\r\n+          updatedLinkData\r\n+        );\r\n+        if (!success) {\r\n+          alert(\"Failed to update link. Please try again.\");\r\n+        }\r\n+      }\r\n+\r\n+      setIsLinkDialogOpen(false);\r\n+    } catch (error) {\r\n+      console.error(\"Error saving link:\", error);\r\n+      alert(\"An error occurred while saving the link.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleSaveNotes = async (updatedNotes: {\r\n+    content: string;\r\n+    lastUpdated: string;\r\n+  }) => {\r\n+    if (!editingNotes) return;\r\n+\r\n+    try {\r\n+      const linkToUpdate = categories\r\n+        .find((c) => c.id.toString() === editingNotes.categoryId)\r\n+        ?.links.find((l) => l.id === editingNotes.linkId);\r\n+\r\n+      if (!linkToUpdate) return;\r\n+\r\n+      const updatedLink = {\r\n+        ...linkToUpdate,\r\n+        notes: updatedNotes,\r\n+      };\r\n+\r\n+      const success = await updateLink(\r\n+        editingNotes.categoryId,\r\n+        editingNotes.linkId,\r\n+        updatedLink\r\n+      );\r\n+\r\n+      if (!success) {\r\n+        alert(\"Failed to update notes. Please try again.\");\r\n+      }\r\n+\r\n+      setIsNotesDialogOpen(false);\r\n+      setEditingNotes(null);\r\n+    } catch (error) {\r\n+      console.error(\"Error saving notes:\", error);\r\n+      alert(\"An error occurred while saving the notes.\");\r\n+    }\r\n+  };\r\n+\r\n+  const handleEditNotes = (categoryId: string, link: DatasetLink) => {\r\n+    setEditingNotes({\r\n+      categoryId,\r\n+      linkId: link.id,\r\n+      notes: link.notes || {\r\n+        content: \"\",\r\n+        lastUpdated: new Date().toISOString(),\r\n+      },\r\n+      linkTitle: link.title,\r\n+    });\r\n+    setIsNotesDialogOpen(true);\r\n+  };\r\n+\r\n+  const getBadgeColor = (type: string) => {\r\n+    const colors = {\r\n+      ieee: \"bg-blue-600\",\r\n+      arxiv: \"bg-green-600\",\r\n+      mdpi: \"bg-purple-600\",\r\n+      tool: \"bg-yellow-600\",\r\n+      database: \"bg-red-600\",\r\n+      dataset: \"bg-indigo-600\",\r\n+      specification: \"bg-pink-600\",\r\n+      article: \"bg-orange-600\",\r\n+    };\r\n+    return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n+  };\r\n+\r\n+  return (\r\n+    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n+      {/* Navigation Bar */}\r\n+      <nav\r\n+        className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n+          scrolled ? \"bg-black bg-opacity-80 backdrop-blur\" : \"bg-transparent\"\r\n+        }`}\r\n+      >\r\n+        <div className=\"max-w-7xl mx-auto px-4\">\r\n+          <div className=\"flex items-center justify-between h-16\">\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-4\">\r\n+              <NotificationMenu />\r\n+              <Button\r\n+                onClick={handleAddCategory}\r\n+                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+              >\r\n+                <Plus className=\"w-4 h-4 mr-2\" /> Add Category\r\n+              </Button>\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </nav>\r\n+\r\n+      {/* Hero Section */}\r\n+      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n+        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n+        <div\r\n+          className=\"absolute inset-0\"\r\n+          style={{\r\n+            backgroundImage:\r\n+              \"radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)\",\r\n+            backgroundSize: \"30px 30px\",\r\n+          }}\r\n+        />\r\n+        <div className=\"relative z-10 text-center px-4\">\r\n+          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+            Energy Dataset Portal\r\n+          </h1>\r\n+          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n+            Explore comprehensive energy data resources for research and\r\n+            analysis\r\n+          </p>\r\n+\r\n+          {/* Search Bar */}\r\n+          <div className=\"max-w-2xl mx-auto\">\r\n+            <div className=\"relative\">\r\n+              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n+                <Search className=\"w-6 h-6 text-gray-400\" />\r\n+              </div>\r\n+              <input\r\n+                type=\"text\"\r\n+                placeholder=\"Search datasets...\"\r\n+                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n+                value={searchTerm}\r\n+                onChange={(e) => setSearchTerm(e.target.value)}\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* Categories Grid */}\r\n+      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n+        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n+          {filteredCategories.map((category) => {\r\n+            const IconComponent =\r\n+              iconMap[category.icon as keyof typeof iconMap];\r\n+            const hasNotes = category.links.some(\r\n+              (link) => !!link.notes?.content\r\n+            );\r\n+\r\n+            return (\r\n+              <Card\r\n+                key={category.id}\r\n+                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n+                  selectedCategory === category.id.toString()\r\n+                    ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n+                    : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n+                }`}\r\n+                onClick={() => setSelectedCategory(category.id.toString())}\r\n+              >\r\n+                <CardContent className=\"p-0 relative\">\r\n+                  <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-blue-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleEditCategory(category);\r\n+                      }}\r\n+                    >\r\n+                      <Edit className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                    <Button\r\n+                      variant=\"ghost\"\r\n+                      size=\"icon\"\r\n+                      className=\"text-gray-400 hover:text-red-400\"\r\n+                      onClick={(e) => {\r\n+                        e.stopPropagation();\r\n+                        handleDeleteCategory(category.id.toString());\r\n+                      }}\r\n+                    >\r\n+                      <Trash2 className=\"w-4 h-4\" />\r\n+                    </Button>\r\n+                  </div>\r\n+                  <div className=\"flex items-center justify-between mb-6\">\r\n+                    <div\r\n+                      className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"bg-blue-500 bg-opacity-20\"\r\n+                          : \"bg-white bg-opacity-10\"\r\n+                      } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}\r\n+                    >\r\n+                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n+                    </div>\r\n+                    <ChevronRight\r\n+                      className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n+                        selectedCategory === category.id\r\n+                          ? \"translate-x-1 text-blue-400\"\r\n+                          : \"\"\r\n+                      } group-hover:translate-x-1`}\r\n+                    />\r\n+                  </div>\r\n+                  <div className=\"flex items-center justify-between mb-3\">\r\n+                    <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n+                    {hasNotes && (\r\n+                      <div className=\"flex items-center text-xs text-gray-400\">\r\n+                        <StickyNote className=\"w-3 h-3 mr-1\" />\r\n+                        <span>Has notes</span>\r\n+                      </div>\r\n+                    )}\r\n+                  </div>\r\n+                  <p className=\"text-gray-400 text-sm leading-relaxed\">\r\n+                    {category.description}\r\n+                  </p>\r\n+                </CardContent>\r\n+              </Card>\r\n+            );\r\n+          })}\r\n+        </div>\r\n+      </div>\r\n+\r\n+      {/* <Button\r\n+        onClick={handleMigration}\r\n+        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+      >\r\n+        Migrate to Firebase\r\n+      </Button> */}\r\n+\r\n+      {/* Dataset List */}\r\n+      {selectedCategory && (\r\n+        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n+          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n+            <CardContent className=\"p-0\">\r\n+              <div className=\"flex items-center justify-between mb-8\">\r\n+                <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n+                  {\r\n+                    categories.find((c) => c.id.toString() === selectedCategory)\r\n+                      ?.title\r\n+                  }{\" \"}\r\n+                  Resources\r\n+                </h2>\r\n+                <Button\r\n+                  onClick={handleAddLink}\r\n+                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n+                >\r\n+                  <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n+                </Button>\r\n+              </div>\r\n+              <div className=\"space-y-4\">\r\n+                {categories\r\n+                  .find((c) => c.id.toString() === selectedCategory)\r\n+                  ?.links.map((link: DatasetLink, index: number) => {\r\n+                    const isExpanded = expandedLinks.has(link.title);\r\n+                    const hasNotes = !!link.notes?.content;\r\n+\r\n+                    return (\r\n+                      <div\r\n+                        key={index}\r\n+                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n+                      >\r\n+                        <div className=\"p-6\">\r\n+                          <div className=\"flex items-center justify-between\">\r\n+                            <div className=\"flex items-center space-x-4\">\r\n+                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n+                                {link.title}\r\n+                              </span>\r\n+                              <Badge\r\n+                                className={`${getBadgeColor(\r\n+                                  link.type\r\n+                                )} text-white`}\r\n+                              >\r\n+                                {link.type}\r\n+                              </Badge>\r\n+                              {hasNotes && !isExpanded && (\r\n+                                <button\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n+                                >\r\n+                                  <StickyNote className=\"w-3 h-3\" />\r\n+                                  <span>View notes</span>\r\n+                                </button>\r\n+                              )}\r\n+                            </div>\r\n+                            <div className=\"flex items-center space-x-2\">\r\n+                              {!isExpanded && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    handleEditNotes(selectedCategory!, link)\r\n+                                  }\r\n+                                >\r\n+                                  <StickyNote className=\"w-4 h-4\" />\r\n+                                </Button>\r\n+                              )}\r\n+                              {hasNotes && (\r\n+                                <Button\r\n+                                  variant=\"ghost\"\r\n+                                  size=\"icon\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                  onClick={() =>\r\n+                                    toggleLinkExpansion(link.title)\r\n+                                  }\r\n+                                >\r\n+                                  {isExpanded ? (\r\n+                                    <ChevronUp className=\"w-4 h-4\" />\r\n+                                  ) : (\r\n+                                    <ChevronDown className=\"w-4 h-4\" />\r\n+                                  )}\r\n+                                </Button>\r\n+                              )}\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-blue-400\"\r\n+                                onClick={() => handleEditLink(link)}\r\n+                              >\r\n+                                <Edit className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              <Button\r\n+                                variant=\"ghost\"\r\n+                                size=\"icon\"\r\n+                                className=\"text-gray-400 hover:text-red-400\"\r\n+                                onClick={() =>\r\n+                                  handleDeleteLink(selectedCategory!, link.id)\r\n+                                }\r\n+                              >\r\n+                                <Trash2 className=\"w-4 h-4\" />\r\n+                              </Button>\r\n+                              {link.url !== \"#\" && (\r\n+                                <a\r\n+                                  href={link.url}\r\n+                                  target=\"_blank\"\r\n+                                  rel=\"noopener noreferrer\"\r\n+                                  className=\"text-gray-400 hover:text-blue-400\"\r\n+                                >\r\n+                                  <ExternalLink className=\"w-4 h-4\" />\r\n+                                </a>\r\n+                              )}\r\n+                            </div>\r\n+                          </div>\r\n+                          {isExpanded && (\r\n+                            <ExpandedNotes\r\n+                              notes={link.notes}\r\n+                              onEdit={() =>\r\n+                                handleEditNotes(selectedCategory!, link)\r\n+                              }\r\n+                            />\r\n+                          )}\r\n+                        </div>\r\n+                      </div>\r\n+                    );\r\n+                  })}\r\n+              </div>\r\n+            </CardContent>\r\n+          </Card>\r\n+        </div>\r\n+      )}\r\n+\r\n+      {/* Add NotesDialog */}\r\n+      <NotesDialog\r\n+        isOpen={isNotesDialogOpen}\r\n+        onClose={() => {\r\n+          setIsNotesDialogOpen(false);\r\n+          setEditingNotes(null);\r\n+        }}\r\n+        onSave={handleSaveNotes}\r\n+        initialNotes={editingNotes?.notes}\r\n+        title={editingNotes?.linkTitle || \"\"}\r\n+      />\r\n+\r\n+      {/* Keep existing dialogs */}\r\n+      <CategoryDialog\r\n+        isOpen={isCategoryDialogOpen}\r\n+        onClose={() => setIsCategoryDialogOpen(false)}\r\n+        onSave={handleSaveCategory}\r\n+        category={editingCategory}\r\n+        mode={dialogMode}\r\n+      />\r\n+\r\n+      <LinkDialog\r\n+        isOpen={isLinkDialogOpen}\r\n+        onClose={() => setIsLinkDialogOpen(false)}\r\n+        onSave={handleSaveLink}\r\n+        link={editingLink}\r\n+        mode={dialogMode}\r\n+        categoryId={selectedCategory || undefined}\r\n+      />\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default DatasetPortal;\r\n"
                },
                {
                    "date": 1730205971223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -714,721 +714,4 @@\n   );\r\n };\r\n \r\n export default DatasetPortal;\r\n-\"use client\";\r\n-\r\n-import React, { useState, useEffect } from \"react\";\r\n-import {\r\n-  Search,\r\n-  ChevronRight,\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-  Edit,\r\n-  Trash2,\r\n-  Plus,\r\n-  PlusCircle,\r\n-  ExternalLink,\r\n-  ChevronDown,\r\n-  ChevronUp,\r\n-  StickyNote,\r\n-} from \"lucide-react\";\r\n-import { Card, CardContent } from \"@/components/ui/card\";\r\n-import { Badge } from \"@/components/ui/badge\";\r\n-import { Button } from \"@/components/ui/button\";\r\n-import { useLocalStorage } from \"@/hooks/useLocalStorage\";\r\n-import CategoryDialog from \"./CategoryDialog\";\r\n-import LinkDialog from \"./LinkDialog\";\r\n-import categoriesData from \"@/data/categories.json\";\r\n-import { Category, Link as DatasetLink } from \"@/types\";\r\n-import { formatDistanceToNow } from \"date-fns\";\r\n-import {\r\n-  migrateDataToFirestore,\r\n-  validateMigrationData,\r\n-} from \"@/lib/firebase/migration\";\r\n-import { useFirebase } from \"@/contexts/FirebaseContext\";\r\n-import { useFirebaseOperations } from \"@/hooks/useFirebaseOperations\";\r\n-import NotesDialog from \"./NotesDialog\";\r\n-import NotificationMenu from \"./NotificationMenu\";\r\n-\r\n-const iconMap = {\r\n-  Database,\r\n-  Sun,\r\n-  Activity,\r\n-  BarChart2,\r\n-  Building2,\r\n-  Gauge,\r\n-  Cloud,\r\n-  Leaf,\r\n-};\r\n-\r\n-// New component for expanded notes\r\n-const ExpandedNotes: React.FC<{\r\n-  notes: DatasetLink[\"notes\"];\r\n-  onEdit?: () => void;\r\n-}> = ({ notes, onEdit }) => {\r\n-  if (!notes?.content) return null;\r\n-\r\n-  return (\r\n-    <div className=\"mt-4 space-y-2\">\r\n-      <div className=\"flex items-start justify-between\">\r\n-        <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n-          <StickyNote className=\"w-4 h-4\" />\r\n-          <span>Notes</span>\r\n-        </div>\r\n-        <div className=\"flex items-center gap-4\">\r\n-          {notes.lastUpdated && (\r\n-            <span className=\"text-xs text-gray-500\">\r\n-              Updated {formatDistanceToNow(new Date(notes.lastUpdated))} ago\r\n-            </span>\r\n-          )}\r\n-          {onEdit && (\r\n-            <Button\r\n-              variant=\"ghost\"\r\n-              size=\"sm\"\r\n-              onClick={onEdit}\r\n-              className=\"text-gray-400 hover:text-blue-400\"\r\n-            >\r\n-              <Edit className=\"w-4 h-4\" />\r\n-            </Button>\r\n-          )}\r\n-        </div>\r\n-      </div>\r\n-      <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n-        {notes.content}\r\n-      </div>\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-const DatasetPortal = () => {\r\n-  // 1. All useState hooks\r\n-  const [expandedLinks, setExpandedLinks] = useState<Set<string>>(new Set());\r\n-  const [searchTerm, setSearchTerm] = useState(\"\");\r\n-  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n-  const [scrolled, setScrolled] = useState(false);\r\n-\r\n-  // 2. Custom hooks\r\n-  const { categories, loading: categoriesLoading } = useFirebase();\r\n-  const {\r\n-    addCategory,\r\n-    updateCategory,\r\n-    deleteCategory,\r\n-    addLink,\r\n-    updateLink,\r\n-    deleteLink,\r\n-    loading: operationsLoading,\r\n-  } = useFirebaseOperations();\r\n-\r\n-  // 3. Dialog states\r\n-  const [isCategoryDialogOpen, setIsCategoryDialogOpen] = useState(false);\r\n-  const [isLinkDialogOpen, setIsLinkDialogOpen] = useState(false);\r\n-  const [editingCategory, setEditingCategory] = useState<\r\n-    Category | undefined\r\n-  >();\r\n-  const [editingLink, setEditingLink] = useState<DatasetLink | undefined>();\r\n-  const [dialogMode, setDialogMode] = useState<\"add\" | \"edit\">(\"add\");\r\n-\r\n-  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\r\n-  const [editingNotes, setEditingNotes] = useState<{\r\n-    categoryId: string;\r\n-    linkId: string;\r\n-    notes: { content: string; lastUpdated: string };\r\n-    linkTitle: string;\r\n-  } | null>(null);\r\n-\r\n-  // 4. Effects - all useEffect hooks need to be together\r\n-  useEffect(() => {\r\n-    const handleScroll = () => {\r\n-      setScrolled(window.scrollY > 10);\r\n-    };\r\n-\r\n-    window.addEventListener(\"scroll\", handleScroll);\r\n-    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n-  }, []);\r\n-\r\n-  // 5. Derived state\r\n-  const filteredCategories = categories.filter(\r\n-    (category) =>\r\n-      category.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-      category.links.some(\r\n-        (link) =>\r\n-          link.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n-          link.notes?.content?.toLowerCase().includes(searchTerm.toLowerCase())\r\n-      )\r\n-  );\r\n-\r\n-  // 6. Loading state - move this after all hooks\r\n-  if (categoriesLoading) {\r\n-    return (\r\n-      <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white flex items-center justify-center\">\r\n-        <div className=\"text-xl\">Loading...</div>\r\n-      </div>\r\n-    );\r\n-  }\r\n-\r\n-  // 7. Event handlers - after all hooks and before render\r\n-  const handleAddCategory = () => {\r\n-    setDialogMode(\"add\");\r\n-    setEditingCategory(undefined);\r\n-    setIsCategoryDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleMigration = async () => {\r\n-    const categoriesData = await import(\"@/data/categories.json\");\r\n-\r\n-    // First validate the data\r\n-    if (!validateMigrationData(categoriesData.categories)) {\r\n-      alert(\r\n-        \"Invalid data structure detected. Please check the console for details.\"\r\n-      );\r\n-      return;\r\n-    }\r\n-\r\n-    // Confirm migration\r\n-    if (\r\n-      !window.confirm(\r\n-        \"This will migrate all categories and links to Firebase. Continue?\"\r\n-      )\r\n-    ) {\r\n-      return;\r\n-    }\r\n-\r\n-    try {\r\n-      // Attempt migration\r\n-      const success = await migrateDataToFirestore(categoriesData.categories);\r\n-\r\n-      if (success) {\r\n-        alert(\"Migration completed successfully!\");\r\n-      } else {\r\n-        const cleanup = window.confirm(\r\n-          \"Migration failed. Would you like to clean up any partial migration data?\"\r\n-        );\r\n-\r\n-        if (cleanup) {\r\n-          await cleanupFailedMigration(categoriesData.categories);\r\n-          alert(\"Cleanup completed.\");\r\n-        }\r\n-      }\r\n-    } catch (error) {\r\n-      console.error(\"Migration error:\", error);\r\n-      alert(\"Migration failed. Check console for details.\");\r\n-    }\r\n-  };\r\n-\r\n-  const toggleLinkExpansion = (linkTitle: string) => {\r\n-    setExpandedLinks((prev) => {\r\n-      const newSet = new Set(prev);\r\n-      if (newSet.has(linkTitle)) {\r\n-        newSet.delete(linkTitle);\r\n-      } else {\r\n-        newSet.add(linkTitle);\r\n-      }\r\n-      return newSet;\r\n-    });\r\n-  };\r\n-\r\n-  const handleDeleteCategory = async (categoryId: string) => {\r\n-    const category = categories.find((c) => c.id.toString() === categoryId);\r\n-    if (!category) return;\r\n-\r\n-    if (\r\n-      window.confirm(\r\n-        `Are you sure you want to delete the category \"${category.title}\"?`\r\n-      )\r\n-    ) {\r\n-      const success = await deleteCategory(categoryId, category.title);\r\n-      if (success) {\r\n-        if (selectedCategory === categoryId) {\r\n-          setSelectedCategory(null);\r\n-        }\r\n-      } else {\r\n-        alert(\"Failed to delete category. Please try again.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSaveCategory = async (categoryData: Partial<Category>) => {\r\n-    if (dialogMode === \"add\") {\r\n-      const success = await addCategory(categoryData as Category);\r\n-      if (!success) {\r\n-        alert(\"Failed to add category. Please try again.\");\r\n-      }\r\n-    } else if (dialogMode === \"edit\" && editingCategory) {\r\n-      const success = await updateCategory(\r\n-        editingCategory.id.toString(),\r\n-        categoryData\r\n-      );\r\n-      if (!success) {\r\n-        alert(\"Failed to update category. Please try again.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleAddLink = () => {\r\n-    setDialogMode(\"add\");\r\n-    setEditingLink(undefined);\r\n-    setIsLinkDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleEditLink = (link: Link) => {\r\n-    setDialogMode(\"edit\");\r\n-    setEditingLink(link);\r\n-    setIsLinkDialogOpen(true);\r\n-  };\r\n-\r\n-  const handleDeleteLink = async (categoryId: string, linkId: string) => {\r\n-    if (!selectedCategory) return;\r\n-\r\n-    const category = categories.find((c) => c.id.toString() === categoryId);\r\n-    const link = category?.links.find((l) => l.id === linkId);\r\n-    if (!category || !link) return;\r\n-\r\n-    if (\r\n-      window.confirm(\r\n-        `Are you sure you want to delete the link \"${link.title}\"?`\r\n-      )\r\n-    ) {\r\n-      try {\r\n-        const success = await deleteLink(categoryId, linkId, link.title);\r\n-        if (!success) {\r\n-          alert(\"Failed to delete link. Please try again.\");\r\n-        }\r\n-      } catch (error) {\r\n-        console.error(\"Error deleting link:\", error);\r\n-        alert(\"An error occurred while deleting the link.\");\r\n-      }\r\n-    }\r\n-  };\r\n-\r\n-  const handleSaveLink = async (linkData: Link) => {\r\n-    if (!selectedCategory) return;\r\n-\r\n-    try {\r\n-      if (dialogMode === \"add\") {\r\n-        // Generate a proper ID for the new link\r\n-        const newLinkData = {\r\n-          ...linkData,\r\n-          id: linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n-        };\r\n-\r\n-        const success = await addLink(selectedCategory, newLinkData);\r\n-        if (!success) {\r\n-          alert(\"Failed to add link. Please try again.\");\r\n-        }\r\n-      } else if (dialogMode === \"edit\" && editingLink) {\r\n-        // Use the existing link ID or generate one if it doesn't exist\r\n-        const updatedLinkData = {\r\n-          ...linkData,\r\n-          id:\r\n-            editingLink.id ||\r\n-            linkData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n-        };\r\n-\r\n-        const success = await updateLink(\r\n-          selectedCategory,\r\n-          updatedLinkData.id,\r\n-          updatedLinkData\r\n-        );\r\n-        if (!success) {\r\n-          alert(\"Failed to update link. Please try again.\");\r\n-        }\r\n-      }\r\n-\r\n-      setIsLinkDialogOpen(false);\r\n-    } catch (error) {\r\n-      console.error(\"Error saving link:\", error);\r\n-      alert(\"An error occurred while saving the link.\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleSaveNotes = async (updatedNotes: {\r\n-    content: string;\r\n-    lastUpdated: string;\r\n-  }) => {\r\n-    if (!editingNotes) return;\r\n-\r\n-    try {\r\n-      const linkToUpdate = categories\r\n-        .find((c) => c.id.toString() === editingNotes.categoryId)\r\n-        ?.links.find((l) => l.id === editingNotes.linkId);\r\n-\r\n-      if (!linkToUpdate) return;\r\n-\r\n-      const updatedLink = {\r\n-        ...linkToUpdate,\r\n-        notes: updatedNotes,\r\n-      };\r\n-\r\n-      const success = await updateLink(\r\n-        editingNotes.categoryId,\r\n-        editingNotes.linkId,\r\n-        updatedLink\r\n-      );\r\n-\r\n-      if (!success) {\r\n-        alert(\"Failed to update notes. Please try again.\");\r\n-      }\r\n-\r\n-      setIsNotesDialogOpen(false);\r\n-      setEditingNotes(null);\r\n-    } catch (error) {\r\n-      console.error(\"Error saving notes:\", error);\r\n-      alert(\"An error occurred while saving the notes.\");\r\n-    }\r\n-  };\r\n-\r\n-  const handleEditNotes = (categoryId: string, link: DatasetLink) => {\r\n-    setEditingNotes({\r\n-      categoryId,\r\n-      linkId: link.id,\r\n-      notes: link.notes || {\r\n-        content: \"\",\r\n-        lastUpdated: new Date().toISOString(),\r\n-      },\r\n-      linkTitle: link.title,\r\n-    });\r\n-    setIsNotesDialogOpen(true);\r\n-  };\r\n-\r\n-  const getBadgeColor = (type: string) => {\r\n-    const colors = {\r\n-      ieee: \"bg-blue-600\",\r\n-      arxiv: \"bg-green-600\",\r\n-      mdpi: \"bg-purple-600\",\r\n-      tool: \"bg-yellow-600\",\r\n-      database: \"bg-red-600\",\r\n-      dataset: \"bg-indigo-600\",\r\n-      specification: \"bg-pink-600\",\r\n-      article: \"bg-orange-600\",\r\n-    };\r\n-    return colors[type as keyof typeof colors] || \"bg-gray-600\";\r\n-  };\r\n-\r\n-  return (\r\n-    <div className=\"min-h-screen bg-gradient-to-b from-gray-900 to-black text-white\">\r\n-      {/* Navigation Bar */}\r\n-      <nav\r\n-        className={`fixed top-0 w-full z-50 transition-all duration-300 ${\r\n-          scrolled ? \"bg-black bg-opacity-80 backdrop-blur\" : \"bg-transparent\"\r\n-        }`}\r\n-      >\r\n-        <div className=\"max-w-7xl mx-auto px-4\">\r\n-          <div className=\"flex items-center justify-between h-16\">\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <div className=\"text-xl font-bold\">Energy Dataset Portal</div>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-4\">\r\n-              <NotificationMenu />\r\n-              <Button\r\n-                onClick={handleAddCategory}\r\n-                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-              >\r\n-                <Plus className=\"w-4 h-4 mr-2\" /> Add Category\r\n-              </Button>\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </nav>\r\n-\r\n-      {/* Hero Section */}\r\n-      <div className=\"relative min-h-screen flex items-center justify-center\">\r\n-        <div className=\"absolute inset-0 bg-gradient-to-b from-blue-900 to-black opacity-50\" />\r\n-        <div\r\n-          className=\"absolute inset-0\"\r\n-          style={{\r\n-            backgroundImage:\r\n-              \"radial-gradient(circle at center, rgba(255,255,255,0.1) 1px, transparent 1px)\",\r\n-            backgroundSize: \"30px 30px\",\r\n-          }}\r\n-        />\r\n-        <div className=\"relative z-10 text-center px-4\">\r\n-          <h1 className=\"text-6xl md:text-7xl font-bold mb-8 tracking-tight bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-            Energy Dataset Portal\r\n-          </h1>\r\n-          <p className=\"text-xl md:text-2xl text-gray-300 max-w-2xl mx-auto font-light leading-relaxed mb-12\">\r\n-            Explore comprehensive energy data resources for research and\r\n-            analysis\r\n-          </p>\r\n-\r\n-          {/* Search Bar */}\r\n-          <div className=\"max-w-2xl mx-auto\">\r\n-            <div className=\"relative\">\r\n-              <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\r\n-                <Search className=\"w-6 h-6 text-gray-400\" />\r\n-              </div>\r\n-              <input\r\n-                type=\"text\"\r\n-                placeholder=\"Search datasets...\"\r\n-                className=\"w-full bg-white bg-opacity-10 rounded-2xl pl-12 pr-4 py-4 border border-white border-opacity-10 focus:border-blue-400 focus:ring-2 focus:ring-blue-400 focus:ring-opacity-50 transition-all duration-300 text-lg placeholder-gray-400\"\r\n-                value={searchTerm}\r\n-                onChange={(e) => setSearchTerm(e.target.value)}\r\n-              />\r\n-            </div>\r\n-          </div>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* Categories Grid */}\r\n-      <div className=\"max-w-7xl mx-auto px-4 py-24 -mt-48\">\r\n-        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n-          {filteredCategories.map((category) => {\r\n-            const IconComponent =\r\n-              iconMap[category.icon as keyof typeof iconMap];\r\n-            const hasNotes = category.links.some(\r\n-              (link) => !!link.notes?.content\r\n-            );\r\n-\r\n-            return (\r\n-              <Card\r\n-                key={category.id}\r\n-                className={`group p-8 rounded-2xl transition-all duration-300 hover:border-blue-400 hover:border-opacity-30 ${\r\n-                  selectedCategory === category.id.toString()\r\n-                    ? \"bg-blue-900 bg-opacity-20 border-blue-400 border-opacity-50\"\r\n-                    : \"bg-white bg-opacity-5 hover:bg-opacity-10\"\r\n-                }`}\r\n-                onClick={() => setSelectedCategory(category.id.toString())}\r\n-              >\r\n-                <CardContent className=\"p-0 relative\">\r\n-                  <div className=\"absolute top-0 right-0 flex space-x-2\">\r\n-                    <Button\r\n-                      variant=\"ghost\"\r\n-                      size=\"icon\"\r\n-                      className=\"text-gray-400 hover:text-blue-400\"\r\n-                      onClick={(e) => {\r\n-                        e.stopPropagation();\r\n-                        handleEditCategory(category);\r\n-                      }}\r\n-                    >\r\n-                      <Edit className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                    <Button\r\n-                      variant=\"ghost\"\r\n-                      size=\"icon\"\r\n-                      className=\"text-gray-400 hover:text-red-400\"\r\n-                      onClick={(e) => {\r\n-                        e.stopPropagation();\r\n-                        handleDeleteCategory(category.id.toString());\r\n-                      }}\r\n-                    >\r\n-                      <Trash2 className=\"w-4 h-4\" />\r\n-                    </Button>\r\n-                  </div>\r\n-                  <div className=\"flex items-center justify-between mb-6\">\r\n-                    <div\r\n-                      className={`w-14 h-14 rounded-xl flex items-center justify-center ${\r\n-                        selectedCategory === category.id\r\n-                          ? \"bg-blue-500 bg-opacity-20\"\r\n-                          : \"bg-white bg-opacity-10\"\r\n-                      } group-hover:bg-blue-500 group-hover:bg-opacity-20 transition-all duration-300`}\r\n-                    >\r\n-                      {IconComponent && <IconComponent className=\"w-6 h-6\" />}\r\n-                    </div>\r\n-                    <ChevronRight\r\n-                      className={`w-5 h-5 text-gray-400 transform transition-all duration-300 ${\r\n-                        selectedCategory === category.id\r\n-                          ? \"translate-x-1 text-blue-400\"\r\n-                          : \"\"\r\n-                      } group-hover:translate-x-1`}\r\n-                    />\r\n-                  </div>\r\n-                  <div className=\"flex items-center justify-between mb-3\">\r\n-                    <h3 className=\"text-xl font-semibold\">{category.title}</h3>\r\n-                    {hasNotes && (\r\n-                      <div className=\"flex items-center text-xs text-gray-400\">\r\n-                        <StickyNote className=\"w-3 h-3 mr-1\" />\r\n-                        <span>Has notes</span>\r\n-                      </div>\r\n-                    )}\r\n-                  </div>\r\n-                  <p className=\"text-gray-400 text-sm leading-relaxed\">\r\n-                    {category.description}\r\n-                  </p>\r\n-                </CardContent>\r\n-              </Card>\r\n-            );\r\n-          })}\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {/* <Button\r\n-        onClick={handleMigration}\r\n-        className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-      >\r\n-        Migrate to Firebase\r\n-      </Button> */}\r\n-\r\n-      {/* Dataset List */}\r\n-      {selectedCategory && (\r\n-        <div className=\"max-w-4xl mx-auto px-4 pb-24\">\r\n-          <Card className=\"bg-white bg-opacity-5 rounded-2xl p-8 border border-white border-opacity-10\">\r\n-            <CardContent className=\"p-0\">\r\n-              <div className=\"flex items-center justify-between mb-8\">\r\n-                <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 to-purple-400 text-transparent bg-clip-text\">\r\n-                  {\r\n-                    categories.find((c) => c.id.toString() === selectedCategory)\r\n-                      ?.title\r\n-                  }{\" \"}\r\n-                  Resources\r\n-                </h2>\r\n-                <Button\r\n-                  onClick={handleAddLink}\r\n-                  className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n-                >\r\n-                  <PlusCircle className=\"w-4 h-4 mr-2\" /> Add Link\r\n-                </Button>\r\n-              </div>\r\n-              <div className=\"space-y-4\">\r\n-                {categories\r\n-                  .find((c) => c.id.toString() === selectedCategory)\r\n-                  ?.links.map((link: DatasetLink, index: number) => {\r\n-                    const isExpanded = expandedLinks.has(link.title);\r\n-                    const hasNotes = !!link.notes?.content;\r\n-\r\n-                    return (\r\n-                      <div\r\n-                        key={index}\r\n-                        className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\"\r\n-                      >\r\n-                        <div className=\"p-6\">\r\n-                          <div className=\"flex items-center justify-between\">\r\n-                            <div className=\"flex items-center space-x-4\">\r\n-                              <span className=\"text-lg text-gray-200 group-hover:text-blue-400 transition-colors\">\r\n-                                {link.title}\r\n-                              </span>\r\n-                              <Badge\r\n-                                className={`${getBadgeColor(\r\n-                                  link.type\r\n-                                )} text-white`}\r\n-                              >\r\n-                                {link.type}\r\n-                              </Badge>\r\n-                              {hasNotes && !isExpanded && (\r\n-                                <button\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n-                                >\r\n-                                  <StickyNote className=\"w-3 h-3\" />\r\n-                                  <span>View notes</span>\r\n-                                </button>\r\n-                              )}\r\n-                            </div>\r\n-                            <div className=\"flex items-center space-x-2\">\r\n-                              {!isExpanded && (\r\n-                                <Button\r\n-                                  variant=\"ghost\"\r\n-                                  size=\"icon\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                  onClick={() =>\r\n-                                    handleEditNotes(selectedCategory!, link)\r\n-                                  }\r\n-                                >\r\n-                                  <StickyNote className=\"w-4 h-4\" />\r\n-                                </Button>\r\n-                              )}\r\n-                              {hasNotes && (\r\n-                                <Button\r\n-                                  variant=\"ghost\"\r\n-                                  size=\"icon\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                  onClick={() =>\r\n-                                    toggleLinkExpansion(link.title)\r\n-                                  }\r\n-                                >\r\n-                                  {isExpanded ? (\r\n-                                    <ChevronUp className=\"w-4 h-4\" />\r\n-                                  ) : (\r\n-                                    <ChevronDown className=\"w-4 h-4\" />\r\n-                                  )}\r\n-                                </Button>\r\n-                              )}\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-blue-400\"\r\n-                                onClick={() => handleEditLink(link)}\r\n-                              >\r\n-                                <Edit className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              <Button\r\n-                                variant=\"ghost\"\r\n-                                size=\"icon\"\r\n-                                className=\"text-gray-400 hover:text-red-400\"\r\n-                                onClick={() =>\r\n-                                  handleDeleteLink(selectedCategory!, link.id)\r\n-                                }\r\n-                              >\r\n-                                <Trash2 className=\"w-4 h-4\" />\r\n-                              </Button>\r\n-                              {link.url !== \"#\" && (\r\n-                                <a\r\n-                                  href={link.url}\r\n-                                  target=\"_blank\"\r\n-                                  rel=\"noopener noreferrer\"\r\n-                                  className=\"text-gray-400 hover:text-blue-400\"\r\n-                                >\r\n-                                  <ExternalLink className=\"w-4 h-4\" />\r\n-                                </a>\r\n-                              )}\r\n-                            </div>\r\n-                          </div>\r\n-                          {isExpanded && (\r\n-                            <ExpandedNotes\r\n-                              notes={link.notes}\r\n-                              onEdit={() =>\r\n-                                handleEditNotes(selectedCategory!, link)\r\n-                              }\r\n-                            />\r\n-                          )}\r\n-                        </div>\r\n-                      </div>\r\n-                    );\r\n-                  })}\r\n-              </div>\r\n-            </CardContent>\r\n-          </Card>\r\n-        </div>\r\n-      )}\r\n-\r\n-      {/* Add NotesDialog */}\r\n-      <NotesDialog\r\n-        isOpen={isNotesDialogOpen}\r\n-        onClose={() => {\r\n-          setIsNotesDialogOpen(false);\r\n-          setEditingNotes(null);\r\n-        }}\r\n-        onSave={handleSaveNotes}\r\n-        initialNotes={editingNotes?.notes}\r\n-        title={editingNotes?.linkTitle || \"\"}\r\n-      />\r\n-\r\n-      {/* Keep existing dialogs */}\r\n-      <CategoryDialog\r\n-        isOpen={isCategoryDialogOpen}\r\n-        onClose={() => setIsCategoryDialogOpen(false)}\r\n-        onSave={handleSaveCategory}\r\n-        category={editingCategory}\r\n-        mode={dialogMode}\r\n-      />\r\n-\r\n-      <LinkDialog\r\n-        isOpen={isLinkDialogOpen}\r\n-        onClose={() => setIsLinkDialogOpen(false)}\r\n-        onSave={handleSaveLink}\r\n-        link={editingLink}\r\n-        mode={dialogMode}\r\n-        categoryId={selectedCategory || undefined}\r\n-      />\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default DatasetPortal;\r\n"
                }
            ],
            "date": 1730125478158,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Search, ChevronRight, Database, Sun, Home, Activity, \r\n  BarChart2, Building2, Gauge, Cloud, Leaf } from 'lucide-react';\r\n\r\nconst DatasetPortal = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n\r\n  const categories = [\r\n    {\r\n      id: 1,\r\n      title: \"Research Papers\",\r\n      icon: <Database className=\"w-6 h-6\" />,\r\n      description: \"Academic research papers from IEEE, ArXiv, and MDPI journals\"\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Solar Production\",\r\n      icon: <Sun className=\"w-6 h-6\" />,\r\n      description: \"Solar generation data and geographical information systems\"\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Energy Consumption\",\r\n      icon: <Activity className=\"w-6 h-6\" />,\r\n      description: \"Residential and commercial energy consumption datasets\"\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Load Monitoring\",\r\n      icon: <BarChart2 className=\"w-6 h-6\" />,\r\n      description: \"NILM datasets and appliance energy usage monitoring\"\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Building Energy\",\r\n      icon: <Building2 className=\"w-6 h-6\" />,\r\n      description: \"Building energy data and efficiency metrics\"\r\n    },\r\n    {\r\n      id: 6,\r\n      title: \"Smart Meters\",\r\n      icon: <Gauge className=\"w-6 h-6\" />,\r\n      description: \"Smart meter data and implementation resources\"\r\n    },\r\n    {\r\n      id: 7,\r\n      title: \"Environmental\",\r\n      icon: <Cloud className=\"w-6 h-6\" />,\r\n      description: \"Climate and environmental impact data\"\r\n    },\r\n    {\r\n      id: 8,\r\n      title: \"Energy Tools\",\r\n      icon: <Leaf className=\"w-6 h-6\" />,\r\n      description: \"Energy data portals and analysis tools\"\r\n    }\r\n  ];\r\n\r\n  const datasets = {\r\n    1: [\r\n      \"IEEE Paper: Document 9826532\",\r\n      \"ArXiv Paper: 2307.00142\",\r\n      \"IEEE Paper: Document 10387673\",\r\n      \"ArXiv Paper: 2102.12578\",\r\n      \"MDPI Energies Journal Articles\"\r\n    ],\r\n    2: [\r\n      \"Photovoltaic Geographical Information System (PVGIS)\",\r\n      \"National Solar Radiation Database (NSRDB) - NREL\",\r\n      \"EMHIRES Solar Generation Time Series\",\r\n      \"Solcast Data Specifications\",\r\n      \"NASA POWER Project\"\r\n    ],\r\n    3: [\r\n      \"EIA Residential Consumption Data 2020\",\r\n      \"Building Data Genome 2\",\r\n      \"UK-DALE Disaggregated Dataset\",\r\n      \"Smart Meter Energy Use Data\",\r\n      \"Electric Power Consumption Dataset\"\r\n    ],\r\n    4: [\r\n      \"UK-DALE Disaggregated Dataset\",\r\n      \"GitHub: NILM Tools and Resources\",\r\n      \"SHEd Dataset - NILM\",\r\n      \"Household Appliances Power Consumption\",\r\n      \"Appliances Energy Prediction Dataset\"\r\n    ],\r\n    5: [\r\n      \"Better Buildings Solution Center\",\r\n      \"Building Data Genome 2\",\r\n      \"NREL Buildings Benchmark\",\r\n      \"EnergySage - Whole Home Solutions\",\r\n      \"Intelligent Energy Management System\"\r\n    ],\r\n    6: [\r\n      \"Smart Meter Energy Use Data in London\",\r\n      \"CRU: Smart Meters and Services\",\r\n      \"OpenSynthS GB Smart Meter Synthetic Data\"\r\n    ],\r\n    7: [\r\n      \"International Renewable Energy Agency (IRENA)\",\r\n      \"GitHub: ClimateSet by RolnickLab\",\r\n      \"CDP Data Portal\"\r\n    ],\r\n    8: [\r\n      \"Global Energy Monitor\",\r\n      \"Utility Rate Database - OpenEI\",\r\n      \"Better Buildings Solution Center\",\r\n      \"NREL Data and Tools\",\r\n      \"U.S. Energy Information Administration (EIA)\"\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-black text-white\">\r\n      {/* Hero Section */}\r\n      <div className=\"relative h-96 flex items-center justify-center overflow-hidden\">\r\n        <div className=\"absolute inset-0 bg-gradient-to-r from-blue-900 to-purple-900 opacity-50\" />\r\n        <div className=\"relative z-10 text-center px-4\">\r\n          <h1 className=\"text-4xl md:text-6xl font-bold mb-6\">Energy Dataset Portal</h1>\r\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-2xl mx-auto\">\r\n            AI Power Solar Energy Optimization LLM Integration DATASETS - Graduation Project 2024-2025\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"max-w-4xl mx-auto px-4 -mt-8 relative z-20\">\r\n        <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-2 flex items-center\">\r\n          <Search className=\"w-6 h-6 text-gray-400 ml-2\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search datasets...\"\r\n            className=\"w-full bg-transparent border-none focus:outline-none text-white px-4 py-2\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Categories Grid */}\r\n      <div className=\"max-w-6xl mx-auto px-4 py-16\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          {categories.map((category) => (\r\n            <button\r\n              key={category.id}\r\n              onClick={() => setSelectedCategory(category.id)}\r\n              className={`p-6 rounded-lg transition-all duration-300 ${\r\n                selectedCategory === category.id\r\n                  ? 'bg-white/20 backdrop-blur-lg'\r\n                  : 'bg-white/10 hover:bg-white/15'\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                {category.icon}\r\n                <ChevronRight className=\"w-5 h-5 text-gray-400\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-semibold mb-2\">{category.title}</h3>\r\n              <p className=\"text-sm text-gray-400\">{category.description}</p>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Dataset List */}\r\n      {selectedCategory && (\r\n        <div className=\"max-w-4xl mx-auto px-4 pb-16\">\r\n          <div className=\"bg-white/10 backdrop-blur-lg rounded-lg p-6\">\r\n            <h2 className=\"text-2xl font-bold mb-6\">\r\n              {categories.find(c => c.id === selectedCategory)?.title} Resources\r\n            </h2>\r\n            <div className=\"space-y-4\">\r\n              {datasets[selectedCategory].map((dataset, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"p-4 bg-white/5 rounded-lg hover:bg-white/10 transition-colors cursor-pointer flex items-center justify-between\"\r\n                >\r\n                  <span>{dataset}</span>\r\n                  <ChevronRight className=\"w-5 h-5 text-gray-400\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatasetPortal;"
        }
    ]
}