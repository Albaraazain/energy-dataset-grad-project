{
    "sourceFile": "components/NotesDialog.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1730195648582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1730195648582,
            "name": "Commit-0",
            "content": "// components/NotesDialog.tsx\r\n\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { StickyNote, Clock } from \"lucide-react\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface NotesDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (notes: { content: string; lastUpdated: string }) => void;\r\n  initialNotes?: {\r\n    content: string;\r\n    lastUpdated: string;\r\n  };\r\n  title: string;\r\n}\r\n\r\nconst NotesDialog: React.FC<NotesDialogProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  initialNotes,\r\n  title,\r\n}) => {\r\n  const [notes, setNotes] = useState(initialNotes?.content || \"\");\r\n  const [charCount, setCharCount] = useState(0);\r\n  const maxChars = 5000; // Maximum character limit\r\n\r\n  useEffect(() => {\r\n    if (initialNotes) {\r\n      setNotes(initialNotes.content);\r\n      setCharCount(initialNotes.content.length);\r\n    } else {\r\n      setNotes(\"\");\r\n      setCharCount(0);\r\n    }\r\n  }, [initialNotes, isOpen]);\r\n\r\n  const handleSave = () => {\r\n    onSave({\r\n      content: notes,\r\n      lastUpdated: new Date().toISOString(),\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const newText = e.target.value;\r\n    if (newText.length <= maxChars) {\r\n      setNotes(newText);\r\n      setCharCount(newText.length);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"bg-gray-900 text-white sm:max-w-2xl\">\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center gap-2 text-xl\">\r\n            <StickyNote className=\"w-5 h-5\" />\r\n            Notes for {title}\r\n          </DialogTitle>\r\n          <DialogDescription>\r\n            <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n              <Clock className=\"w-4 h-4\" />\r\n              {initialNotes?.lastUpdated ? (\r\n                <span>\r\n                  Last updated{\" \"}\r\n                  {formatDistanceToNow(new Date(initialNotes.lastUpdated))} ago\r\n                </span>\r\n              ) : (\r\n                <span>No previous notes</span>\r\n              )}\r\n            </div>\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n\r\n        <div className=\"space-y-4\">\r\n          <div className=\"relative\">\r\n            <textarea\r\n              value={notes}\r\n              onChange={handleTextChange}\r\n              placeholder=\"Add detailed notes about this resource...\"\r\n              className=\"w-full h-96 rounded-md border border-gray-700 bg-gray-800 text-white px-4 py-3 text-sm resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              style={{\r\n                lineHeight: \"1.5\",\r\n              }}\r\n            />\r\n            <div className=\"absolute bottom-2 right-2 text-xs text-gray-400\">\r\n              {charCount}/{maxChars}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"text-xs text-gray-400\">\r\n            <ul className=\"list-disc list-inside space-y-1\">\r\n              <li>Use clear and concise language</li>\r\n              <li>Include relevant dates and version numbers if applicable</li>\r\n              <li>Add any important links or references</li>\r\n              <li>Highlight key findings or important details</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <DialogFooter className=\"sm:justify-between\">\r\n          <div className=\"flex items-center text-sm text-gray-400\">\r\n            <StickyNote className=\"w-4 h-4 mr-2\" />\r\n            <span>Markdown formatting is supported</span>\r\n          </div>\r\n          <div className=\"flex gap-2\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={onClose}\r\n              className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={handleSave}\r\n              className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n            >\r\n              Save Notes\r\n            </Button>\r\n          </div>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default NotesDialog;"
        }
    ]
}