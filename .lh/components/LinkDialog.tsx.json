{
    "sourceFile": "components/LinkDialog.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1730128529252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730130049201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n+// components/LinkDialog.tsx\r\n import React, { useState } from 'react';\r\n import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n import { Input } from '@/components/ui/input';\r\n import { Button } from '@/components/ui/button';\r\n import { Link } from '@/types';\r\n+import { formatDistanceToNow } from 'date-fns';\r\n+import { StickyNote } from 'lucide-react';\r\n \r\n interface LinkDialogProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -22,21 +25,33 @@\n   const [formData, setFormData] = useState<Link>(\r\n     link || {\r\n       title: '',\r\n       url: '',\r\n-      type: 'dataset'\r\n+      type: 'dataset',\r\n+      notes: {\r\n+        content: '',\r\n+        lastUpdated: new Date().toISOString()\r\n+      }\r\n     }\r\n   );\r\n \r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    onSave(formData);\r\n+    // Only include notes if there's actual content\r\n+    const submitData = {\r\n+      ...formData,\r\n+      notes: formData.notes?.content ? {\r\n+        content: formData.notes.content,\r\n+        lastUpdated: new Date().toISOString()\r\n+      } : undefined\r\n+    };\r\n+    onSave(submitData);\r\n     onClose();\r\n   };\r\n \r\n   return (\r\n     <Dialog open={isOpen} onOpenChange={onClose}>\r\n-      <DialogContent className=\"bg-gray-900 text-white\">\r\n+      <DialogContent className=\"bg-gray-900 text-white max-h-[90vh] overflow-y-auto\">\r\n         <DialogHeader>\r\n           <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n         </DialogHeader>\r\n         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n@@ -48,8 +63,9 @@\n               placeholder=\"Link Title\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n+          \r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n             <Input\r\n               value={formData.url}\r\n@@ -57,8 +73,9 @@\n               placeholder=\"Link URL\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n+          \r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n             <select\r\n               value={formData.type}\r\n@@ -74,8 +91,37 @@\n               <option value=\"arxiv\">ArXiv</option>\r\n               <option value=\"mdpi\">MDPI</option>\r\n             </select>\r\n           </div>\r\n+\r\n+          <div className=\"space-y-2\">\r\n+            <div className=\"flex items-center justify-between\">\r\n+              <label className=\"text-sm font-medium text-gray-200 flex items-center gap-2\">\r\n+                <StickyNote className=\"w-4 h-4\" />\r\n+                Notes\r\n+              </label>\r\n+              {formData.notes?.lastUpdated && mode === 'edit' && (\r\n+                <span className=\"text-xs text-gray-400\">\r\n+                  Last updated {formatDistanceToNow(new Date(formData.notes.lastUpdated))} ago\r\n+                </span>\r\n+              )}\r\n+            </div>\r\n+            <div className=\"relative\">\r\n+              <textarea\r\n+                value={formData.notes?.content || ''}\r\n+                onChange={(e) => setFormData({\r\n+                  ...formData,\r\n+                  notes: {\r\n+                    content: e.target.value,\r\n+                    lastUpdated: new Date().toISOString()\r\n+                  }\r\n+                })}\r\n+                placeholder=\"Add notes about this resource...\"\r\n+                className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+              />\r\n+            </div>\r\n+          </div>\r\n+\r\n           <div className=\"flex justify-end space-x-2 pt-4\">\r\n             <Button\r\n               type=\"button\"\r\n               variant=\"outline\"\r\n"
                },
                {
                    "date": 1730131140150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   onSave,\r\n   link,\r\n   mode\r\n }) => {\r\n+  // Initialize form data with existing link data or default values\r\n   const [formData, setFormData] = useState<Link>(\r\n     link || {\r\n       title: '',\r\n       url: '',\r\n"
                },
                {
                    "date": 1730131305992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // components/LinkDialog.tsx\r\n-import React, { useState } from 'react';\r\n+import React, { useEffect, useState } from 'react';\r\n import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n import { Input } from '@/components/ui/input';\r\n import { Button } from '@/components/ui/button';\r\n import { Link } from '@/types';\r\n@@ -33,9 +33,27 @@\n         lastUpdated: new Date().toISOString()\r\n       }\r\n     }\r\n   );\r\n+  \r\n+  // Reset form data when the dialog opens or link changes\r\n+  useEffect(() => {\r\n+    if (link && mode === 'edit') {\r\n+      setFormData(link);\r\n+    } else {\r\n+      setFormData({\r\n+        title: '',\r\n+        url: '',\r\n+        type: 'dataset',\r\n+        notes: {\r\n+          content: '',\r\n+          lastUpdated: new Date().toISOString()\r\n+        }\r\n+      });\r\n+    }\r\n+  }, [link, mode]);\r\n \r\n+\r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n     // Only include notes if there's actual content\r\n     const submitData = {\r\n"
                },
                {
                    "date": 1730131403155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n-// components/LinkDialog.tsx\r\n-import React, { useEffect, useState } from 'react';\r\n+// LinkDialog.tsx\r\n+import React, { useState, useEffect } from 'react';\r\n import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n import { Input } from '@/components/ui/input';\r\n import { Button } from '@/components/ui/button';\r\n import { Link } from '@/types';\r\n-import { formatDistanceToNow } from 'date-fns';\r\n import { StickyNote } from 'lucide-react';\r\n \r\n interface LinkDialogProps {\r\n   isOpen: boolean;\r\n@@ -33,9 +32,9 @@\n         lastUpdated: new Date().toISOString()\r\n       }\r\n     }\r\n   );\r\n-  \r\n+\r\n   // Reset form data when the dialog opens or link changes\r\n   useEffect(() => {\r\n     if (link && mode === 'edit') {\r\n       setFormData(link);\r\n@@ -51,26 +50,17 @@\n       });\r\n     }\r\n   }, [link, mode]);\r\n \r\n-\r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    // Only include notes if there's actual content\r\n-    const submitData = {\r\n-      ...formData,\r\n-      notes: formData.notes?.content ? {\r\n-        content: formData.notes.content,\r\n-        lastUpdated: new Date().toISOString()\r\n-      } : undefined\r\n-    };\r\n-    onSave(submitData);\r\n+    onSave(formData);\r\n     onClose();\r\n   };\r\n \r\n   return (\r\n     <Dialog open={isOpen} onOpenChange={onClose}>\r\n-      <DialogContent className=\"bg-gray-900 text-white max-h-[90vh] overflow-y-auto\">\r\n+      <DialogContent className=\"bg-gray-900 text-white\">\r\n         <DialogHeader>\r\n           <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n         </DialogHeader>\r\n         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n@@ -82,9 +72,8 @@\n               placeholder=\"Link Title\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n-          \r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n             <Input\r\n               value={formData.url}\r\n@@ -92,9 +81,8 @@\n               placeholder=\"Link URL\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n-          \r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n             <select\r\n               value={formData.type}\r\n@@ -110,37 +98,26 @@\n               <option value=\"arxiv\">ArXiv</option>\r\n               <option value=\"mdpi\">MDPI</option>\r\n             </select>\r\n           </div>\r\n-\r\n           <div className=\"space-y-2\">\r\n-            <div className=\"flex items-center justify-between\">\r\n-              <label className=\"text-sm font-medium text-gray-200 flex items-center gap-2\">\r\n-                <StickyNote className=\"w-4 h-4\" />\r\n-                Notes\r\n-              </label>\r\n-              {formData.notes?.lastUpdated && mode === 'edit' && (\r\n-                <span className=\"text-xs text-gray-400\">\r\n-                  Last updated {formatDistanceToNow(new Date(formData.notes.lastUpdated))} ago\r\n-                </span>\r\n-              )}\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <StickyNote className=\"w-4 h-4\" />\r\n+              <label className=\"text-sm font-medium text-gray-200\">Notes</label>\r\n             </div>\r\n-            <div className=\"relative\">\r\n-              <textarea\r\n-                value={formData.notes?.content || ''}\r\n-                onChange={(e) => setFormData({\r\n-                  ...formData,\r\n-                  notes: {\r\n-                    content: e.target.value,\r\n-                    lastUpdated: new Date().toISOString()\r\n-                  }\r\n-                })}\r\n-                placeholder=\"Add notes about this resource...\"\r\n-                className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n-              />\r\n-            </div>\r\n+            <textarea\r\n+              value={formData.notes?.content || ''}\r\n+              onChange={(e) => setFormData({\r\n+                ...formData,\r\n+                notes: {\r\n+                  content: e.target.value,\r\n+                  lastUpdated: new Date().toISOString()\r\n+                }\r\n+              })}\r\n+              placeholder=\"Add notes about this resource...\"\r\n+              className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+            />\r\n           </div>\r\n-\r\n           <div className=\"flex justify-end space-x-2 pt-4\">\r\n             <Button\r\n               type=\"button\"\r\n               variant=\"outline\"\r\n"
                },
                {
                    "date": 1730131511337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,141 @@\n+'use client';\r\n+\r\n+import React, { useState, useEffect } from 'react';\r\n+import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n+import { Input } from '@/components/ui/input';\r\n+import { Button } from '@/components/ui/button';\r\n+import { Link } from '@/types';\r\n+import { StickyNote } from 'lucide-react';\r\n+\r\n+interface LinkDialogProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  onSave: (link: Link) => void;\r\n+  link?: Link;\r\n+  mode: 'add' | 'edit';\r\n+}\r\n+\r\n+const LinkDialog: React.FC<LinkDialogProps> = ({\r\n+  isOpen,\r\n+  onClose,\r\n+  onSave,\r\n+  link,\r\n+  mode\r\n+}) => {\r\n+  const [formData, setFormData] = useState<Link>(\r\n+    link || {\r\n+      title: '',\r\n+      url: '',\r\n+      type: 'dataset',\r\n+      notes: {\r\n+        content: '',\r\n+        lastUpdated: new Date().toISOString()\r\n+      }\r\n+    }\r\n+  );\r\n+\r\n+  useEffect(() => {\r\n+    if (link && mode === 'edit') {\r\n+      setFormData(link);\r\n+    } else if (!link && mode === 'add') {\r\n+      setFormData({\r\n+        title: '',\r\n+        url: '',\r\n+        type: 'dataset',\r\n+        notes: {\r\n+          content: '',\r\n+          lastUpdated: new Date().toISOString()\r\n+        }\r\n+      });\r\n+    }\r\n+  }, [link, mode]);\r\n+\r\n+  const handleSubmit = (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    onSave(formData);\r\n+    onClose();\r\n+  };\r\n+\r\n+  return (\r\n+    <Dialog open={isOpen} onOpenChange={onClose}>\r\n+      <DialogContent className=\"bg-gray-900 text-white\">\r\n+        <DialogHeader>\r\n+          <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n+        </DialogHeader>\r\n+        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n+          <div>\r\n+            <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n+            <Input\r\n+              value={formData.title}\r\n+              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n+              placeholder=\"Link Title\"\r\n+              className=\"bg-gray-800 border-gray-700 text-white\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n+            <Input\r\n+              value={formData.url}\r\n+              onChange={(e) => setFormData({ ...formData, url: e.target.value })}\r\n+              placeholder=\"Link URL\"\r\n+              className=\"bg-gray-800 border-gray-700 text-white\"\r\n+            />\r\n+          </div>\r\n+          <div>\r\n+            <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n+            <select\r\n+              value={formData.type}\r\n+              onChange={(e) => setFormData({ ...formData, type: e.target.value as Link['type'] })}\r\n+              className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n+            >\r\n+              <option value=\"dataset\">Dataset</option>\r\n+              <option value=\"tool\">Tool</option>\r\n+              <option value=\"database\">Database</option>\r\n+              <option value=\"article\">Article</option>\r\n+              <option value=\"specification\">Specification</option>\r\n+              <option value=\"ieee\">IEEE</option>\r\n+              <option value=\"arxiv\">ArXiv</option>\r\n+              <option value=\"mdpi\">MDPI</option>\r\n+            </select>\r\n+          </div>\r\n+          <div className=\"space-y-2\">\r\n+            <div className=\"flex items-center gap-2\">\r\n+              <StickyNote className=\"w-4 h-4\" />\r\n+              <label className=\"text-sm font-medium text-gray-200\">Notes</label>\r\n+            </div>\r\n+            <textarea\r\n+              value={formData.notes?.content || ''}\r\n+              onChange={(e) => setFormData({\r\n+                ...formData,\r\n+                notes: {\r\n+                  content: e.target.value,\r\n+                  lastUpdated: new Date().toISOString()\r\n+                }\r\n+              })}\r\n+              placeholder=\"Add notes about this resource...\"\r\n+              className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n+            />\r\n+          </div>\r\n+          <div className=\"flex justify-end space-x-2 pt-4\">\r\n+            <Button\r\n+              type=\"button\"\r\n+              variant=\"outline\"\r\n+              onClick={onClose}\r\n+              className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n+            >\r\n+              Cancel\r\n+            </Button>\r\n+            <Button\r\n+              type=\"submit\"\r\n+              className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n+            >\r\n+              {mode === 'add' ? 'Add Link' : 'Save Changes'}\r\n+            </Button>\r\n+          </div>\r\n+        </form>\r\n+      </DialogContent>\r\n+    </Dialog>\r\n+  );\r\n+};\r\n+\r\n+export default LinkDialog;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730139294128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,234 +1,128 @@\n-'use client';\r\n+// LinkDialog.tsx\r\n+\"use client\";\r\n \r\n-import React, { useState, useEffect } from 'react';\r\n-import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Button } from '@/components/ui/button';\r\n-import { Link } from '@/types';\r\n-import { StickyNote } from 'lucide-react';\r\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Dialog,\r\n+  DialogContent,\r\n+  DialogHeader,\r\n+  DialogTitle,\r\n+  DialogDescription,\r\n+} from \"@/components/ui/dialog\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Link } from \"@/types\";\r\n+import { StickyNote } from \"lucide-react\";\r\n \r\n interface LinkDialogProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n   onSave: (link: Link) => void;\r\n   link?: Link;\r\n-  mode: 'add' | 'edit';\r\n+  mode: \"add\" | \"edit\";\r\n+  categoryId?: string;\r\n }\r\n \r\n const LinkDialog: React.FC<LinkDialogProps> = ({\r\n   isOpen,\r\n   onClose,\r\n   onSave,\r\n   link,\r\n-  mode\r\n+  mode,\r\n+  categoryId,\r\n }) => {\r\n   const [formData, setFormData] = useState<Link>(\r\n     link || {\r\n-      title: '',\r\n-      url: '',\r\n-      type: 'dataset',\r\n+      id: \"\", // Add this line\r\n+      title: \"\",\r\n+      url: \"\",\r\n+      type: \"dataset\",\r\n       notes: {\r\n-        content: '',\r\n-        lastUpdated: new Date().toISOString()\r\n-      }\r\n+        content: \"\",\r\n+        lastUpdated: new Date().toISOString(),\r\n+      },\r\n     }\r\n   );\r\n \r\n   useEffect(() => {\r\n-    if (link && mode === 'edit') {\r\n+    if (link && mode === \"edit\") {\r\n       setFormData(link);\r\n-    } else if (!link && mode === 'add') {\r\n+    } else if (!link && mode === \"add\") {\r\n       setFormData({\r\n-        title: '',\r\n-        url: '',\r\n-        type: 'dataset',\r\n+        id: \"\", // Add this line\r\n+        title: \"\",\r\n+        url: \"\",\r\n+        type: \"dataset\",\r\n         notes: {\r\n-          content: '',\r\n-          lastUpdated: new Date().toISOString()\r\n-        }\r\n+          content: \"\",\r\n+          lastUpdated: new Date().toISOString(),\r\n+        },\r\n       });\r\n     }\r\n   }, [link, mode]);\r\n \r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    onSave(formData);\r\n-    onClose();\r\n-  };\r\n-\r\n-  return (\r\n-    <Dialog open={isOpen} onOpenChange={onClose}>\r\n-      <DialogContent className=\"bg-gray-900 text-white\">\r\n-        <DialogHeader>\r\n-          <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n-        </DialogHeader>\r\n-        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n-            <Input\r\n-              value={formData.title}\r\n-              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n-              placeholder=\"Link Title\"\r\n-              className=\"bg-gray-800 border-gray-700 text-white\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n-            <Input\r\n-              value={formData.url}\r\n-              onChange={(e) => setFormData({ ...formData, url: e.target.value })}\r\n-              placeholder=\"Link URL\"\r\n-              className=\"bg-gray-800 border-gray-700 text-white\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n-            <select\r\n-              value={formData.type}\r\n-              onChange={(e) => setFormData({ ...formData, type: e.target.value as Link['type'] })}\r\n-              className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n-            >\r\n-              <option value=\"dataset\">Dataset</option>\r\n-              <option value=\"tool\">Tool</option>\r\n-              <option value=\"database\">Database</option>\r\n-              <option value=\"article\">Article</option>\r\n-              <option value=\"specification\">Specification</option>\r\n-              <option value=\"ieee\">IEEE</option>\r\n-              <option value=\"arxiv\">ArXiv</option>\r\n-              <option value=\"mdpi\">MDPI</option>\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"space-y-2\">\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <StickyNote className=\"w-4 h-4\" />\r\n-              <label className=\"text-sm font-medium text-gray-200\">Notes</label>\r\n-            </div>\r\n-            <textarea\r\n-              value={formData.notes?.content || ''}\r\n-              onChange={(e) => setFormData({\r\n-                ...formData,\r\n-                notes: {\r\n-                  content: e.target.value,\r\n-                  lastUpdated: new Date().toISOString()\r\n-                }\r\n-              })}\r\n-              placeholder=\"Add notes about this resource...\"\r\n-              className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n-            />\r\n-          </div>\r\n-          <div className=\"flex justify-end space-x-2 pt-4\">\r\n-            <Button\r\n-              type=\"button\"\r\n-              variant=\"outline\"\r\n-              onClick={onClose}\r\n-              className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n-            >\r\n-              Cancel\r\n-            </Button>\r\n-            <Button\r\n-              type=\"submit\"\r\n-              className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n-            >\r\n-              {mode === 'add' ? 'Add Link' : 'Save Changes'}\r\n-            </Button>\r\n-          </div>\r\n-        </form>\r\n-      </DialogContent>\r\n-    </Dialog>\r\n-  );\r\n-};\r\n-\r\n-export default LinkDialog;\n-// LinkDialog.tsx\r\n-import React, { useState, useEffect } from 'react';\r\n-import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n-import { Input } from '@/components/ui/input';\r\n-import { Button } from '@/components/ui/button';\r\n-import { Link } from '@/types';\r\n-import { StickyNote } from 'lucide-react';\r\n-\r\n-interface LinkDialogProps {\r\n-  isOpen: boolean;\r\n-  onClose: () => void;\r\n-  onSave: (link: Link) => void;\r\n-  link?: Link;\r\n-  mode: 'add' | 'edit';\r\n-}\r\n-\r\n-const LinkDialog: React.FC<LinkDialogProps> = ({\r\n-  isOpen,\r\n-  onClose,\r\n-  onSave,\r\n-  link,\r\n-  mode\r\n-}) => {\r\n-  // Initialize form data with existing link data or default values\r\n-  const [formData, setFormData] = useState<Link>(\r\n-    link || {\r\n-      title: '',\r\n-      url: '',\r\n-      type: 'dataset',\r\n+    // Include the categoryId in the link data if it exists\r\n+    const linkData = {\r\n+      ...formData,\r\n+      id: formData.id || formData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'), // Generate ID if not exists\r\n       notes: {\r\n-        content: '',\r\n-        lastUpdated: new Date().toISOString()\r\n-      }\r\n-    }\r\n-  );\r\n-\r\n-  // Reset form data when the dialog opens or link changes\r\n-  useEffect(() => {\r\n-    if (link && mode === 'edit') {\r\n-      setFormData(link);\r\n-    } else {\r\n-      setFormData({\r\n-        title: '',\r\n-        url: '',\r\n-        type: 'dataset',\r\n-        notes: {\r\n-          content: '',\r\n-          lastUpdated: new Date().toISOString()\r\n-        }\r\n-      });\r\n-    }\r\n-  }, [link, mode]);\r\n-\r\n-  const handleSubmit = (e: React.FormEvent) => {\r\n-    e.preventDefault();\r\n-    onSave(formData);\r\n+        ...formData.notes,\r\n+        lastUpdated: new Date().toISOString(),\r\n+      },\r\n+    };\r\n+    onSave(linkData);\r\n     onClose();\r\n   };\r\n \r\n   return (\r\n     <Dialog open={isOpen} onOpenChange={onClose}>\r\n       <DialogContent className=\"bg-gray-900 text-white\">\r\n         <DialogHeader>\r\n-          <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n+          <DialogTitle>\r\n+            {mode === \"add\" ? \"Add New Link\" : \"Edit Link\"}\r\n+          </DialogTitle>\r\n+          <DialogDescription>\r\n+            {mode === \"add\" \r\n+              ? \"Add a new resource link to this category\" \r\n+              : \"Edit the existing resource link\"}\r\n+          </DialogDescription>\r\n         </DialogHeader>\r\n         <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n             <Input\r\n               value={formData.title}\r\n-              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n+              onChange={(e) =>\r\n+                setFormData({ ...formData, title: e.target.value })\r\n+              }\r\n               placeholder=\"Link Title\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n             <Input\r\n               value={formData.url}\r\n-              onChange={(e) => setFormData({ ...formData, url: e.target.value })}\r\n+              onChange={(e) =>\r\n+                setFormData({ ...formData, url: e.target.value })\r\n+              }\r\n               placeholder=\"Link URL\"\r\n               className=\"bg-gray-800 border-gray-700 text-white\"\r\n             />\r\n           </div>\r\n           <div>\r\n             <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n             <select\r\n               value={formData.type}\r\n-              onChange={(e) => setFormData({ ...formData, type: e.target.value as Link['type'] })}\r\n+              onChange={(e) =>\r\n+                setFormData({\r\n+                  ...formData,\r\n+                  type: e.target.value as Link[\"type\"],\r\n+                })\r\n+              }\r\n               className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n             >\r\n               <option value=\"dataset\">Dataset</option>\r\n               <option value=\"tool\">Tool</option>\r\n@@ -245,16 +139,18 @@\n               <StickyNote className=\"w-4 h-4\" />\r\n               <label className=\"text-sm font-medium text-gray-200\">Notes</label>\r\n             </div>\r\n             <textarea\r\n-              value={formData.notes?.content || ''}\r\n-              onChange={(e) => setFormData({\r\n-                ...formData,\r\n-                notes: {\r\n-                  content: e.target.value,\r\n-                  lastUpdated: new Date().toISOString()\r\n-                }\r\n-              })}\r\n+              value={formData.notes?.content || \"\"}\r\n+              onChange={(e) =>\r\n+                setFormData({\r\n+                  ...formData,\r\n+                  notes: {\r\n+                    content: e.target.value,\r\n+                    lastUpdated: new Date().toISOString(),\r\n+                  },\r\n+                })\r\n+              }\r\n               placeholder=\"Add notes about this resource...\"\r\n               className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n             />\r\n           </div>\r\n@@ -270,9 +166,9 @@\n             <Button\r\n               type=\"submit\"\r\n               className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n             >\r\n-              {mode === 'add' ? 'Add Link' : 'Save Changes'}\r\n+              {mode === \"add\" ? \"Add Link\" : \"Save Changes\"}\r\n             </Button>\r\n           </div>\r\n         </form>\r\n       </DialogContent>\r\n"
                },
                {
                    "date": 1730196368705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-// LinkDialog.tsx\r\n+// components/LinkDialog.tsx\r\n \"use client\";\r\n \r\n import React, { useState, useEffect } from \"react\";\r\n import {\r\n@@ -12,8 +12,9 @@\n import { Input } from \"@/components/ui/input\";\r\n import { Button } from \"@/components/ui/button\";\r\n import { Link } from \"@/types\";\r\n import { StickyNote } from \"lucide-react\";\r\n+import NotesDialog from \"./NotesDialog\";\r\n \r\n interface LinkDialogProps {\r\n   isOpen: boolean;\r\n   onClose: () => void;\r\n@@ -32,9 +33,9 @@\n   categoryId,\r\n }) => {\r\n   const [formData, setFormData] = useState<Link>(\r\n     link || {\r\n-      id: \"\", // Add this line\r\n+      id: \"\",\r\n       title: \"\",\r\n       url: \"\",\r\n       type: \"dataset\",\r\n       notes: {\r\n@@ -43,14 +44,16 @@\n       },\r\n     }\r\n   );\r\n \r\n+  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\r\n+\r\n   useEffect(() => {\r\n     if (link && mode === \"edit\") {\r\n       setFormData(link);\r\n     } else if (!link && mode === \"add\") {\r\n       setFormData({\r\n-        id: \"\", // Add this line\r\n+        id: \"\",\r\n         title: \"\",\r\n         url: \"\",\r\n         type: \"dataset\",\r\n         notes: {\r\n@@ -62,118 +65,136 @@\n   }, [link, mode]);\r\n \r\n   const handleSubmit = (e: React.FormEvent) => {\r\n     e.preventDefault();\r\n-    // Include the categoryId in the link data if it exists\r\n     const linkData = {\r\n       ...formData,\r\n-      id: formData.id || formData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-'), // Generate ID if not exists\r\n-      notes: {\r\n-        ...formData.notes,\r\n-        lastUpdated: new Date().toISOString(),\r\n-      },\r\n+      id: formData.id || formData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n     };\r\n     onSave(linkData);\r\n     onClose();\r\n   };\r\n \r\n+  const handleNotesUpdate = (updatedNotes: { content: string; lastUpdated: string }) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      notes: updatedNotes\r\n+    }));\r\n+  };\r\n+\r\n   return (\r\n-    <Dialog open={isOpen} onOpenChange={onClose}>\r\n-      <DialogContent className=\"bg-gray-900 text-white\">\r\n-        <DialogHeader>\r\n-          <DialogTitle>\r\n-            {mode === \"add\" ? \"Add New Link\" : \"Edit Link\"}\r\n-          </DialogTitle>\r\n-          <DialogDescription>\r\n-            {mode === \"add\" \r\n-              ? \"Add a new resource link to this category\" \r\n-              : \"Edit the existing resource link\"}\r\n-          </DialogDescription>\r\n-        </DialogHeader>\r\n-        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n-            <Input\r\n-              value={formData.title}\r\n-              onChange={(e) =>\r\n-                setFormData({ ...formData, title: e.target.value })\r\n-              }\r\n-              placeholder=\"Link Title\"\r\n-              className=\"bg-gray-800 border-gray-700 text-white\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n-            <Input\r\n-              value={formData.url}\r\n-              onChange={(e) =>\r\n-                setFormData({ ...formData, url: e.target.value })\r\n-              }\r\n-              placeholder=\"Link URL\"\r\n-              className=\"bg-gray-800 border-gray-700 text-white\"\r\n-            />\r\n-          </div>\r\n-          <div>\r\n-            <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n-            <select\r\n-              value={formData.type}\r\n-              onChange={(e) =>\r\n-                setFormData({\r\n-                  ...formData,\r\n-                  type: e.target.value as Link[\"type\"],\r\n-                })\r\n-              }\r\n-              className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n-            >\r\n-              <option value=\"dataset\">Dataset</option>\r\n-              <option value=\"tool\">Tool</option>\r\n-              <option value=\"database\">Database</option>\r\n-              <option value=\"article\">Article</option>\r\n-              <option value=\"specification\">Specification</option>\r\n-              <option value=\"ieee\">IEEE</option>\r\n-              <option value=\"arxiv\">ArXiv</option>\r\n-              <option value=\"mdpi\">MDPI</option>\r\n-            </select>\r\n-          </div>\r\n-          <div className=\"space-y-2\">\r\n-            <div className=\"flex items-center gap-2\">\r\n-              <StickyNote className=\"w-4 h-4\" />\r\n-              <label className=\"text-sm font-medium text-gray-200\">Notes</label>\r\n+    <>\r\n+      <Dialog open={isOpen} onOpenChange={onClose}>\r\n+        <DialogContent className=\"bg-gray-900 text-white\">\r\n+          <DialogHeader>\r\n+            <DialogTitle>\r\n+              {mode === \"add\" ? \"Add New Link\" : \"Edit Link\"}\r\n+            </DialogTitle>\r\n+            <DialogDescription>\r\n+              {mode === \"add\"\r\n+                ? \"Add a new resource link to this category\"\r\n+                : \"Edit the existing resource link\"}\r\n+            </DialogDescription>\r\n+          </DialogHeader>\r\n+          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n+            <div>\r\n+              <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n+              <Input\r\n+                value={formData.title}\r\n+                onChange={(e) =>\r\n+                  setFormData({ ...formData, title: e.target.value })\r\n+                }\r\n+                placeholder=\"Link Title\"\r\n+                className=\"bg-gray-800 border-gray-700 text-white\"\r\n+              />\r\n             </div>\r\n-            <textarea\r\n-              value={formData.notes?.content || \"\"}\r\n-              onChange={(e) =>\r\n-                setFormData({\r\n-                  ...formData,\r\n-                  notes: {\r\n-                    content: e.target.value,\r\n-                    lastUpdated: new Date().toISOString(),\r\n-                  },\r\n-                })\r\n-              }\r\n-              placeholder=\"Add notes about this resource...\"\r\n-              className=\"w-full min-h-[120px] rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm resize-y focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n-            />\r\n-          </div>\r\n-          <div className=\"flex justify-end space-x-2 pt-4\">\r\n-            <Button\r\n-              type=\"button\"\r\n-              variant=\"outline\"\r\n-              onClick={onClose}\r\n-              className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n-            >\r\n-              Cancel\r\n-            </Button>\r\n-            <Button\r\n-              type=\"submit\"\r\n-              className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n-            >\r\n-              {mode === \"add\" ? \"Add Link\" : \"Save Changes\"}\r\n-            </Button>\r\n-          </div>\r\n-        </form>\r\n-      </DialogContent>\r\n-    </Dialog>\r\n+            <div>\r\n+              <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n+              <Input\r\n+                value={formData.url}\r\n+                onChange={(e) =>\r\n+                  setFormData({ ...formData, url: e.target.value })\r\n+                }\r\n+                placeholder=\"Link URL\"\r\n+                className=\"bg-gray-800 border-gray-700 text-white\"\r\n+              />\r\n+            </div>\r\n+            <div>\r\n+              <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n+              <select\r\n+                value={formData.type}\r\n+                onChange={(e) =>\r\n+                  setFormData({\r\n+                    ...formData,\r\n+                    type: e.target.value as Link[\"type\"],\r\n+                  })\r\n+                }\r\n+                className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n+              >\r\n+                <option value=\"dataset\">Dataset</option>\r\n+                <option value=\"tool\">Tool</option>\r\n+                <option value=\"database\">Database</option>\r\n+                <option value=\"article\">Article</option>\r\n+                <option value=\"specification\">Specification</option>\r\n+                <option value=\"ieee\">IEEE</option>\r\n+                <option value=\"arxiv\">ArXiv</option>\r\n+                <option value=\"mdpi\">MDPI</option>\r\n+              </select>\r\n+            </div>\r\n+\r\n+            {/* Notes Section Preview */}\r\n+            <div className=\"space-y-2\">\r\n+              <div className=\"flex items-center justify-between\">\r\n+                <div className=\"flex items-center gap-2\">\r\n+                  <StickyNote className=\"w-4 h-4 text-gray-400\" />\r\n+                  <span className=\"text-sm font-medium text-gray-200\">Notes</span>\r\n+                </div>\r\n+                <Button\r\n+                  type=\"button\"\r\n+                  variant=\"outline\"\r\n+                  onClick={() => setIsNotesDialogOpen(true)}\r\n+                  className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n+                >\r\n+                  {formData.notes?.content ? \"Edit Notes\" : \"Add Notes\"}\r\n+                </Button>\r\n+              </div>\r\n+              {formData.notes?.content && (\r\n+                <div className=\"text-sm text-gray-400 bg-gray-800 rounded-md p-2\">\r\n+                  {formData.notes.content.length > 150\r\n+                    ? `${formData.notes.content.substring(0, 150)}...`\r\n+                    : formData.notes.content}\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <div className=\"flex justify-end space-x-2 pt-4\">\r\n+              <Button\r\n+                type=\"button\"\r\n+                variant=\"outline\"\r\n+                onClick={onClose}\r\n+                className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n+              >\r\n+                Cancel\r\n+              </Button>\r\n+              <Button\r\n+                type=\"submit\"\r\n+                className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n+              >\r\n+                {mode === \"add\" ? \"Add Link\" : \"Save Changes\"}\r\n+              </Button>\r\n+            </div>\r\n+          </form>\r\n+        </DialogContent>\r\n+      </Dialog>\r\n+\r\n+      <NotesDialog\r\n+        isOpen={isNotesDialogOpen}\r\n+        onClose={() => setIsNotesDialogOpen(false)}\r\n+        onSave={handleNotesUpdate}\r\n+        initialNotes={formData.notes}\r\n+        title={formData.title || \"New Link\"}\r\n+      />\r\n+    </>\r\n   );\r\n };\r\n \r\n export default LinkDialog;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1730236170811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,203 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import {\r\n+  Dialog,\r\n+  DialogContent,\r\n+  DialogHeader,\r\n+  DialogTitle,\r\n+  DialogDescription,\r\n+  DialogFooter,\r\n+} from \"@/components/ui/dialog\";\r\n+import { Input } from \"@/components/ui/input\";\r\n+import { Button } from \"@/components/ui/button\";\r\n+import { Label } from \"@/components/ui/label\";\r\n+import { Link } from \"@/types\";\r\n+import { StickyNote } from \"lucide-react\";\r\n+import NotesDialog from \"./NotesDialog\";\r\n+\r\n+interface LinkDialogProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  onSave: (link: Link) => void;\r\n+  link?: Link;\r\n+  mode: \"add\" | \"edit\";\r\n+  categoryId?: string;\r\n+}\r\n+\r\n+const LinkDialog: React.FC<LinkDialogProps> = ({\r\n+  isOpen,\r\n+  onClose,\r\n+  onSave,\r\n+  link,\r\n+  mode,\r\n+  categoryId,\r\n+}) => {\r\n+  const [formData, setFormData] = useState<Link>(\r\n+    link || {\r\n+      id: \"\",\r\n+      title: \"\",\r\n+      url: \"\",\r\n+      type: \"dataset\",\r\n+      notes: {\r\n+        content: \"\",\r\n+        lastUpdated: new Date().toISOString(),\r\n+      },\r\n+    }\r\n+  );\r\n+\r\n+  const [isNotesDialogOpen, setIsNotesDialogOpen] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    if (link && mode === \"edit\") {\r\n+      setFormData(link);\r\n+    } else if (!link && mode === \"add\") {\r\n+      setFormData({\r\n+        id: \"\",\r\n+        title: \"\",\r\n+        url: \"\",\r\n+        type: \"dataset\",\r\n+        notes: {\r\n+          content: \"\",\r\n+          lastUpdated: new Date().toISOString(),\r\n+        },\r\n+      });\r\n+    }\r\n+  }, [link, mode]);\r\n+\r\n+  const handleSubmit = (e: React.FormEvent) => {\r\n+    e.preventDefault();\r\n+    const linkData = {\r\n+      ...formData,\r\n+      id: formData.id || formData.title.toLowerCase().replace(/[^a-z0-9]+/g, \"-\"),\r\n+    };\r\n+    onSave(linkData);\r\n+    onClose();\r\n+  };\r\n+\r\n+  const handleNotesUpdate = (updatedNotes: { content: string; lastUpdated: string }) => {\r\n+    setFormData(prev => ({\r\n+      ...prev,\r\n+      notes: updatedNotes\r\n+    }));\r\n+  };\r\n+\r\n+  return (\r\n+    <>\r\n+      <Dialog open={isOpen} onOpenChange={onClose}>\r\n+        <DialogContent className=\"bg-gray-900 text-white sm:max-w-md w-full\">\r\n+          <DialogHeader>\r\n+            <DialogTitle className=\"text-xl md:text-2xl\">\r\n+              {mode === \"add\" ? \"Add New Link\" : \"Edit Link\"}\r\n+            </DialogTitle>\r\n+            <DialogDescription className=\"text-gray-400\">\r\n+              {mode === \"add\" \r\n+                ? \"Add a new resource link to this category\" \r\n+                : \"Edit the existing resource link\"\r\n+              }\r\n+            </DialogDescription>\r\n+          </DialogHeader>\r\n+\r\n+          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n+            <div className=\"space-y-2\">\r\n+              <Label className=\"text-sm font-medium text-gray-200\">Title</Label>\r\n+              <Input\r\n+                value={formData.title}\r\n+                onChange={(e) =>\r\n+                  setFormData({ ...formData, title: e.target.value })\r\n+                }\r\n+                placeholder=\"Enter link title\"\r\n+                className=\"bg-gray-800 border-gray-700 text-white h-11\"\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-2\">\r\n+              <Label className=\"text-sm font-medium text-gray-200\">URL</Label>\r\n+              <Input\r\n+                value={formData.url}\r\n+                onChange={(e) =>\r\n+                  setFormData({ ...formData, url: e.target.value })\r\n+                }\r\n+                placeholder=\"Enter link URL\"\r\n+                className=\"bg-gray-800 border-gray-700 text-white h-11\"\r\n+              />\r\n+            </div>\r\n+\r\n+            <div className=\"space-y-2\">\r\n+              <Label className=\"text-sm font-medium text-gray-200\">Type</Label>\r\n+              <select\r\n+                value={formData.type}\r\n+                onChange={(e) =>\r\n+                  setFormData({\r\n+                    ...formData,\r\n+                    type: e.target.value as Link[\"type\"],\r\n+                  })\r\n+                }\r\n+                className=\"w-full h-11 rounded-md border border-gray-700 bg-gray-800 text-white px-3 text-sm focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\r\n+              >\r\n+                <option value=\"dataset\">Dataset</option>\r\n+                <option value=\"tool\">Tool</option>\r\n+                <option value=\"database\">Database</option>\r\n+                <option value=\"article\">Article</option>\r\n+                <option value=\"specification\">Specification</option>\r\n+                <option value=\"ieee\">IEEE</option>\r\n+                <option value=\"arxiv\">ArXiv</option>\r\n+                <option value=\"mdpi\">MDPI</option>\r\n+              </select>\r\n+            </div>\r\n+\r\n+            {/* Notes Section Preview */}\r\n+            <div className=\"space-y-2 bg-gray-800 rounded-lg p-4\">\r\n+              <div className=\"flex items-center justify-between\">\r\n+                <div className=\"flex items-center gap-2\">\r\n+                  <StickyNote className=\"w-4 h-4 text-gray-400\" />\r\n+                  <Label className=\"text-sm font-medium text-gray-200\">Notes</Label>\r\n+                </div>\r\n+                <Button\r\n+                  type=\"button\"\r\n+                  variant=\"outline\"\r\n+                  onClick={() => setIsNotesDialogOpen(true)}\r\n+                  className=\"bg-transparent border-gray-700 text-white hover:bg-gray-700 h-9\"\r\n+                >\r\n+                  {formData.notes?.content ? \"Edit Notes\" : \"Add Notes\"}\r\n+                </Button>\r\n+              </div>\r\n+              {formData.notes?.content && (\r\n+                <div className=\"text-sm text-gray-400 bg-gray-900 rounded-md p-3 mt-2\">\r\n+                  {formData.notes.content.length > 150\r\n+                    ? `${formData.notes.content.substring(0, 150)}...`\r\n+                    : formData.notes.content}\r\n+                </div>\r\n+              )}\r\n+            </div>\r\n+\r\n+            <DialogFooter className=\"sm:justify-between gap-4 mt-6\">\r\n+              <Button\r\n+                type=\"button\"\r\n+                variant=\"outline\"\r\n+                onClick={onClose}\r\n+                className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800 flex-1 sm:flex-none h-11\"\r\n+              >\r\n+                Cancel\r\n+              </Button>\r\n+              <Button\r\n+                type=\"submit\"\r\n+                className=\"bg-blue-600 text-white hover:bg-blue-700 flex-1 sm:flex-none h-11\"\r\n+              >\r\n+                {mode === \"add\" ? \"Add Link\" : \"Save Changes\"}\r\n+              </Button>\r\n+            </DialogFooter>\r\n+          </form>\r\n+        </DialogContent>\r\n+      </Dialog>\r\n+\r\n+      <NotesDialog\r\n+        isOpen={isNotesDialogOpen}\r\n+        onClose={() => setIsNotesDialogOpen(false)}\r\n+        onSave={handleNotesUpdate}\r\n+        initialNotes={formData.notes}\r\n+        title={formData.title || \"New Link\"}\r\n+      />\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default LinkDialog;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1730128529252,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Link } from '@/types';\r\n\r\ninterface LinkDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (link: Link) => void;\r\n  link?: Link;\r\n  mode: 'add' | 'edit';\r\n}\r\n\r\nconst LinkDialog: React.FC<LinkDialogProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  link,\r\n  mode\r\n}) => {\r\n  const [formData, setFormData] = useState<Link>(\r\n    link || {\r\n      title: '',\r\n      url: '',\r\n      type: 'dataset'\r\n    }\r\n  );\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"bg-gray-900 text-white\">\r\n        <DialogHeader>\r\n          <DialogTitle>{mode === 'add' ? 'Add New Link' : 'Edit Link'}</DialogTitle>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-200\">Title</label>\r\n            <Input\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n              placeholder=\"Link Title\"\r\n              className=\"bg-gray-800 border-gray-700 text-white\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-200\">URL</label>\r\n            <Input\r\n              value={formData.url}\r\n              onChange={(e) => setFormData({ ...formData, url: e.target.value })}\r\n              placeholder=\"Link URL\"\r\n              className=\"bg-gray-800 border-gray-700 text-white\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"text-sm font-medium text-gray-200\">Type</label>\r\n            <select\r\n              value={formData.type}\r\n              onChange={(e) => setFormData({ ...formData, type: e.target.value as Link['type'] })}\r\n              className=\"w-full h-10 rounded-md border border-gray-700 bg-gray-800 text-white px-3 py-2 text-sm\"\r\n            >\r\n              <option value=\"dataset\">Dataset</option>\r\n              <option value=\"tool\">Tool</option>\r\n              <option value=\"database\">Database</option>\r\n              <option value=\"article\">Article</option>\r\n              <option value=\"specification\">Specification</option>\r\n              <option value=\"ieee\">IEEE</option>\r\n              <option value=\"arxiv\">ArXiv</option>\r\n              <option value=\"mdpi\">MDPI</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex justify-end space-x-2 pt-4\">\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              onClick={onClose}\r\n              className=\"bg-transparent border-gray-700 text-white hover:bg-gray-800\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"bg-blue-600 text-white hover:bg-blue-700\"\r\n            >\r\n              {mode === 'add' ? 'Add Link' : 'Save Changes'}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LinkDialog;"
        }
    ]
}