{
    "sourceFile": "components/NotificationMenu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1730204794742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730206055478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,17 @@\n // components/NotificationMenu.tsx\r\n 'use client';\r\n \r\n import React, { useState } from 'react';\r\n-import { Bell, Check, Trash2, CheckCheck } from 'lucide-react';\r\n+import { \r\n+  Bell, \r\n+  Check, \r\n+  Trash2, \r\n+  CheckCheck,\r\n+  Plus,\r\n+  Edit,\r\n+  StickyNote\r\n+} from 'lucide-react';\r\n import { formatDistanceToNow } from 'date-fns';\r\n import { useNotifications } from '@/contexts/NotificationContext';\r\n import { Notification } from '@/types/notification';\r\n \r\n"
                },
                {
                    "date": 1730232373029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n import React, { useState } from 'react';\r\n import { \r\n   Bell, \r\n-  Check, \r\n-  Trash2, \r\n+  Check,\r\n+  Trash2,\r\n   CheckCheck,\r\n   Plus,\r\n   Edit,\r\n   StickyNote\r\n"
                },
                {
                    "date": 1730236769839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,25 @@\n-// components/NotificationMenu.tsx\r\n-'use client';\r\n-\r\n import React, { useState } from 'react';\r\n import { \r\n   Bell, \r\n-  Check,\r\n-  Trash2,\r\n+  Check, \r\n+  Trash2, \r\n   CheckCheck,\r\n   Plus,\r\n   Edit,\r\n-  StickyNote\r\n+  StickyNote,\r\n+  X\r\n } from 'lucide-react';\r\n import { formatDistanceToNow } from 'date-fns';\r\n import { useNotifications } from '@/contexts/NotificationContext';\r\n import { Notification } from '@/types/notification';\r\n+import {\r\n+  Sheet,\r\n+  SheetContent,\r\n+  SheetHeader,\r\n+  SheetTitle,\r\n+  SheetTrigger,\r\n+} from \"@/components/ui/sheet\";\r\n \r\n const NotificationItem = ({ \r\n   notification,\r\n   onMarkAsRead,\r\n@@ -47,29 +52,29 @@\n     <div className={`p-4 ${notification.read ? 'bg-gray-800' : 'bg-gray-900'} border-b border-gray-700 hover:bg-gray-800 transition-colors`}>\r\n       <div className=\"flex items-start justify-between gap-2\">\r\n         <div className=\"flex items-start gap-3\">\r\n           <div className=\"mt-1\">{getIcon()}</div>\r\n-          <div>\r\n-            <h4 className=\"text-sm font-medium text-white\">{notification.title}</h4>\r\n-            <p className=\"text-sm text-gray-400 mt-1\">{notification.message}</p>\r\n+          <div className=\"flex-1 min-w-0\">\r\n+            <h4 className=\"text-sm font-medium text-white truncate\">{notification.title}</h4>\r\n+            <p className=\"text-sm text-gray-400 mt-1 break-words\">{notification.message}</p>\r\n             <span className=\"text-xs text-gray-500 mt-2 block\">\r\n               {formatDistanceToNow(new Date(notification.timestamp), { addSuffix: true })}\r\n             </span>\r\n           </div>\r\n         </div>\r\n-        <div className=\"flex items-center gap-2\">\r\n+        <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n           {!notification.read && (\r\n             <button\r\n               onClick={onMarkAsRead}\r\n-              className=\"text-gray-400 hover:text-blue-400 transition-colors\"\r\n+              className=\"text-gray-400 hover:text-blue-400 transition-colors p-2\"\r\n               title=\"Mark as read\"\r\n             >\r\n               <Check className=\"w-4 h-4\" />\r\n             </button>\r\n           )}\r\n           <button\r\n             onClick={onDismiss}\r\n-            className=\"text-gray-400 hover:text-red-400 transition-colors\"\r\n+            className=\"text-gray-400 hover:text-red-400 transition-colors p-2\"\r\n             title=\"Dismiss\"\r\n           >\r\n             <Trash2 className=\"w-4 h-4\" />\r\n           </button>\r\n@@ -79,34 +84,30 @@\n   );\r\n };\r\n \r\n const NotificationMenu = () => {\r\n-  const [isOpen, setIsOpen] = useState(false);\r\n   const { notifications, unreadCount, markAsRead, markAllAsRead, dismissNotification } = useNotifications();\r\n \r\n   return (\r\n     <div className=\"relative\">\r\n-      <button\r\n-        onClick={() => setIsOpen(!isOpen)}\r\n-        className=\"relative p-2 text-gray-400 hover:text-white transition-colors\"\r\n-      >\r\n-        <Bell className=\"w-6 h-6\" />\r\n-        {unreadCount > 0 && (\r\n-          <span className=\"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full\">\r\n-            {unreadCount}\r\n-          </span>\r\n-        )}\r\n-      </button>\r\n-\r\n-      {isOpen && (\r\n-        <>\r\n-          <div\r\n-            className=\"fixed inset-0 z-40\"\r\n-            onClick={() => setIsOpen(false)}\r\n-          />\r\n-          <div className=\"absolute right-0 mt-2 w-96 bg-gray-900 rounded-lg shadow-lg overflow-hidden z-50 border border-gray-700\">\r\n-            <div className=\"p-4 border-b border-gray-700 flex items-center justify-between\">\r\n-              <h3 className=\"text-lg font-semibold text-white\">Notifications</h3>\r\n+      <Sheet>\r\n+        <SheetTrigger asChild>\r\n+          <button className=\"relative p-2 text-gray-400 hover:text-white transition-colors\">\r\n+            <Bell className=\"w-6 h-6\" />\r\n+            {unreadCount > 0 && (\r\n+              <span className=\"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full\">\r\n+                {unreadCount}\r\n+              </span>\r\n+            )}\r\n+          </button>\r\n+        </SheetTrigger>\r\n+        <SheetContent \r\n+          side=\"right\" \r\n+          className=\"w-full sm:max-w-md bg-gray-900 text-white border-l border-gray-800\"\r\n+        >\r\n+          <SheetHeader className=\"space-y-4\">\r\n+            <div className=\"flex items-center justify-between\">\r\n+              <SheetTitle className=\"text-white text-xl\">Notifications</SheetTitle>\r\n               {unreadCount > 0 && (\r\n                 <button\r\n                   onClick={() => markAllAsRead()}\r\n                   className=\"text-sm text-gray-400 hover:text-blue-400 flex items-center gap-1\"\r\n@@ -115,10 +116,12 @@\n                   Mark all as read\r\n                 </button>\r\n               )}\r\n             </div>\r\n-            \r\n-            <div className=\"max-h-[calc(100vh-200px)] overflow-y-auto\">\r\n+          </SheetHeader>\r\n+\r\n+          <div className=\"mt-6 -mx-6\">\r\n+            <div className=\"max-h-[calc(100vh-8rem)] overflow-y-auto\">\r\n               {notifications.length > 0 ? (\r\n                 notifications.map((notification) => (\r\n                   <NotificationItem\r\n                     key={notification.id}\r\n@@ -133,10 +136,10 @@\n                 </div>\r\n               )}\r\n             </div>\r\n           </div>\r\n-        </>\r\n-      )}\r\n+        </SheetContent>\r\n+      </Sheet>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                }
            ],
            "date": 1730204794742,
            "name": "Commit-0",
            "content": "// components/NotificationMenu.tsx\r\n'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { Bell, Check, Trash2, CheckCheck } from 'lucide-react';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useNotifications } from '@/contexts/NotificationContext';\r\nimport { Notification } from '@/types/notification';\r\n\r\nconst NotificationItem = ({ \r\n  notification,\r\n  onMarkAsRead,\r\n  onDismiss \r\n}: { \r\n  notification: Notification;\r\n  onMarkAsRead: () => void;\r\n  onDismiss: () => void;\r\n}) => {\r\n  const getIcon = () => {\r\n    switch (notification.type) {\r\n      case 'category_created':\r\n      case 'link_created':\r\n        return <Plus className=\"w-4 h-4 text-green-400\" />;\r\n      case 'category_updated':\r\n      case 'link_updated':\r\n      case 'note_updated':\r\n        return <Edit className=\"w-4 h-4 text-blue-400\" />;\r\n      case 'category_deleted':\r\n      case 'link_deleted':\r\n        return <Trash2 className=\"w-4 h-4 text-red-400\" />;\r\n      case 'note_created':\r\n        return <StickyNote className=\"w-4 h-4 text-purple-400\" />;\r\n      default:\r\n        return <Bell className=\"w-4 h-4 text-gray-400\" />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`p-4 ${notification.read ? 'bg-gray-800' : 'bg-gray-900'} border-b border-gray-700 hover:bg-gray-800 transition-colors`}>\r\n      <div className=\"flex items-start justify-between gap-2\">\r\n        <div className=\"flex items-start gap-3\">\r\n          <div className=\"mt-1\">{getIcon()}</div>\r\n          <div>\r\n            <h4 className=\"text-sm font-medium text-white\">{notification.title}</h4>\r\n            <p className=\"text-sm text-gray-400 mt-1\">{notification.message}</p>\r\n            <span className=\"text-xs text-gray-500 mt-2 block\">\r\n              {formatDistanceToNow(new Date(notification.timestamp), { addSuffix: true })}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          {!notification.read && (\r\n            <button\r\n              onClick={onMarkAsRead}\r\n              className=\"text-gray-400 hover:text-blue-400 transition-colors\"\r\n              title=\"Mark as read\"\r\n            >\r\n              <Check className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n          <button\r\n            onClick={onDismiss}\r\n            className=\"text-gray-400 hover:text-red-400 transition-colors\"\r\n            title=\"Dismiss\"\r\n          >\r\n            <Trash2 className=\"w-4 h-4\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NotificationMenu = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const { notifications, unreadCount, markAsRead, markAllAsRead, dismissNotification } = useNotifications();\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"relative p-2 text-gray-400 hover:text-white transition-colors\"\r\n      >\r\n        <Bell className=\"w-6 h-6\" />\r\n        {unreadCount > 0 && (\r\n          <span className=\"absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full\">\r\n            {unreadCount}\r\n          </span>\r\n        )}\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <>\r\n          <div\r\n            className=\"fixed inset-0 z-40\"\r\n            onClick={() => setIsOpen(false)}\r\n          />\r\n          <div className=\"absolute right-0 mt-2 w-96 bg-gray-900 rounded-lg shadow-lg overflow-hidden z-50 border border-gray-700\">\r\n            <div className=\"p-4 border-b border-gray-700 flex items-center justify-between\">\r\n              <h3 className=\"text-lg font-semibold text-white\">Notifications</h3>\r\n              {unreadCount > 0 && (\r\n                <button\r\n                  onClick={() => markAllAsRead()}\r\n                  className=\"text-sm text-gray-400 hover:text-blue-400 flex items-center gap-1\"\r\n                >\r\n                  <CheckCheck className=\"w-4 h-4\" />\r\n                  Mark all as read\r\n                </button>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"max-h-[calc(100vh-200px)] overflow-y-auto\">\r\n              {notifications.length > 0 ? (\r\n                notifications.map((notification) => (\r\n                  <NotificationItem\r\n                    key={notification.id}\r\n                    notification={notification}\r\n                    onMarkAsRead={() => markAsRead(notification.id)}\r\n                    onDismiss={() => dismissNotification(notification.id)}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div className=\"p-4 text-center text-gray-400\">\r\n                  No notifications\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationMenu;"
        }
    ]
}