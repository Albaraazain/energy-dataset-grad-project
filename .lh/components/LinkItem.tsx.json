{
    "sourceFile": "components/LinkItem.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1730236623733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1730236623733,
            "name": "Commit-0",
            "content": "import React from 'react';\r\nimport {\r\n  Edit,\r\n  Trash2,\r\n  ExternalLink,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  StickyNote,\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { Link as DatasetLink } from '@/types';\r\n\r\ninterface LinkItemProps {\r\n  link: DatasetLink;\r\n  isExpanded: boolean;\r\n  onToggleExpand: () => void;\r\n  onEdit: () => void;\r\n  onEditNotes: () => void;\r\n  onDelete: () => void;\r\n  getBadgeColor: (type: string) => string;\r\n}\r\n\r\nconst LinkItem: React.FC<LinkItemProps> = ({\r\n  link,\r\n  isExpanded,\r\n  onToggleExpand,\r\n  onEdit,\r\n  onEditNotes,\r\n  onDelete,\r\n  getBadgeColor,\r\n}) => {\r\n  const hasNotes = !!link.notes?.content;\r\n\r\n  return (\r\n    <div className=\"group bg-white bg-opacity-5 rounded-xl transition-all duration-300 border border-white border-opacity-5 hover:border-blue-400 hover:border-opacity-30\">\r\n      <div className=\"p-4 sm:p-6\">\r\n        <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center gap-3\">\r\n            <h3 className=\"text-base sm:text-lg text-gray-200 group-hover:text-blue-400 transition-colors line-clamp-2 sm:line-clamp-1\">\r\n              {link.title}\r\n            </h3>\r\n            <div className=\"flex flex-wrap gap-2 items-center\">\r\n              <Badge className={`${getBadgeColor(link.type)} text-white`}>\r\n                {link.type}\r\n              </Badge>\r\n              {hasNotes && !isExpanded && (\r\n                <button\r\n                  onClick={onToggleExpand}\r\n                  className=\"flex items-center gap-1 text-xs text-gray-400 hover:text-blue-400 transition-colors\"\r\n                >\r\n                  <StickyNote className=\"w-3 h-3\" />\r\n                  <span className=\"hidden sm:inline\">View notes</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2 sm:gap-3\">\r\n            {!isExpanded && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                className=\"text-gray-400 hover:text-blue-400\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onEditNotes();\r\n                }}\r\n              >\r\n                <StickyNote className=\"w-4 h-4\" />\r\n              </Button>\r\n            )}\r\n            {hasNotes && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                className=\"text-gray-400 hover:text-blue-400\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onToggleExpand();\r\n                }}\r\n              >\r\n                {isExpanded ? (\r\n                  <ChevronUp className=\"w-4 h-4\" />\r\n                ) : (\r\n                  <ChevronDown className=\"w-4 h-4\" />\r\n                )}\r\n              </Button>\r\n            )}\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                className=\"text-gray-400 hover:text-blue-400\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onEdit();\r\n                }}\r\n              >\r\n                <Edit className=\"w-4 h-4\" />\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                className=\"text-gray-400 hover:text-red-400\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onDelete();\r\n                }}\r\n              >\r\n                <Trash2 className=\"w-4 h-4\" />\r\n              </Button>\r\n              {link.url !== \"#\" && (\r\n                <a\r\n                  href={link.url}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  className=\"text-gray-400 hover:text-blue-400 p-2\"\r\n                  onClick={(e) => e.stopPropagation()}\r\n                >\r\n                  <ExternalLink className=\"w-4 h-4\" />\r\n                </a>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {isExpanded && link.notes && (\r\n          <div className=\"mt-4 space-y-2\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n                <StickyNote className=\"w-4 h-4\" />\r\n                <span>Notes</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-4\">\r\n                {link.notes.lastUpdated && (\r\n                  <span className=\"text-xs text-gray-500\">\r\n                    Updated {formatDistanceToNow(new Date(link.notes.lastUpdated))} ago\r\n                  </span>\r\n                )}\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onEditNotes();\r\n                  }}\r\n                  className=\"text-gray-400 hover:text-blue-400\"\r\n                >\r\n                  <Edit className=\"w-4 h-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"text-sm text-gray-300 whitespace-pre-wrap bg-gray-800 bg-opacity-50 rounded-lg p-3\">\r\n              {link.notes.content}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkItem;"
        }
    ]
}