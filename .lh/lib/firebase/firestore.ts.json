{
    "sourceFile": "lib/firebase/firestore.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1730136844200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1730136850471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,83 @@\n+import { \r\n+  collection, \r\n+  doc,\r\n+  getDocs, \r\n+  setDoc, \r\n+  deleteDoc, \r\n+  onSnapshot,\r\n+  query,\r\n+  serverTimestamp,\r\n+  DocumentReference,\r\n+  CollectionReference\r\n+} from 'firebase/firestore';\r\n import { db } from './config';\r\n-import { collection, getDocs, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\r\n-import { Category } from '@/types';\r\n+import { Category, Link } from '@/types';\r\n \r\n+// Collection names\r\n const CATEGORIES_COLLECTION = 'categories';\r\n \r\n-export const firestoreDB = {\r\n-  // We'll add methods here in the next step\r\n-  categoriesRef: collection(db, CATEGORIES_COLLECTION),\r\n+// Types for Firestore\r\n+export interface FirestoreCategory extends Omit<Category, 'id' | 'links'> {\r\n+  createdAt?: Date;\r\n+  updatedAt?: Date;\r\n+}\r\n+\r\n+export interface FirestoreLink extends Omit<Link, 'id'> {\r\n+  createdAt?: Date;\r\n+  updatedAt?: Date;\r\n+}\r\n+\r\n+// Helper functions\r\n+export const firestoreDb = {\r\n+  // Categories\r\n+  categories: {\r\n+    getRef: () => collection(db, CATEGORIES_COLLECTION),\r\n+    getDocRef: (id: string) => doc(db, CATEGORIES_COLLECTION, id),\r\n+    \r\n+    // Links subcollection\r\n+    links: {\r\n+      getRef: (categoryId: string) => \r\n+        collection(db, CATEGORIES_COLLECTION, categoryId, 'links'),\r\n+      getDocRef: (categoryId: string, linkId: string) => \r\n+        doc(db, CATEGORIES_COLLECTION, categoryId, 'links', linkId),\r\n+    }\r\n+  },\r\n+\r\n+  // Helpers for timestamps\r\n+  serverTimestamp: serverTimestamp,\r\n+};\r\n+\r\n+// Type guards and converters\r\n+export const categoryConverter = {\r\n+  toFirestore: (category: FirestoreCategory) => {\r\n+    return {\r\n+      ...category,\r\n+      updatedAt: firestoreDb.serverTimestamp(),\r\n+      createdAt: category.createdAt || firestoreDb.serverTimestamp(),\r\n+    };\r\n+  },\r\n+  fromFirestore: (snapshot: any, options: any) => {\r\n+    const data = snapshot.data(options);\r\n+    return {\r\n+      ...data,\r\n+      id: snapshot.id,\r\n+    };\r\n+  },\r\n+};\r\n+\r\n+export const linkConverter = {\r\n+  toFirestore: (link: FirestoreLink) => {\r\n+    return {\r\n+      ...link,\r\n+      updatedAt: firestoreDb.serverTimestamp(),\r\n+      createdAt: link.createdAt || firestoreDb.serverTimestamp(),\r\n+    };\r\n+  },\r\n+  fromFirestore: (snapshot: any, options: any) => {\r\n+    const data = snapshot.data(options);\r\n+    return {\r\n+      ...data,\r\n+      id: snapshot.id,\r\n+    };\r\n+  },\r\n };\n\\ No newline at end of file\n"
                }
            ],
            "date": 1730136844200,
            "name": "Commit-0",
            "content": "import { db } from './config';\r\nimport { collection, getDocs, doc, setDoc, deleteDoc, onSnapshot } from 'firebase/firestore';\r\nimport { Category } from '@/types';\r\n\r\nconst CATEGORIES_COLLECTION = 'categories';\r\n\r\nexport const firestoreDB = {\r\n  // We'll add methods here in the next step\r\n  categoriesRef: collection(db, CATEGORIES_COLLECTION),\r\n};"
        }
    ]
}